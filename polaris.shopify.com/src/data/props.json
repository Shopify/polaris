{
  "Polaris": {
    "polaris-react/src/configure.ts": {
      "filePath": "polaris-react/src/configure.ts",
      "name": "Polaris",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/configure.ts",
          "syntaxKind": "PropertySignature",
          "name": "VERSION",
          "value": "string",
          "description": ""
        }
      ],
      "value": "export interface Polaris {\n  VERSION: string;\n}"
    }
  },
  "OptionDescriptor": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "OptionDescriptor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Value of the option"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Display label for the option"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether the option is disabled or not",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Whether the option is active or not",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "Unique identifier for the option",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "React.ReactElement<IconProps | ThumbnailProps | AvatarProps>",
          "description": "Media to display to the left of the option content",
          "isOptional": true
        }
      ],
      "value": "export interface OptionDescriptor {\n  /** Value of the option */\n  value: string;\n  /** Display label for the option */\n  label: React.ReactNode;\n  /** Whether the option is disabled or not */\n  disabled?: boolean;\n  /** Whether the option is active or not */\n  active?: boolean;\n  /** Unique identifier for the option */\n  id?: string;\n  /** Media to display to the left of the option content */\n  media?: React.ReactElement<IconProps | ThumbnailProps | AvatarProps>;\n}"
    }
  },
  "SectionDescriptor": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "SectionDescriptor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "options",
          "value": "OptionDescriptor[]",
          "description": "Collection of options within the section"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Section title",
          "isOptional": true
        }
      ],
      "value": "export interface SectionDescriptor {\n  /** Collection of options within the section */\n  options: OptionDescriptor[];\n  /** Section title */\n  title?: string;\n}"
    }
  },
  "Descriptor": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Descriptor",
      "value": "SectionDescriptor | OptionDescriptor",
      "description": ""
    }
  },
  "IconSource": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IconSource",
      "value": "React.FunctionComponent<React.SVGProps<SVGSVGElement>> | 'placeholder' | string",
      "description": ""
    }
  },
  "HeadingTagName": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "HeadingTagName",
      "value": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p'",
      "description": ""
    }
  },
  "Error": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Error",
      "value": "string | React.ReactElement | (string | React.ReactElement)[]",
      "description": ""
    }
  },
  "BaseButton": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "BaseButton",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the href attribute of a link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "download",
          "value": "string | boolean",
          "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "submit",
          "value": "boolean",
          "description": "Allows the button to submit a form",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables the button, disallowing merchant interaction",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Replaces button text with a spinner while a background action is being performed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "pressed",
          "value": "boolean",
          "description": "Sets the button in a pressed state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "A valid WAI-ARIA role to define the semantic value of this element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the button controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "ariaDescribedBy",
          "value": "string",
          "description": "Indicates the ID of the element that describes the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "ariaChecked",
          "value": "\"false\" | \"true\"",
          "description": "Indicates the current checked state of the button when acting as a toggle or switch",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when button becomes focussed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus leaves button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onKeyPress",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keypress event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onKeyUp",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keyup event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onKeyDown",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keydown event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onPointerDown",
          "value": "() => void",
          "description": "Callback when pointerdown event is being triggered",
          "isOptional": true
        }
      ],
      "value": "export interface BaseButton {\n  /** A unique identifier for the button */\n  id?: string;\n  /** A destination to link to, rendered in the href attribute of a link */\n  url?: string;\n  /** Forces url to open in a new tab */\n  external?: boolean;\n  /** Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value */\n  download?: string | boolean;\n  /** Allows the button to submit a form */\n  submit?: boolean;\n  /** Disables the button, disallowing merchant interaction */\n  disabled?: boolean;\n  /** Replaces button text with a spinner while a background action is being performed */\n  loading?: boolean;\n  /** Sets the button in a pressed state */\n  pressed?: boolean;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** A valid WAI-ARIA role to define the semantic value of this element */\n  role?: string;\n  /** Id of the element the button controls */\n  ariaControls?: string;\n  /** Tells screen reader the controlled element is expanded */\n  ariaExpanded?: boolean;\n  /** Indicates the ID of the element that describes the button */\n  ariaDescribedBy?: string;\n  /** Indicates the current checked state of the button when acting as a toggle or switch */\n  ariaChecked?: 'false' | 'true';\n  /** Callback when clicked */\n  onClick?(): void;\n  /** Callback when button becomes focussed */\n  onFocus?(): void;\n  /** Callback when focus leaves button */\n  onBlur?(): void;\n  /** Callback when a keypress event is registered on the button */\n  onKeyPress?(event: React.KeyboardEvent<HTMLButtonElement>): void;\n  /** Callback when a keyup event is registered on the button */\n  onKeyUp?(event: React.KeyboardEvent<HTMLButtonElement>): void;\n  /** Callback when a keydown event is registered on the button */\n  onKeyDown?(event: React.KeyboardEvent<HTMLButtonElement>): void;\n  /** Callback when mouse enter */\n  onMouseEnter?(): void;\n  /** Callback when element is touched */\n  onTouchStart?(): void;\n  /** Callback when pointerdown event is being triggered */\n  onPointerDown?(): void;\n}"
    }
  },
  "Action": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "Action",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface Action {\n  /** A unique identifier for the action */\n  id?: string;\n  /** Content the action displays */\n  content?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** A destination to link to, rendered in the action */\n  url?: string;\n  /** Forces url to open in a new tab */\n  external?: boolean;\n  /** Callback when an action takes place */\n  onAction?(): void;\n  /** Callback when mouse enter */\n  onMouseEnter?(): void;\n  /** Callback when element is touched */\n  onTouchStart?(): void;\n}"
    }
  },
  "LinkAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "LinkAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to"
        }
      ],
      "value": "export interface LinkAction {\n  /** A unique identifier for the action */\n  id?: string;\n  /** Content the action displays */\n  content?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** A destination to link to */\n  url: string;\n}"
    }
  },
  "BadgeAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "BadgeAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ status: \"new\"; content: string; }",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface BadgeAction {\n  badge?: {\n    status: 'new';\n    content: string;\n  };\n}"
    }
  },
  "BaseCallbackAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "BaseCallbackAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place"
        }
      ],
      "value": "export interface BaseCallbackAction {\n  /** A unique identifier for the action */\n  id?: string;\n  /** Content the action displays */\n  content?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** Callback when an action takes place */\n  onAction(): void;\n}"
    }
  },
  "CallbackAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "CallbackAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place"
        }
      ],
      "value": "export interface CallbackAction extends BaseCallbackAction {}"
    }
  },
  "DisableableAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "DisableableAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface DisableableAction extends Action {\n  /** Whether or not the action is disabled */\n  disabled?: boolean;\n}"
    }
  },
  "DestructableAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "DestructableAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Destructive action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface DestructableAction extends Action {\n  /** Destructive action */\n  destructive?: boolean;\n}"
    }
  },
  "IconableAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "IconableAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Source of the icon",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface IconableAction extends Action {\n  /** Source of the icon */\n  icon?: IconSource;\n}"
    }
  },
  "LoadableAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "LoadableAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Should a spinner be displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface LoadableAction extends Action {\n  /** Should a spinner be displayed */\n  loading?: boolean;\n}"
    }
  },
  "OutlineableAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "OutlineableAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "boolean",
          "description": "Should action be displayed as an outlined button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface OutlineableAction extends Action {\n  /** Should action be displayed as an outlined button */\n  outline?: boolean;\n}"
    }
  },
  "PlainAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "PlainAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "plain",
          "value": "boolean",
          "description": "Should action be displayed as a plain link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "export interface PlainAction extends Action {\n  /** Should action be displayed as a plain link */\n  plain?: boolean;\n}"
    }
  },
  "TooltipAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "TooltipAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Text content to render in a tooltip",
          "isOptional": true
        }
      ],
      "value": "export interface TooltipAction {\n  /** Text content to render in a tooltip */\n  helpText?: React.ReactNode;\n}"
    }
  },
  "ActionListItemDescriptor": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "ActionListItemDescriptor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ status: \"new\"; content: string; }",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Badge component"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional hint text to display with item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Source of the icon"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "image",
          "value": "string",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Image source"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "React.ReactNode",
          "description": "Prefix source",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "React.ReactNode",
          "description": "Suffix source",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "ellipsis",
          "value": "boolean",
          "description": "Add an ellipsis suffix to action content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Whether the action is active or not",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "Defines a role for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Destructive action",
          "isOptional": true
        }
      ],
      "value": "export interface ActionListItemDescriptor\n  extends DisableableAction,\n    DestructableAction {\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** @deprecated Badge component */\n  badge?: {\n    status: 'new';\n    content: string;\n  };\n  /** Additional hint text to display with item */\n  helpText?: React.ReactNode;\n  /** @deprecated Source of the icon */\n  icon?: IconSource;\n  /** @deprecated Image source */\n  image?: string;\n  /** Prefix source */\n  prefix?: React.ReactNode;\n  /** Suffix source */\n  suffix?: React.ReactNode;\n  /**  Add an ellipsis suffix to action content */\n  ellipsis?: boolean;\n  /** Whether the action is active or not */\n  active?: boolean;\n  /** Defines a role for the action */\n  role?: string;\n}"
    }
  },
  "ActionListSection": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "ActionListSection",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Section title",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "readonly ActionListItemDescriptor[]",
          "description": "Collection of action items for the list"
        }
      ],
      "value": "export interface ActionListSection {\n  /** Section title */\n  title?: string;\n  /** Collection of action items for the list */\n  items: readonly ActionListItemDescriptor[];\n}"
    }
  },
  "ComplexAction": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "ComplexAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Destructive action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Source of the icon",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "boolean",
          "description": "Should action be displayed as an outlined button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Should a spinner be displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "plain",
          "value": "boolean",
          "description": "Should action be displayed as a plain link",
          "isOptional": true
        }
      ],
      "value": "export interface ComplexAction\n  extends Action,\n    DisableableAction,\n    DestructableAction,\n    IconableAction,\n    OutlineableAction,\n    LoadableAction,\n    PlainAction {}"
    }
  },
  "MenuActionDescriptor": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "MenuActionDescriptor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": "Zero-indexed numerical position. Overrides the action's order in the menu",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Destructive action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Source of the icon",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "boolean",
          "description": "Should action be displayed as an outlined button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Should a spinner be displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "plain",
          "value": "boolean",
          "description": "Should action be displayed as a plain link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Text content to render in a tooltip",
          "isOptional": true
        }
      ],
      "value": "export interface MenuActionDescriptor extends ComplexAction, TooltipAction {\n  /** Zero-indexed numerical position. Overrides the action's order in the menu */\n  index?: number;\n}"
    }
  },
  "MenuGroupDescriptor": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "MenuGroupDescriptor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Menu group title"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "ActionListItemDescriptor[]",
          "description": "List of actions"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "details",
          "value": "React.ReactNode",
          "description": "Action details",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables action button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": "Zero-indexed numerical position. Overrides the group's order in the menu.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onActionAnyItem",
          "value": "() => void",
          "description": "Callback when any action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(openActions: () => void) => void",
          "description": "Callback when the menu is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ status: \"new\"; content: string; }",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface MenuGroupDescriptor extends BadgeAction {\n  /** Menu group title */\n  title: string;\n  /** List of actions */\n  actions: ActionListItemDescriptor[];\n  /** Icon to display */\n  icon?: IconableAction['icon'];\n  /** Action details */\n  details?: React.ReactNode;\n  /** Disables action button */\n  disabled?: boolean;\n  /** Zero-indexed numerical position. Overrides the group's order in the menu. */\n  index?: number;\n  /** Callback when any action takes place */\n  onActionAnyItem?: ActionListItemDescriptor['onAction'];\n  /** Callback when the menu is clicked */\n  onClick?(openActions: () => void): void;\n}"
    }
  },
  "ConnectedDisclosure": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "ConnectedDisclosure",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden label for the connected disclosure button.",
          "isOptional": true,
          "defaultValue": "'Related actions'"
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the disclosure is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "ActionListItemDescriptor[]",
          "description": "List of actions"
        }
      ],
      "value": "export interface ConnectedDisclosure {\n  /** Visually hidden label for the connected disclosure button.\n   * @default 'Related actions'\n   */\n  accessibilityLabel?: string;\n  /** Whether or not the disclosure is disabled */\n  disabled?: boolean;\n  /** List of actions */\n  actions: ActionListItemDescriptor[];\n}"
    }
  },
  "Key": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "EnumDeclaration",
      "name": "Key",
      "value": "export enum Key {\n  Backspace = 8,\n  Tab = 9,\n  Enter = 13,\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  Pause = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  LeftArrow = 37,\n  UpArrow = 38,\n  RightArrow = 39,\n  DownArrow = 40,\n  Insert = 45,\n  Delete = 46,\n  Key0 = 48,\n  Key1 = 49,\n  Key2 = 50,\n  Key3 = 51,\n  Key4 = 52,\n  Key5 = 53,\n  Key6 = 54,\n  Key7 = 55,\n  Key8 = 56,\n  Key9 = 57,\n  KeyA = 65,\n  KeyB = 66,\n  KeyC = 67,\n  KeyD = 68,\n  KeyE = 69,\n  KeyF = 70,\n  KeyG = 71,\n  KeyH = 72,\n  KeyI = 73,\n  KeyJ = 74,\n  KeyK = 75,\n  KeyL = 76,\n  KeyM = 77,\n  KeyN = 78,\n  KeyO = 79,\n  KeyP = 80,\n  KeyQ = 81,\n  KeyR = 82,\n  KeyS = 83,\n  KeyT = 84,\n  KeyU = 85,\n  KeyV = 86,\n  KeyW = 87,\n  KeyX = 88,\n  KeyY = 89,\n  KeyZ = 90,\n  LeftMeta = 91,\n  RightMeta = 92,\n  Select = 93,\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n  Multiply = 106,\n  Add = 107,\n  Subtract = 109,\n  Decimal = 110,\n  Divide = 111,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  NumLock = 144,\n  ScrollLock = 145,\n  Semicolon = 186,\n  Equals = 187,\n  Comma = 188,\n  Dash = 189,\n  Period = 190,\n  ForwardSlash = 191,\n  GraveAccent = 192,\n  OpenBracket = 219,\n  BackSlash = 220,\n  CloseBracket = 221,\n  SingleQuote = 222,\n}",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Backspace",
          "value": 8
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Tab",
          "value": 9
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Enter",
          "value": 13
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Shift",
          "value": 16
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Ctrl",
          "value": 17
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Alt",
          "value": 18
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Pause",
          "value": 19
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "CapsLock",
          "value": 20
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Escape",
          "value": 27
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Space",
          "value": 32
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "PageUp",
          "value": 33
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "PageDown",
          "value": 34
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "End",
          "value": 35
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Home",
          "value": 36
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "LeftArrow",
          "value": 37
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "UpArrow",
          "value": 38
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "RightArrow",
          "value": 39
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "DownArrow",
          "value": 40
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Insert",
          "value": 45
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Delete",
          "value": 46
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key0",
          "value": 48
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key1",
          "value": 49
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key2",
          "value": 50
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key3",
          "value": 51
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key4",
          "value": 52
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key5",
          "value": 53
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key6",
          "value": 54
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key7",
          "value": 55
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key8",
          "value": 56
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Key9",
          "value": 57
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyA",
          "value": 65
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyB",
          "value": 66
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyC",
          "value": 67
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyD",
          "value": 68
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyE",
          "value": 69
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyF",
          "value": 70
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyG",
          "value": 71
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyH",
          "value": 72
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyI",
          "value": 73
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyJ",
          "value": 74
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyK",
          "value": 75
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyL",
          "value": 76
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyM",
          "value": 77
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyN",
          "value": 78
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyO",
          "value": 79
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyP",
          "value": 80
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyQ",
          "value": 81
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyR",
          "value": 82
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyS",
          "value": 83
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyT",
          "value": 84
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyU",
          "value": 85
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyV",
          "value": 86
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyW",
          "value": 87
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyX",
          "value": 88
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyY",
          "value": 89
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "KeyZ",
          "value": 90
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "LeftMeta",
          "value": 91
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "RightMeta",
          "value": 92
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Select",
          "value": 93
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad0",
          "value": 96
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad1",
          "value": 97
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad2",
          "value": 98
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad3",
          "value": 99
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad4",
          "value": 100
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad5",
          "value": 101
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad6",
          "value": 102
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad7",
          "value": 103
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad8",
          "value": 104
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Numpad9",
          "value": 105
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Multiply",
          "value": 106
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Add",
          "value": 107
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Subtract",
          "value": 109
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Decimal",
          "value": 110
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Divide",
          "value": 111
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F1",
          "value": 112
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F2",
          "value": 113
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F3",
          "value": 114
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F4",
          "value": 115
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F5",
          "value": 116
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F6",
          "value": 117
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F7",
          "value": 118
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F8",
          "value": 119
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F9",
          "value": 120
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F10",
          "value": 121
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F11",
          "value": 122
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "F12",
          "value": 123
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "NumLock",
          "value": 144
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "ScrollLock",
          "value": 145
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Semicolon",
          "value": 186
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Equals",
          "value": 187
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Comma",
          "value": 188
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Dash",
          "value": 189
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "Period",
          "value": 190
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "ForwardSlash",
          "value": 191
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "GraveAccent",
          "value": 192
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "OpenBracket",
          "value": 219
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "BackSlash",
          "value": 220
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "CloseBracket",
          "value": 221
        },
        {
          "filePath": "polaris-react/src/types.ts",
          "name": "SingleQuote",
          "value": 222
        }
      ]
    }
  },
  "CheckboxHandles": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "name": "CheckboxHandles",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "focus",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface CheckboxHandles {\n  focus(): void;\n}"
    }
  },
  "NonEmptyArray": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "NonEmptyArray",
      "value": "[T, ...T[]]",
      "description": ""
    }
  },
  "ArrayElement": {
    "polaris-react/src/types.ts": {
      "filePath": "polaris-react/src/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ArrayElement",
      "value": "T extends (infer U)[] ? U : never",
      "description": ""
    }
  },
  "Status": {
    "polaris-react/src/components/Badge/types.ts": {
      "filePath": "polaris-react/src/components/Badge/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Status",
      "value": "'info' | 'success' | 'warning' | 'critical' | 'attention' | 'new'",
      "description": ""
    },
    "polaris-react/src/components/Avatar/Avatar.tsx": {
      "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "Status",
      "value": "enum Status {\n  Pending = 'PENDING',\n  Loaded = 'LOADED',\n  Errored = 'ERRORED',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "name": "Pending",
          "value": "PENDING"
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "name": "Loaded",
          "value": "LOADED"
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "name": "Errored",
          "value": "ERRORED"
        }
      ]
    }
  },
  "StatusValue": {
    "polaris-react/src/components/Badge/types.ts": {
      "filePath": "polaris-react/src/components/Badge/types.ts",
      "syntaxKind": "EnumDeclaration",
      "name": "StatusValue",
      "value": "export enum StatusValue {\n  Info = 'info',\n  Success = 'success',\n  Warning = 'warning',\n  Critical = 'critical',\n  Attention = 'attention',\n  New = 'new',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Info",
          "value": "info"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Success",
          "value": "success"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Warning",
          "value": "warning"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Critical",
          "value": "critical"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Attention",
          "value": "attention"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "New",
          "value": "new"
        }
      ]
    }
  },
  "Progress": {
    "polaris-react/src/components/Badge/types.ts": {
      "filePath": "polaris-react/src/components/Badge/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Progress",
      "value": "'incomplete' | 'partiallyComplete' | 'complete'",
      "description": ""
    }
  },
  "ProgressValue": {
    "polaris-react/src/components/Badge/types.ts": {
      "filePath": "polaris-react/src/components/Badge/types.ts",
      "syntaxKind": "EnumDeclaration",
      "name": "ProgressValue",
      "value": "export enum ProgressValue {\n  Incomplete = 'incomplete',\n  PartiallyComplete = 'partiallyComplete',\n  Complete = 'complete',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Incomplete",
          "value": "incomplete"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "PartiallyComplete",
          "value": "partiallyComplete"
        },
        {
          "filePath": "polaris-react/src/components/Badge/types.ts",
          "name": "Complete",
          "value": "complete"
        }
      ]
    }
  },
  "Size": {
    "polaris-react/src/components/Badge/types.ts": {
      "filePath": "polaris-react/src/components/Badge/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'small' | 'medium'",
      "description": ""
    },
    "polaris-react/src/components/Avatar/Avatar.tsx": {
      "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'extraSmall' | 'small' | 'medium' | 'large'",
      "description": ""
    },
    "polaris-react/src/components/MediaCard/MediaCard.tsx": {
      "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'small' | 'medium'",
      "description": ""
    },
    "polaris-react/src/components/ProgressBar/ProgressBar.tsx": {
      "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'small' | 'medium' | 'large'",
      "description": ""
    },
    "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx": {
      "filePath": "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'small' | 'medium' | 'large' | 'extraLarge'",
      "description": ""
    },
    "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx": {
      "filePath": "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'extraSmall' | 'small' | 'medium' | 'large'",
      "description": ""
    },
    "polaris-react/src/components/Spinner/Spinner.tsx": {
      "filePath": "polaris-react/src/components/Spinner/Spinner.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'small' | 'large'",
      "description": ""
    },
    "polaris-react/src/components/Thumbnail/Thumbnail.tsx": {
      "filePath": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Size",
      "value": "'extraSmall' | 'small' | 'medium' | 'large'",
      "description": ""
    }
  },
  "DebounceSettings": {
    "polaris-react/src/utilities/debounce.ts": {
      "filePath": "polaris-react/src/utilities/debounce.ts",
      "name": "DebounceSettings",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/debounce.ts",
          "syntaxKind": "PropertySignature",
          "name": "leading",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/debounce.ts",
          "syntaxKind": "PropertySignature",
          "name": "maxWait",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/debounce.ts",
          "syntaxKind": "PropertySignature",
          "name": "trailing",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface DebounceSettings {\n  leading?: boolean;\n  maxWait?: number;\n  trailing?: boolean;\n}"
    }
  },
  "ScrollLockProps": {
    "polaris-react/src/components/ScrollLock/ScrollLock.ts": {
      "filePath": "polaris-react/src/components/ScrollLock/ScrollLock.ts",
      "name": "ScrollLockProps",
      "description": "",
      "members": [],
      "value": "interface ScrollLockProps {}"
    }
  },
  "RGBColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "RGBColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "red",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "green",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "blue",
          "value": "number",
          "description": ""
        }
      ],
      "value": "export interface RGBColor {\n  red: number;\n  green: number;\n  blue: number;\n}"
    }
  },
  "RGBAColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "RGBAColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "alpha",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "red",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "green",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "blue",
          "value": "number",
          "description": ""
        }
      ],
      "value": "export interface RGBAColor extends RGBColor {\n  alpha: number;\n}"
    }
  },
  "HSColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "HSColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": "The color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "saturation",
          "value": "number",
          "description": "Saturation of the color"
        }
      ],
      "value": "export interface HSColor {\n  /** The color */\n  hue: number;\n  /** Saturation of the color */\n  saturation: number;\n}"
    }
  },
  "HSBColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "HSBColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "brightness",
          "value": "number",
          "description": "Brightness of the color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": "The color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "saturation",
          "value": "number",
          "description": "Saturation of the color"
        }
      ],
      "value": "export interface HSBColor extends HSColor {\n  /** Brightness of the color */\n  brightness: number;\n}"
    }
  },
  "HSLColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "HSLColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "lightness",
          "value": "number",
          "description": "Lightness of the color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": "The color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "saturation",
          "value": "number",
          "description": "Saturation of the color"
        }
      ],
      "value": "export interface HSLColor extends HSColor {\n  /** Lightness of the color */\n  lightness: number;\n}"
    }
  },
  "HSBLAColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "HSBLAColor",
      "value": "HSBAColor & HSLAColor",
      "description": ""
    }
  },
  "HSBAColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "HSBAColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "alpha",
          "value": "number",
          "description": "Level of transparency"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "brightness",
          "value": "number",
          "description": "Brightness of the color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": "The color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "saturation",
          "value": "number",
          "description": "Saturation of the color"
        }
      ],
      "value": "export interface HSBAColor extends HSBColor {\n  /** Level of transparency */\n  alpha: number;\n}"
    }
  },
  "HSLAColor": {
    "polaris-react/src/utilities/color-types.ts": {
      "filePath": "polaris-react/src/utilities/color-types.ts",
      "name": "HSLAColor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "alpha",
          "value": "number",
          "description": "Level of transparency"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "lightness",
          "value": "number",
          "description": "Lightness of the color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": "The color"
        },
        {
          "filePath": "polaris-react/src/utilities/color-types.ts",
          "syntaxKind": "PropertySignature",
          "name": "saturation",
          "value": "number",
          "description": "Saturation of the color"
        }
      ],
      "value": "export interface HSLAColor extends HSLColor {\n  /** Level of transparency */\n  alpha: number;\n}"
    }
  },
  "ColorType": {
    "polaris-react/src/utilities/color-transformers.ts": {
      "filePath": "polaris-react/src/utilities/color-transformers.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ColorType",
      "value": "'hex' | 'rgb' | 'rgba' | 'hsl' | 'hsla' | 'default'",
      "description": ""
    }
  },
  "UseEventListenerTarget": {
    "polaris-react/src/utilities/use-event-listener.ts": {
      "filePath": "polaris-react/src/utilities/use-event-listener.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "UseEventListenerTarget",
      "value": "Window | Document | HTMLElement | RefObject<HTMLElement>",
      "description": "Acceptable target elements for `useEventListener`."
    }
  },
  "ExtractTargetElement": {
    "polaris-react/src/utilities/use-event-listener.ts": {
      "filePath": "polaris-react/src/utilities/use-event-listener.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ExtractTargetElement",
      "value": "Target extends RefObject<infer Element>\n  ? Element\n  : Target",
      "description": "Extracts the target element from a React `RefObject` or returns the input element."
    }
  },
  "ExtractEventMap": {
    "polaris-react/src/utilities/use-event-listener.ts": {
      "filePath": "polaris-react/src/utilities/use-event-listener.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ExtractEventMap",
      "value": "ExtractTargetElement<Target> extends Window\n  ? WindowEventMap\n  : ExtractTargetElement<Target> extends Document\n  ? DocumentEventMap\n  : HTMLElementEventMap",
      "description": "Extracts a (lib.dom.ts) EventMap for a given target element."
    }
  },
  "ExtractEventName": {
    "polaris-react/src/utilities/use-event-listener.ts": {
      "filePath": "polaris-react/src/utilities/use-event-listener.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ExtractEventName",
      "value": "keyof ExtractEventMap<\n  ExtractTargetElement<Target>\n>",
      "description": "Extracts all event names for a given target element."
    }
  },
  "ExtractEvent": {
    "polaris-react/src/utilities/use-event-listener.ts": {
      "filePath": "polaris-react/src/utilities/use-event-listener.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ExtractEvent",
      "value": "ExtractEventMap<ExtractTargetElement<Target>>[EventName]",
      "description": "Extracts the `event` object for a given event type."
    }
  },
  "SelectionType": {
    "polaris-react/src/utilities/use-index-resource-state.ts": {
      "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
      "syntaxKind": "EnumDeclaration",
      "name": "SelectionType",
      "value": "export enum SelectionType {\n  All = 'all',\n  Page = 'page',\n  Multi = 'multi',\n  Single = 'single',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
          "name": "All",
          "value": "all"
        },
        {
          "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
          "name": "Page",
          "value": "page"
        },
        {
          "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
          "name": "Multi",
          "value": "multi"
        },
        {
          "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
          "name": "Single",
          "value": "single"
        }
      ]
    },
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "syntaxKind": "EnumDeclaration",
      "name": "SelectionType",
      "value": "export enum SelectionType {\n  All = 'all',\n  Page = 'page',\n  Multi = 'multi',\n  Single = 'single',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "name": "All",
          "value": "all"
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "name": "Page",
          "value": "page"
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "name": "Multi",
          "value": "multi"
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "name": "Single",
          "value": "single"
        }
      ]
    }
  },
  "Range": {
    "polaris-react/src/utilities/use-index-resource-state.ts": {
      "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Range",
      "value": "[number, number]",
      "description": ""
    },
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Range",
      "value": "[number, number]",
      "description": ""
    },
    "polaris-react/src/utilities/dates.ts": {
      "filePath": "polaris-react/src/utilities/dates.ts",
      "name": "Range",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/dates.ts",
          "syntaxKind": "PropertySignature",
          "name": "start",
          "value": "Date",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/dates.ts",
          "syntaxKind": "PropertySignature",
          "name": "end",
          "value": "Date",
          "description": ""
        }
      ],
      "value": "export interface Range {\n  start: Date;\n  end: Date;\n}"
    }
  },
  "ResourceIDResolver": {
    "polaris-react/src/utilities/use-index-resource-state.ts": {
      "filePath": "polaris-react/src/utilities/use-index-resource-state.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ResourceIDResolver",
      "value": "(\n  resource: T,\n) => string",
      "description": ""
    }
  },
  "RowContextType": {
    "polaris-react/src/utilities/index-table/context.ts": {
      "filePath": "polaris-react/src/utilities/index-table/context.ts",
      "name": "RowContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemId",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "position",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "onInteraction",
          "value": "(event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface RowContextType {\n  itemId?: string;\n  selected?: boolean;\n  disabled?: boolean;\n  position?: number;\n  onInteraction?: (event: React.MouseEvent | React.KeyboardEvent) => void;\n}"
    }
  },
  "ScrollContextType": {
    "polaris-react/src/utilities/index-table/context.ts": {
      "filePath": "polaris-react/src/utilities/index-table/context.ts",
      "name": "ScrollContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "scrollableContainer",
          "value": "HTMLDivElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "canScrollLeft",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-table/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "canScrollRight",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "export interface ScrollContextType {\n  scrollableContainer: HTMLDivElement | null;\n  canScrollLeft: boolean;\n  canScrollRight: boolean;\n}"
    }
  },
  "GeneralObject": {
    "polaris-react/src/utilities/merge.ts": {
      "filePath": "polaris-react/src/utilities/merge.ts",
      "name": "GeneralObject",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/merge.ts",
          "name": "[key: string]",
          "value": "any"
        }
      ],
      "value": "interface GeneralObject {\n  [key: string]: any;\n}"
    }
  },
  "TranslationDictionary": {
    "polaris-react/src/utilities/i18n/I18n.ts": {
      "filePath": "polaris-react/src/utilities/i18n/I18n.ts",
      "name": "TranslationDictionary",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/i18n/I18n.ts",
          "name": "[key: string]",
          "value": "string | TranslationDictionary"
        }
      ],
      "value": "interface TranslationDictionary {\n  [key: string]: string | TranslationDictionary;\n}"
    }
  },
  "IndexSelectedItems": {
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IndexSelectedItems",
      "value": "string[] | 'All'",
      "description": ""
    }
  },
  "IndexProviderProps": {
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "name": "IndexProviderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemCount",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectedItemsCount",
          "value": "number | \"All\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "resourceName",
          "value": "{ singular: string; plural: string; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hasMoreItems",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "condensed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onSelectionChange",
          "value": "(selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface IndexProviderProps {\n  children?: React.ReactNode;\n  selectable?: boolean;\n  itemCount: number;\n  selectedItemsCount?: typeof SELECT_ALL_ITEMS | number;\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  loading?: boolean;\n  hasMoreItems?: boolean;\n  condensed?: boolean;\n  onSelectionChange?(\n    selectionType: SelectionType,\n    toggleType: boolean,\n    selection?: string | Range,\n  ): void;\n}"
    }
  },
  "HandleSelectionChange": {
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "HandleSelectionChange",
      "value": "(\n  selectionType: SelectionType,\n  toggleType: boolean,\n  selection?: string | Range,\n  sortOrder?: number,\n) => void",
      "description": ""
    }
  },
  "BulkSelectionDataOptions": {
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "name": "BulkSelectionDataOptions",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectedItemsCount",
          "value": "number | \"All\"",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemCount",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hasMoreItems",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "resourceName",
          "value": "{ singular: string; plural: string; }",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface BulkSelectionDataOptions {\n  selectedItemsCount: number | typeof SELECT_ALL_ITEMS;\n  itemCount: number;\n  hasMoreItems?: boolean;\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n}"
    }
  },
  "HandleBulkSelectionOptions": {
    "polaris-react/src/utilities/index-provider/types.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/types.ts",
      "name": "HandleBulkSelectionOptions",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-provider/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onSelectionChange",
          "value": "(selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface HandleBulkSelectionOptions {\n  onSelectionChange?(\n    selectionType: SelectionType,\n    toggleType: boolean,\n    selection?: string | Range,\n  ): void;\n}"
    }
  },
  "IndexContextType": {
    "polaris-react/src/utilities/index-provider/context.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/context.ts",
      "name": "IndexContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "bulkSelectState",
          "value": "boolean | \"indeterminate\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "resourceName",
          "value": "{ singular: string; plural: string; }",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectedItemsCount",
          "value": "number | \"All\"",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "bulkActionsAccessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectMode",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "paginatedSelectAllText",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemCount",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "hasMoreItems",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "condensed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface IndexContextType {\n  loading?: boolean;\n  bulkSelectState?: boolean | 'indeterminate';\n  resourceName: {\n    singular: string;\n    plural: string;\n  };\n  selectedItemsCount: typeof SELECT_ALL_ITEMS | number;\n  bulkActionsAccessibilityLabel?: string;\n  selectMode: boolean;\n  paginatedSelectAllText?: string;\n  itemCount: number;\n  selectable?: boolean;\n  hasMoreItems?: boolean;\n  condensed?: boolean;\n}"
    }
  },
  "IndexRowContextType": {
    "polaris-react/src/utilities/index-provider/context.ts": {
      "filePath": "polaris-react/src/utilities/index-provider/context.ts",
      "name": "IndexRowContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectMode",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/index-provider/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "condensed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface IndexRowContextType {\n  selectable: boolean;\n  selectMode: boolean;\n  condensed?: boolean;\n}"
    }
  },
  "BreakpointsDirectionAlias": {
    "polaris-react/src/utilities/breakpoints.ts": {
      "filePath": "polaris-react/src/utilities/breakpoints.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BreakpointsDirectionAlias",
      "value": "`${BreakpointsAlias}${Capitalize<BreakpointsAliasDirection>}`",
      "description": "Directional alias for each Polaris `breakpoints` token."
    }
  },
  "BreakpointsMatches": {
    "polaris-react/src/utilities/breakpoints.ts": {
      "filePath": "polaris-react/src/utilities/breakpoints.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BreakpointsMatches",
      "value": "{\n  [DirectionAlias in BreakpointsDirectionAlias]: boolean;\n}",
      "description": "Match results for each directional Polaris `breakpoints` alias."
    },
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BreakpointsMatches",
      "value": "{\n  [DirectionAlias in BreakpointsDirectionAlias]: boolean;\n}",
      "description": ""
    }
  },
  "UseBreakpointsOptions": {
    "polaris-react/src/utilities/breakpoints.ts": {
      "filePath": "polaris-react/src/utilities/breakpoints.ts",
      "name": "UseBreakpointsOptions",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/breakpoints.ts",
          "syntaxKind": "PropertySignature",
          "name": "defaults",
          "value": "boolean | { xsUp?: boolean; xsDown?: boolean; xsOnly?: boolean; smUp?: boolean; smDown?: boolean; smOnly?: boolean; mdUp?: boolean; mdDown?: boolean; mdOnly?: boolean; lgUp?: boolean; lgDown?: boolean; lgOnly?: boolean; xlUp?: boolean; xlDown?: boolean; xlOnly?: boolean; }",
          "description": "Default values applied during SSR. Accepts a single value to use for each\nbreakpoint alias, or an object for configuring select breakpoints.",
          "defaultValue": "false"
        }
      ],
      "value": "export interface UseBreakpointsOptions {\n  /**\n   * Default values applied during SSR. Accepts a single value to use for each\n   * breakpoint alias, or an object for configuring select breakpoints.\n   *\n   * @default false\n   */\n  defaults:\n    | boolean\n    | {\n        [DirectionAlias in BreakpointsDirectionAlias]?: boolean;\n      };\n}"
    }
  },
  "ArrayComparator": {
    "polaris-react/src/utilities/arrays.ts": {
      "filePath": "polaris-react/src/utilities/arrays.ts",
      "name": "ArrayComparator",
      "description": "",
      "members": [],
      "value": "export interface ArrayComparator<T> {\n  (firstArray: T, SecondArray: T): boolean;\n}"
    }
  },
  "Falsy": {
    "polaris-react/src/utilities/css.ts": {
      "filePath": "polaris-react/src/utilities/css.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Falsy",
      "value": "boolean | undefined | null | 0",
      "description": ""
    }
  },
  "ResponsiveProp": {
    "polaris-react/src/utilities/css.ts": {
      "filePath": "polaris-react/src/utilities/css.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ResponsiveProp",
      "value": "T | {\n      [Breakpoint in BreakpointsAlias]?: T;\n    }",
      "description": ""
    }
  },
  "Week": {
    "polaris-react/src/utilities/dates.ts": {
      "filePath": "polaris-react/src/utilities/dates.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Week",
      "value": "(Date | null)[]",
      "description": ""
    }
  },
  "Filter": {
    "polaris-react/src/utilities/focus.ts": {
      "filePath": "polaris-react/src/utilities/focus.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Filter",
      "value": "(element: Element) => void",
      "description": ""
    }
  },
  "MouseUpBlurHandler": {
    "polaris-react/src/utilities/focus.ts": {
      "filePath": "polaris-react/src/utilities/focus.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MouseUpBlurHandler",
      "value": "(\n  event: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>,\n) => void",
      "description": ""
    }
  },
  "RectConfig": {
    "polaris-react/src/utilities/geometry.ts": {
      "filePath": "polaris-react/src/utilities/geometry.ts",
      "name": "RectConfig",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/geometry.ts",
          "syntaxKind": "PropertySignature",
          "name": "top",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/geometry.ts",
          "syntaxKind": "PropertySignature",
          "name": "left",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/geometry.ts",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/geometry.ts",
          "syntaxKind": "PropertySignature",
          "name": "height",
          "value": "number",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface RectConfig {\n  top?: number;\n  left?: number;\n  width?: number;\n  height?: number;\n}"
    }
  },
  "Point": {
    "polaris-react/src/utilities/geometry.ts": {
      "filePath": "polaris-react/src/utilities/geometry.ts",
      "name": "Point",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/geometry.ts",
          "syntaxKind": "PropertySignature",
          "name": "x",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/geometry.ts",
          "syntaxKind": "PropertySignature",
          "name": "y",
          "value": "number",
          "description": ""
        }
      ],
      "value": "interface Point {\n  x: number;\n  y: number;\n}"
    }
  },
  "EditableTarget": {
    "polaris-react/src/utilities/is-input-focused.ts": {
      "filePath": "polaris-react/src/utilities/is-input-focused.ts",
      "syntaxKind": "EnumDeclaration",
      "name": "EditableTarget",
      "value": "enum EditableTarget {\n  Input = 'INPUT',\n  Textarea = 'TEXTAREA',\n  Select = 'SELECT',\n  ContentEditable = 'contenteditable',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/is-input-focused.ts",
          "name": "Input",
          "value": "INPUT"
        },
        {
          "filePath": "polaris-react/src/utilities/is-input-focused.ts",
          "name": "Textarea",
          "value": "TEXTAREA"
        },
        {
          "filePath": "polaris-react/src/utilities/is-input-focused.ts",
          "name": "Select",
          "value": "SELECT"
        },
        {
          "filePath": "polaris-react/src/utilities/is-input-focused.ts",
          "name": "ContentEditable",
          "value": "contenteditable"
        }
      ]
    }
  },
  "SortDirection": {
    "polaris-react/src/components/DataTable/types.ts": {
      "filePath": "polaris-react/src/components/DataTable/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "SortDirection",
      "value": "'ascending' | 'descending' | 'none'",
      "description": ""
    }
  },
  "VerticalAlign": {
    "polaris-react/src/components/DataTable/types.ts": {
      "filePath": "polaris-react/src/components/DataTable/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "VerticalAlign",
      "value": "'top' | 'bottom' | 'middle' | 'baseline'",
      "description": ""
    }
  },
  "ColumnVisibilityData": {
    "polaris-react/src/components/DataTable/types.ts": {
      "filePath": "polaris-react/src/components/DataTable/types.ts",
      "name": "ColumnVisibilityData",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "leftEdge",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "rightEdge",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "isVisible",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": ""
        }
      ],
      "value": "export interface ColumnVisibilityData {\n  leftEdge: number;\n  rightEdge: number;\n  isVisible?: boolean;\n  width: number;\n  index: number;\n}"
    }
  },
  "DataTableState": {
    "polaris-react/src/components/DataTable/types.ts": {
      "filePath": "polaris-react/src/components/DataTable/types.ts",
      "name": "DataTableState",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "condensed",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "columnVisibilityData",
          "value": "ColumnVisibilityData[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "previousColumn",
          "value": "ColumnVisibilityData",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "currentColumn",
          "value": "ColumnVisibilityData",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "sortedColumnIndex",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "sortDirection",
          "value": "SortDirection",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "isScrolledFarthestLeft",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "isScrolledFarthestRight",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "rowHovered",
          "value": "number",
          "description": ""
        }
      ],
      "value": "export interface DataTableState {\n  condensed: boolean;\n  columnVisibilityData: ColumnVisibilityData[];\n  previousColumn?: ColumnVisibilityData;\n  currentColumn?: ColumnVisibilityData;\n  sortedColumnIndex?: number;\n  sortDirection?: SortDirection;\n  isScrolledFarthestLeft?: boolean;\n  isScrolledFarthestRight?: boolean;\n  rowHovered: number | undefined;\n}"
    }
  },
  "TableMeasurements": {
    "polaris-react/src/components/DataTable/utilities.ts": {
      "filePath": "polaris-react/src/components/DataTable/utilities.ts",
      "name": "TableMeasurements",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DataTable/utilities.ts",
          "syntaxKind": "PropertySignature",
          "name": "firstVisibleColumnIndex",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/utilities.ts",
          "syntaxKind": "PropertySignature",
          "name": "tableLeftVisibleEdge",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/utilities.ts",
          "syntaxKind": "PropertySignature",
          "name": "tableRightVisibleEdge",
          "value": "number",
          "description": ""
        }
      ],
      "value": "interface TableMeasurements {\n  firstVisibleColumnIndex: number;\n  tableLeftVisibleEdge: number;\n  tableRightVisibleEdge: number;\n}"
    }
  },
  "DualValue": {
    "polaris-react/src/components/RangeSlider/types.ts": {
      "filePath": "polaris-react/src/components/RangeSlider/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "DualValue",
      "value": "[number, number]",
      "description": ""
    }
  },
  "RangeSliderValue": {
    "polaris-react/src/components/RangeSlider/types.ts": {
      "filePath": "polaris-react/src/components/RangeSlider/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "RangeSliderValue",
      "value": "number | DualValue",
      "description": ""
    }
  },
  "RangeSliderProps": {
    "polaris-react/src/components/RangeSlider/types.ts": {
      "filePath": "polaris-react/src/components/RangeSlider/types.ts",
      "name": "RangeSliderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "ReactNode",
          "description": "Label for the range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for range input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "RangeSliderValue",
          "description": "Initial value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "number",
          "description": "Minimum possible value for range input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "number",
          "description": "Maximum possible value for range input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "number",
          "description": "Increment value for range input changes",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "output",
          "value": "boolean",
          "description": "Provide a tooltip while sliding, indicating the current value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "ReactNode",
          "description": "Additional text to aid in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "ReactNode",
          "description": "Element to display before the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "ReactNode",
          "description": "Element to display after the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: RangeSliderValue, id: string) => void",
          "description": "Callback when the range input is changed"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when range input is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        }
      ],
      "value": "export interface RangeSliderProps {\n  /** Label for the range input */\n  label: React.ReactNode;\n  /** Adds an action to the label */\n  labelAction?: LabelledProps['action'];\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** ID for range input */\n  id?: string;\n  /** Initial value for range input */\n  value: RangeSliderValue;\n  /** Minimum possible value for range input */\n  min?: number;\n  /** Maximum possible value for range input */\n  max?: number;\n  /** Increment value for range input changes */\n  step?: number;\n  /** Provide a tooltip while sliding, indicating the current value */\n  output?: boolean;\n  /** Additional text to aid in use */\n  helpText?: React.ReactNode;\n  /** Display an error message */\n  error?: Error;\n  /** Disable input */\n  disabled?: boolean;\n  /** Element to display before the input */\n  prefix?: React.ReactNode;\n  /** Element to display after the input */\n  suffix?: React.ReactNode;\n  /** Callback when the range input is changed */\n  onChange(value: RangeSliderValue, id: string): void;\n  /** Callback when range input is focused */\n  onFocus?(): void;\n  /** Callback when focus is removed */\n  onBlur?(): void;\n}"
    }
  },
  "ScrollToPositionFn": {
    "polaris-react/src/components/Scrollable/context.ts": {
      "filePath": "polaris-react/src/components/Scrollable/context.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ScrollToPositionFn",
      "value": "(scrollY: number) => void",
      "description": ""
    }
  },
  "TabDescriptor": {
    "polaris-react/src/components/Tabs/types.ts": {
      "filePath": "polaris-react/src/components/Tabs/types.ts",
      "name": "TabDescriptor",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the tab"
        },
        {
          "filePath": "polaris-react/src/components/Tabs/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "ReactNode",
          "description": "Content for the tab"
        },
        {
          "filePath": "polaris-react/src/components/Tabs/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "panelID",
          "value": "string",
          "description": "A unique identifier for the panel",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        }
      ],
      "value": "export interface TabDescriptor {\n  /** A unique identifier for the tab */\n  id: string;\n  /** A destination to link to */\n  url?: string;\n  /** Content for the tab */\n  content: React.ReactNode;\n  /** A unique identifier for the panel */\n  panelID?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n}"
    }
  },
  "MappedActionContextType": {
    "polaris-react/src/utilities/autocomplete/context.ts": {
      "filePath": "polaris-react/src/utilities/autocomplete/context.ts",
      "name": "MappedActionContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/autocomplete/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/autocomplete/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/autocomplete/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/autocomplete/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/autocomplete/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface MappedActionContextType {\n  role?: string;\n  url?: string;\n  external?: boolean;\n  onAction?(): void;\n  destructive?: boolean;\n}"
    }
  },
  "FeaturesConfig": {
    "polaris-react/src/utilities/features/types.ts": {
      "filePath": "polaris-react/src/utilities/features/types.ts",
      "name": "FeaturesConfig",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/features/types.ts",
          "name": "[key: string]",
          "value": "boolean"
        }
      ],
      "value": "export interface FeaturesConfig {\n  [key: string]: boolean;\n}"
    }
  },
  "Features": {
    "polaris-react/src/utilities/features/types.ts": {
      "filePath": "polaris-react/src/utilities/features/types.ts",
      "name": "Features",
      "description": "",
      "members": [],
      "value": "export interface Features {}"
    }
  },
  "IdGenerator": {
    "polaris-react/src/utilities/unique-id/unique-id-factory.ts": {
      "filePath": "polaris-react/src/utilities/unique-id/unique-id-factory.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IdGenerator",
      "value": "() => string",
      "description": ""
    }
  },
  "IdGeneratorFactory": {
    "polaris-react/src/utilities/unique-id/unique-id-factory.ts": {
      "filePath": "polaris-react/src/utilities/unique-id/unique-id-factory.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IdGeneratorFactory",
      "value": "(prefix: string) => IdGenerator",
      "description": ""
    }
  },
  "Options": {
    "polaris-react/src/utilities/focus-manager/hooks.ts": {
      "filePath": "polaris-react/src/utilities/focus-manager/hooks.ts",
      "name": "Options",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/focus-manager/hooks.ts",
          "syntaxKind": "PropertySignature",
          "name": "trapping",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface Options {\n  trapping: boolean;\n}"
    }
  },
  "Logo": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "name": "Logo",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "topBarSource",
          "value": "string",
          "description": "Provides a path for a logo used on a dark background",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "contextualSaveBarSource",
          "value": "string",
          "description": "Provides a path for a logo used on a light background",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "Destination the merchant will navigate to when clicking the logo",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Accessible label the logo image",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "number",
          "description": "Number of pixels wide the logo image is",
          "isOptional": true
        }
      ],
      "value": "export interface Logo {\n  /** Provides a path for a logo used on a dark background */\n  topBarSource?: string;\n  /** Provides a path for a logo used on a light background */\n  contextualSaveBarSource?: string;\n  /** Destination the merchant will navigate to when clicking the logo */\n  url?: string;\n  /** Accessible label the logo image */\n  accessibilityLabel?: string;\n  /** Number of pixels wide the logo image is */\n  width?: number;\n}"
    }
  },
  "ContextualSaveBarAction": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "name": "ContextualSaveBarAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Should a spinner be displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Should the action be disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        }
      ],
      "value": "interface ContextualSaveBarAction {\n  /** A destination to link to */\n  url?: string;\n  /** Content the action displays */\n  content?: string;\n  /** Should a spinner be displayed */\n  loading?: boolean;\n  /** Should the action be disabled */\n  disabled?: boolean;\n  /** Callback when an action takes place */\n  onAction?(): void;\n}"
    }
  },
  "ContextualSaveBarDiscardActionProps": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "name": "ContextualSaveBarDiscardActionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "discardConfirmationModal",
          "value": "boolean",
          "description": "Whether to show a modal confirming the discard action",
          "isOptional": true
        }
      ],
      "value": "interface ContextualSaveBarDiscardActionProps {\n  /** Whether to show a modal confirming the discard action */\n  discardConfirmationModal?: boolean;\n}"
    }
  },
  "ContextualSaveBarCombinedActionProps": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ContextualSaveBarCombinedActionProps",
      "value": "ContextualSaveBarDiscardActionProps & ContextualSaveBarAction",
      "description": ""
    }
  },
  "ContextualSaveBarProps": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "name": "ContextualSaveBarProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "alignContentFlush",
          "value": "boolean",
          "description": "Extend the contents section to be flush with the left edge",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "message",
          "value": "string",
          "description": "Accepts a string of content that will be rendered to the left of the actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "saveAction",
          "value": "ContextualSaveBarAction",
          "description": "Save or commit contextual save bar action with text defaulting to 'Save'",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "discardAction",
          "value": "ContextualSaveBarCombinedActionProps",
          "description": "Discard or cancel contextual save bar action with text defaulting to 'Discard'",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Remove the normal max-width on the contextual save bar",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "contextControl",
          "value": "ReactNode",
          "description": "Accepts a component that is used to help users switch between different contexts",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "secondaryMenu",
          "value": "ReactNode",
          "description": "Accepts a node that is rendered to the left of the discard and save actions",
          "isOptional": true
        }
      ],
      "value": "export interface ContextualSaveBarProps {\n  /** Extend the contents section to be flush with the left edge  */\n  alignContentFlush?: boolean;\n  /** Accepts a string of content that will be rendered to the left of the actions */\n  message?: string;\n  /** Save or commit contextual save bar action with text defaulting to 'Save' */\n  saveAction?: ContextualSaveBarAction;\n  /** Discard or cancel contextual save bar action with text defaulting to 'Discard' */\n  discardAction?: ContextualSaveBarCombinedActionProps;\n  /** Remove the normal max-width on the contextual save bar */\n  fullWidth?: boolean;\n  /** Accepts a component that is used to help users switch between different contexts */\n  contextControl?: React.ReactNode;\n  /** Accepts a node that is rendered to the left of the discard and save actions */\n  secondaryMenu?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx": {
      "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
      "name": "ContextualSaveBarProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alignContentFlush",
          "value": "boolean",
          "description": "Extend the contents section to be flush with the left edge",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "message",
          "value": "string",
          "description": "Accepts a string of content that will be rendered to the left of the actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "saveAction",
          "value": "ContextualSaveBarAction",
          "description": "Save or commit contextual save bar action with text defaulting to 'Save'",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "discardAction",
          "value": "ContextualSaveBarCombinedActionProps",
          "description": "Discard or cancel contextual save bar action with text defaulting to 'Discard'",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Remove the normal max-width on the contextual save bar",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contextControl",
          "value": "ReactNode",
          "description": "Accepts a component that is used to help users switch between different contexts",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryMenu",
          "value": "ReactNode",
          "description": "Accepts a node that is rendered to the left of the discard and save actions",
          "isOptional": true
        }
      ],
      "value": "export interface ContextualSaveBarProps extends ContextualSaveBarProps1 {}"
    }
  },
  "ToastProps": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "name": "ToastProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "The content that should appear in the toast message"
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "duration",
          "value": "number",
          "description": "The length of time in milliseconds the toast message should persist",
          "isOptional": true,
          "defaultValue": "5000"
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "boolean",
          "description": "Display an error toast.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "Callback when the dismiss icon is clicked"
        },
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "Action",
          "description": "Adds an action next to the message",
          "isOptional": true
        }
      ],
      "value": "export interface ToastProps {\n  /** The content that should appear in the toast message */\n  content: string;\n  /**\n   * The length of time in milliseconds the toast message should persist\n   * @default 5000\n   */\n  duration?: number;\n  /** Display an error toast. */\n  error?: boolean;\n  /** Callback when the dismiss icon is clicked */\n  onDismiss(): void;\n  /** Adds an action next to the message */\n  action?: Action;\n}"
    },
    "polaris-react/src/components/Toast/Toast.tsx": {
      "filePath": "polaris-react/src/components/Toast/Toast.tsx",
      "name": "ToastProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Toast/Toast.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "The content that should appear in the toast message"
        },
        {
          "filePath": "polaris-react/src/components/Toast/Toast.tsx",
          "syntaxKind": "PropertySignature",
          "name": "duration",
          "value": "number",
          "description": "The length of time in milliseconds the toast message should persist",
          "isOptional": true,
          "defaultValue": "5000"
        },
        {
          "filePath": "polaris-react/src/components/Toast/Toast.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "boolean",
          "description": "Display an error toast.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Toast/Toast.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "Callback when the dismiss icon is clicked"
        },
        {
          "filePath": "polaris-react/src/components/Toast/Toast.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "Action",
          "description": "Adds an action next to the message",
          "isOptional": true
        }
      ],
      "value": "export interface ToastProps extends ToastProps1 {}"
    }
  },
  "ToastID": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "name": "ToastID",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        }
      ],
      "value": "export interface ToastID {\n  id: string;\n}"
    }
  },
  "ToastPropsWithID": {
    "polaris-react/src/utilities/frame/types.ts": {
      "filePath": "polaris-react/src/utilities/frame/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ToastPropsWithID",
      "value": "ToastProps & ToastID",
      "description": ""
    }
  },
  "FrameContextType": {
    "polaris-react/src/utilities/frame/context.ts": {
      "filePath": "polaris-react/src/utilities/frame/context.ts",
      "name": "FrameContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "logo",
          "value": "Logo",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "showToast",
          "value": "(toast: ToastPropsWithID) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "hideToast",
          "value": "(toast: ToastID) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "setContextualSaveBar",
          "value": "(props: ContextualSaveBarProps) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "removeContextualSaveBar",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "startLoading",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/frame/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "stopLoading",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface FrameContextType {\n  logo?: Logo;\n  showToast(toast: ToastPropsWithID): void;\n  hideToast(toast: ToastID): void;\n  setContextualSaveBar(props: ContextualSaveBarProps): void;\n  removeContextualSaveBar(): void;\n  startLoading(): void;\n  stopLoading(): void;\n}"
    },
    "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx": {
      "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "FrameContextType",
      "value": "NonNullable<React.ContextType<typeof FrameContext>>",
      "description": ""
    }
  },
  "LinkLikeComponentProps": {
    "polaris-react/src/utilities/link/types.ts": {
      "filePath": "polaris-react/src/utilities/link/types.ts",
      "name": "LinkLikeComponentProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "name": "[key: string]",
          "value": "any"
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "The url to link to"
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "The content to display inside the link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Makes the link open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "download",
          "value": "string | boolean",
          "description": "Makes the browser download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accept",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "acceptCharset",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "allowFullScreen",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "allowTransparency",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "alt",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "as",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "async",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "autoComplete",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "autoFocus",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "autoPlay",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "capture",
          "value": "boolean | \"user\" | \"environment\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "cellPadding",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "cellSpacing",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "charSet",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "challenge",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "checked",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "cite",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "classID",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "cols",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "colSpan",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "controls",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "coords",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "crossOrigin",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "data",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "dateTime",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "default",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "defer",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "encType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "form",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "formAction",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "formEncType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "formMethod",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "formNoValidate",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "formTarget",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "frameBorder",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "headers",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "height",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "high",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "href",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hrefLang",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "htmlFor",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "httpEquiv",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "integrity",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "keyParams",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "keyType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "kind",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "list",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "loop",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "low",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "manifest",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "marginHeight",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "marginWidth",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "maxLength",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "mediaGroup",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "method",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "minLength",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "multiple",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "muted",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "nonce",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "noValidate",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "optimum",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "pattern",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "placeholder",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "playsInline",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "poster",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "preload",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "readOnly",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "rel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "required",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "reversed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "rows",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "rowSpan",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "sandbox",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "scope",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "scoped",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "scrolling",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "seamless",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "shape",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "sizes",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "span",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "src",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "srcDoc",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "srcLang",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "srcSet",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "start",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "summary",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "target",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "useMap",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string | number | readonly string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "wmode",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "wrap",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "defaultChecked",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "defaultValue",
          "value": "string | number | readonly string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "suppressContentEditableWarning",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "suppressHydrationWarning",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "accessKey",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "className",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "contentEditable",
          "value": "Booleanish | \"inherit\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "contextMenu",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "dir",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "draggable",
          "value": "Booleanish",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "lang",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "slot",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "spellCheck",
          "value": "Booleanish",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "style",
          "value": "CSSProperties",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "tabIndex",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "translate",
          "value": "\"yes\" | \"no\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "radioGroup",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "AriaRole",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "about",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "datatype",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "inlist",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "property",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "resource",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "typeof",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "vocab",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "autoCapitalize",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "autoCorrect",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "autoSave",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemProp",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemScope",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemID",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "itemRef",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "results",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "security",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "unselectable",
          "value": "\"on\" | \"off\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "inputMode",
          "value": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "description": "Hints at the type of data that might be entered by the user while editing the element or its contents",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "is",
          "value": "string",
          "description": "Specify that a standard HTML element should behave like a defined custom built-in element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-activedescendant",
          "value": "string",
          "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-atomic",
          "value": "Booleanish",
          "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-autocomplete",
          "value": "\"none\" | \"list\" | \"inline\" | \"both\"",
          "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-busy",
          "value": "Booleanish",
          "description": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-checked",
          "value": "boolean | \"false\" | \"true\" | \"mixed\"",
          "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-colcount",
          "value": "number",
          "description": "Defines the total number of columns in a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-colindex",
          "value": "number",
          "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-colspan",
          "value": "number",
          "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-controls",
          "value": "string",
          "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-current",
          "value": "boolean | \"false\" | \"true\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-describedby",
          "value": "string",
          "description": "Identifies the element (or elements) that describes the object.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-details",
          "value": "string",
          "description": "Identifies the element that provides a detailed, extended description for the object.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-disabled",
          "value": "Booleanish",
          "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-dropeffect",
          "value": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "description": "Indicates what functions can be performed when a dragged object is released on the drop target.",
          "isOptional": true,
          "deprecationMessage": "in ARIA 1.1"
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-errormessage",
          "value": "string",
          "description": "Identifies the element that provides an error message for the object.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-expanded",
          "value": "Booleanish",
          "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-flowto",
          "value": "string",
          "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-grabbed",
          "value": "Booleanish",
          "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
          "isOptional": true,
          "deprecationMessage": "in ARIA 1.1"
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-haspopup",
          "value": "boolean | \"false\" | \"true\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\"",
          "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-hidden",
          "value": "Booleanish",
          "description": "Indicates whether the element is exposed to an accessibility API.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-invalid",
          "value": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\"",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-keyshortcuts",
          "value": "string",
          "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-label",
          "value": "string",
          "description": "Defines a string value that labels the current element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-labelledby",
          "value": "string",
          "description": "Identifies the element (or elements) that labels the current element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-level",
          "value": "number",
          "description": "Defines the hierarchical level of an element within a structure.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-live",
          "value": "\"off\" | \"assertive\" | \"polite\"",
          "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-modal",
          "value": "Booleanish",
          "description": "Indicates whether an element is modal when displayed.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-multiline",
          "value": "Booleanish",
          "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-multiselectable",
          "value": "Booleanish",
          "description": "Indicates that the user may select more than one item from the current selectable descendants.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-orientation",
          "value": "\"horizontal\" | \"vertical\"",
          "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-owns",
          "value": "string",
          "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-placeholder",
          "value": "string",
          "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-posinset",
          "value": "number",
          "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-pressed",
          "value": "boolean | \"false\" | \"true\" | \"mixed\"",
          "description": "Indicates the current \"pressed\" state of toggle buttons.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-readonly",
          "value": "Booleanish",
          "description": "Indicates that the element is not editable, but is otherwise operable.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-relevant",
          "value": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-required",
          "value": "Booleanish",
          "description": "Indicates that user input is required on the element before a form may be submitted.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-roledescription",
          "value": "string",
          "description": "Defines a human-readable, author-localized description for the role of an element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-rowcount",
          "value": "number",
          "description": "Defines the total number of rows in a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-rowindex",
          "value": "number",
          "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-rowspan",
          "value": "number",
          "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-selected",
          "value": "Booleanish",
          "description": "Indicates the current \"selected\" state of various widgets.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-setsize",
          "value": "number",
          "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-sort",
          "value": "\"ascending\" | \"descending\" | \"none\" | \"other\"",
          "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuemax",
          "value": "number",
          "description": "Defines the maximum allowed value for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuemin",
          "value": "number",
          "description": "Defines the minimum allowed value for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuenow",
          "value": "number",
          "description": "Defines the current value for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuetext",
          "value": "string",
          "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "dangerouslySetInnerHTML",
          "value": "{ __html: string; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCopy",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCopyCapture",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCut",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCutCapture",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPaste",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPasteCapture",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionEnd",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionEndCapture",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionStart",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionStartCapture",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionUpdate",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionUpdateCapture",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onFocus",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onFocusCapture",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onBlur",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onBlurCapture",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onChange",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onChangeCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onBeforeInput",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onBeforeInputCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onInput",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onInputCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onReset",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onResetCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSubmit",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSubmitCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onInvalid",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onInvalidCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoad",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onError",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onErrorCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onKeyDown",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onKeyDownCapture",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onKeyPress",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Deprecated"
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onKeyPressCapture",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Deprecated"
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onKeyUp",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onKeyUpCapture",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAbort",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAbortCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlay",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlayCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlayThrough",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlayThroughCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDurationChange",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDurationChangeCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onEmptied",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onEmptiedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onEncrypted",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onEncryptedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onEnded",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onEndedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedData",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedDataCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedMetadata",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedMetadataCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadStart",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLoadStartCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPause",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPauseCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPlay",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPlayCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPlaying",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPlayingCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onProgress",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onProgressCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onRateChange",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onRateChangeCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSeeked",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSeekedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSeeking",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSeekingCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onStalled",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onStalledCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSuspend",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSuspendCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTimeUpdate",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTimeUpdateCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onVolumeChange",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onVolumeChangeCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onWaiting",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onWaitingCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAuxClick",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAuxClickCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onClick",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onClickCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onContextMenu",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onContextMenuCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDoubleClick",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDoubleClickCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDrag",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragEnd",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragEndCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragEnter",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragEnterCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragExit",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragExitCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragLeave",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragLeaveCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragOver",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragOverCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragStart",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDragStartCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDrop",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onDropCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseDown",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseDownCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseEnter",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseLeave",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseMove",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseMoveCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOut",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOutCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOver",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOverCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseUp",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onMouseUpCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSelect",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onSelectCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchCancel",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchCancelCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchEnd",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchEndCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchMove",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchMoveCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchStart",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTouchStartCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerDown",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerDownCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerMove",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerMoveCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerUp",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerUpCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerCancel",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerCancelCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerEnter",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerEnterCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerLeave",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerLeaveCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOver",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOverCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOut",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOutCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onGotPointerCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onGotPointerCaptureCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLostPointerCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onLostPointerCaptureCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onScroll",
          "value": "UIEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onScrollCapture",
          "value": "UIEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onWheel",
          "value": "WheelEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onWheelCapture",
          "value": "WheelEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationStart",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationStartCapture",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationEnd",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationEndCapture",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationIteration",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationIterationCapture",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTransitionEnd",
          "value": "TransitionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "onTransitionEndCapture",
          "value": "TransitionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "ref",
          "value": "LegacyRef<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/link/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "key",
          "value": "Key",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface LinkLikeComponentProps\n  extends React.HTMLProps<HTMLAnchorElement> {\n  /** The url to link to */\n  url: string;\n  /**\tThe content to display inside the link */\n  children?: React.ReactNode;\n  /** Makes the link open in a new tab */\n  external?: boolean;\n  /** Makes the browser download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value. */\n  download?: string | boolean;\n  [key: string]: any;\n}"
    }
  },
  "LinkLikeComponent": {
    "polaris-react/src/utilities/link/types.ts": {
      "filePath": "polaris-react/src/utilities/link/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "LinkLikeComponent",
      "value": "React.ComponentType<LinkLikeComponentProps>",
      "description": ""
    }
  },
  "NavigableOption": {
    "polaris-react/src/utilities/listbox/types.ts": {
      "filePath": "polaris-react/src/utilities/listbox/types.ts",
      "name": "NavigableOption",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/listbox/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "domId",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/listbox/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/listbox/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "element",
          "value": "HTMLElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/listbox/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/listbox/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "isAction",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/listbox/types.ts",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface NavigableOption {\n  domId: string;\n  value: string;\n  element: HTMLElement;\n  disabled: boolean;\n  isAction?: boolean;\n  index?: number;\n}"
    }
  },
  "ListboxContextType": {
    "polaris-react/src/utilities/listbox/context.ts": {
      "filePath": "polaris-react/src/utilities/listbox/context.ts",
      "name": "ListboxContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/listbox/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "onOptionSelect",
          "value": "(option: NavigableOption) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/listbox/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "setLoading",
          "value": "(label?: string) => void",
          "description": ""
        }
      ],
      "value": "export interface ListboxContextType {\n  onOptionSelect(option: NavigableOption): void;\n  setLoading(label?: string): void;\n}"
    }
  },
  "PortalsContainerElement": {
    "polaris-react/src/utilities/portals/types.ts": {
      "filePath": "polaris-react/src/utilities/portals/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "PortalsContainerElement",
      "value": "HTMLDivElement | null",
      "description": ""
    }
  },
  "ResourceListSelectedItems": {
    "polaris-react/src/utilities/resource-list/types.ts": {
      "filePath": "polaris-react/src/utilities/resource-list/types.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ResourceListSelectedItems",
      "value": "string[] | 'All'",
      "description": ""
    }
  },
  "ResourceListContextType": {
    "polaris-react/src/utilities/resource-list/context.ts": {
      "filePath": "polaris-react/src/utilities/resource-list/context.ts",
      "name": "ResourceListContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/resource-list/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectMode",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/resource-list/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/resource-list/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "selectedItems",
          "value": "ResourceListSelectedItems",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/resource-list/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "resourceName",
          "value": "{ singular: string; plural: string; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/resource-list/context.ts",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/resource-list/context.ts",
          "syntaxKind": "MethodSignature",
          "name": "onSelectionChange",
          "value": "(selected: boolean, id: string, sortNumber: number, shiftKey: boolean) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ResourceListContextType {\n  selectMode?: boolean;\n  selectable?: boolean;\n  selectedItems?: ResourceListSelectedItems;\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  loading?: boolean;\n  onSelectionChange?(\n    selected: boolean,\n    id: string,\n    sortNumber: number | undefined,\n    shiftKey: boolean,\n  ): void;\n}"
    }
  },
  "StickyItem": {
    "polaris-react/src/utilities/sticky-manager/sticky-manager.ts": {
      "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
      "name": "StickyItem",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
          "syntaxKind": "PropertySignature",
          "name": "stickyNode",
          "value": "HTMLElement",
          "description": "Node of the sticky element"
        },
        {
          "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
          "syntaxKind": "PropertySignature",
          "name": "placeHolderNode",
          "value": "HTMLElement",
          "description": "Placeholder element"
        },
        {
          "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
          "syntaxKind": "PropertySignature",
          "name": "boundingElement",
          "value": "HTMLElement",
          "description": "Element outlining the fixed position boundaries",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
          "syntaxKind": "PropertySignature",
          "name": "offset",
          "value": "boolean",
          "description": "Offset vertical spacing from the top of the scrollable container"
        },
        {
          "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
          "syntaxKind": "PropertySignature",
          "name": "disableWhenStacked",
          "value": "boolean",
          "description": "Should the element remain in a fixed position when the layout is stacked (smaller screens)"
        },
        {
          "filePath": "polaris-react/src/utilities/sticky-manager/sticky-manager.ts",
          "syntaxKind": "MethodSignature",
          "name": "handlePositioning",
          "value": "(stick: boolean, top?: number, left?: number, width?: string | number) => void",
          "description": "Method to handle positioning"
        }
      ],
      "value": "interface StickyItem {\n  /** Node of the sticky element */\n  stickyNode: HTMLElement;\n  /** Placeholder element */\n  placeHolderNode: HTMLElement;\n  /** Element outlining the fixed position boundaries */\n  boundingElement?: HTMLElement | null;\n  /** Offset vertical spacing from the top of the scrollable container */\n  offset: boolean;\n  /** Should the element remain in a fixed position when the layout is stacked (smaller screens)  */\n  disableWhenStacked: boolean;\n  /** Method to handle positioning */\n  handlePositioning(\n    stick: boolean,\n    top?: number,\n    left?: number,\n    width?: string | number,\n  ): void;\n}"
    }
  },
  "DropZoneEvent": {
    "polaris-react/src/components/DropZone/utils/index.ts": {
      "filePath": "polaris-react/src/components/DropZone/utils/index.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "DropZoneEvent",
      "value": "DragEvent | React.ChangeEvent<HTMLInputElement>",
      "description": ""
    }
  },
  "PreferredPosition": {
    "polaris-react/src/components/PositionedOverlay/utilities/math.ts": {
      "filePath": "polaris-react/src/components/PositionedOverlay/utilities/math.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "PreferredPosition",
      "value": "'above' | 'below' | 'mostSpace'",
      "description": ""
    }
  },
  "PreferredAlignment": {
    "polaris-react/src/components/PositionedOverlay/utilities/math.ts": {
      "filePath": "polaris-react/src/components/PositionedOverlay/utilities/math.ts",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "PreferredAlignment",
      "value": "'left' | 'center' | 'right'",
      "description": ""
    }
  },
  "Margins": {
    "polaris-react/src/components/PositionedOverlay/utilities/math.ts": {
      "filePath": "polaris-react/src/components/PositionedOverlay/utilities/math.ts",
      "name": "Margins",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/utilities/math.ts",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/utilities/math.ts",
          "syntaxKind": "PropertySignature",
          "name": "container",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/utilities/math.ts",
          "syntaxKind": "PropertySignature",
          "name": "horizontal",
          "value": "number",
          "description": ""
        }
      ],
      "value": "export interface Margins {\n  activator: number;\n  container: number;\n  horizontal: number;\n}"
    }
  },
  "ConditionalWrapperProps": {
    "polaris-react/src/utilities/components.tsx": {
      "filePath": "polaris-react/src/utilities/components.tsx",
      "name": "ConditionalWrapperProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/components.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "any",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/components.tsx",
          "syntaxKind": "PropertySignature",
          "name": "condition",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/components.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wrapper",
          "value": "(children: any) => any",
          "description": ""
        }
      ],
      "value": "interface ConditionalWrapperProps {\n  children: any;\n  condition: boolean;\n  wrapper: (children: any) => any;\n}"
    }
  },
  "ConditionalRenderProps": {
    "polaris-react/src/utilities/components.tsx": {
      "filePath": "polaris-react/src/utilities/components.tsx",
      "name": "ConditionalRenderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/components.tsx",
          "syntaxKind": "PropertySignature",
          "name": "condition",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/components.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "any",
          "description": ""
        }
      ],
      "value": "interface ConditionalRenderProps {\n  condition: boolean;\n  children: any;\n}"
    }
  },
  "DependencyList": {
    "polaris-react/src/utilities/use-deep-compare-ref.tsx": {
      "filePath": "polaris-react/src/utilities/use-deep-compare-ref.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "DependencyList",
      "value": "readonly unknown[]",
      "description": ""
    },
    "polaris-react/src/utilities/use-deep-effect.tsx": {
      "filePath": "polaris-react/src/utilities/use-deep-effect.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "DependencyList",
      "value": "readonly unknown[]",
      "description": ""
    }
  },
  "Comparator": {
    "polaris-react/src/utilities/use-deep-compare-ref.tsx": {
      "filePath": "polaris-react/src/utilities/use-deep-compare-ref.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Comparator",
      "value": "(a: DependencyList, b: DependencyList) => boolean",
      "description": ""
    },
    "polaris-react/src/utilities/use-deep-effect.tsx": {
      "filePath": "polaris-react/src/utilities/use-deep-effect.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Comparator",
      "value": "(a: DependencyList, b: DependencyList) => boolean",
      "description": ""
    }
  },
  "ActionListProps": {
    "polaris-react/src/components/ActionList/ActionList.tsx": {
      "filePath": "polaris-react/src/components/ActionList/ActionList.tsx",
      "name": "ActionListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionList/ActionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "readonly ActionListItemDescriptor[]",
          "description": "Collection of actions for list",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionList/ActionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sections",
          "value": "readonly ActionListSection[]",
          "description": "Collection of sectioned action items",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionList/ActionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionRole",
          "value": "string",
          "description": "Defines a specific role attribute for each action in the list",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionList/ActionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onActionAnyItem",
          "value": "() => void",
          "description": "Callback when any item is clicked or keypressed",
          "isOptional": true
        }
      ],
      "value": "export interface ActionListProps {\n  /** Collection of actions for list */\n  items?: readonly ActionListItemDescriptor[];\n  /** Collection of sectioned action items */\n  sections?: readonly ActionListSection[];\n  /** Defines a specific role attribute for each action in the list */\n  actionRole?: 'menuitem' | string;\n  /** Callback when any item is clicked or keypressed */\n  onActionAnyItem?: ActionListItemDescriptor['onAction'];\n}"
    }
  },
  "ActionListItemProps": {
    "polaris-react/src/components/ActionList/ActionList.tsx": {
      "filePath": "polaris-react/src/components/ActionList/ActionList.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ActionListItemProps",
      "value": "ItemProps",
      "description": ""
    }
  },
  "AccountConnectionProps": {
    "polaris-react/src/components/AccountConnection/AccountConnection.tsx": {
      "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
      "name": "AccountConnectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "Content to display as title",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "details",
          "value": "React.ReactNode",
          "description": "Content to display as additional details",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "termsOfService",
          "value": "React.ReactNode",
          "description": "Content to display as terms of service",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accountName",
          "value": "string",
          "description": "The name of the service",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "avatarUrl",
          "value": "string",
          "description": "URL for the user’s avatar image",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "connected",
          "value": "boolean",
          "description": "Set if the account is connected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "Action",
          "description": "Action for account connection",
          "isOptional": true
        }
      ],
      "value": "export interface AccountConnectionProps {\n  /** Content to display as title */\n  title?: React.ReactNode;\n  /** Content to display as additional details */\n  details?: React.ReactNode;\n  /** Content to display as terms of service */\n  termsOfService?: React.ReactNode;\n  /** The name of the service */\n  accountName?: string;\n  /** URL for the user’s avatar image */\n  avatarUrl?: string;\n  /** Set if the account is connected */\n  connected?: boolean;\n  /** Action for account connection */\n  action?: Action;\n}"
    }
  },
  "ActionMenuProps": {
    "polaris-react/src/components/ActionMenu/ActionMenu.tsx": {
      "filePath": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
      "name": "ActionMenuProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "MenuActionDescriptor[]",
          "description": "Collection of page-level secondary actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "groups",
          "value": "MenuGroupDescriptor[]",
          "description": "Collection of page-level action groups",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rollup",
          "value": "boolean",
          "description": "Roll up all actions into a Popover > ActionList",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rollupActionsLabel",
          "value": "string",
          "description": "Label for rolled up actions activator",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onActionRollup",
          "value": "(hasRolledUp: boolean) => void",
          "description": "Callback that returns true when secondary actions are rolled up into action groups, and false when not",
          "isOptional": true
        }
      ],
      "value": "export interface ActionMenuProps {\n  /** Collection of page-level secondary actions */\n  actions?: MenuActionDescriptor[];\n  /** Collection of page-level action groups */\n  groups?: MenuGroupDescriptor[];\n  /** Roll up all actions into a Popover > ActionList */\n  rollup?: boolean;\n  /** Label for rolled up actions activator */\n  rollupActionsLabel?: string;\n  /** Callback that returns true when secondary actions are rolled up into action groups, and false when not */\n  onActionRollup?(hasRolledUp: boolean): void;\n}"
    }
  },
  "Props": {
    "polaris-react/src/components/AfterInitialMount/AfterInitialMount.tsx": {
      "filePath": "polaris-react/src/components/AfterInitialMount/AfterInitialMount.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/AfterInitialMount/AfterInitialMount.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AfterInitialMount/AfterInitialMount.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fallback",
          "value": "ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AfterInitialMount/AfterInitialMount.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMount",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface Props {\n  children?: ReactNode;\n  fallback?: ReactNode;\n  onMount?: () => void;\n}"
    },
    "polaris-react/src/components/FocusManager/FocusManager.tsx": {
      "filePath": "polaris-react/src/components/FocusManager/FocusManager.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/FocusManager/FocusManager.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface Props {\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/MediaQueryProvider/MediaQueryProvider.tsx": {
      "filePath": "polaris-react/src/components/MediaQueryProvider/MediaQueryProvider.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/MediaQueryProvider/MediaQueryProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface Props {\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/RangeSlider/RangeSlider.tsx": {
      "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "ReactNode",
          "description": "Label for the range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for range input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "RangeSliderValue",
          "description": "Initial value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "number",
          "description": "Minimum possible value for range input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "number",
          "description": "Maximum possible value for range input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "number",
          "description": "Increment value for range input changes",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "output",
          "value": "boolean",
          "description": "Provide a tooltip while sliding, indicating the current value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "ReactNode",
          "description": "Additional text to aid in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "ReactNode",
          "description": "Element to display before the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "ReactNode",
          "description": "Element to display after the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: RangeSliderValue, id: string) => void",
          "description": "Callback when the range input is changed"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when range input is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        }
      ],
      "value": "interface Props extends RangeSliderProps {}"
    },
    "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx": {
      "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "MenuActionDescriptor[]",
          "description": "Collection of page-level secondary actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "groups",
          "value": "MenuGroupDescriptor[]",
          "description": "Collection of page-level action groups",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onActionRollup",
          "value": "(hasRolledUp: boolean) => void",
          "description": "Callback that returns true when secondary actions are rolled up into action groups, and false when not",
          "isOptional": true
        }
      ],
      "value": "interface Props {\n  /** Collection of page-level secondary actions */\n  actions?: MenuActionDescriptor[];\n  /** Collection of page-level action groups */\n  groups?: MenuGroupDescriptor[];\n  /** Callback that returns true when secondary actions are rolled up into action groups, and false when not */\n  onActionRollup?(hasRolledUp: boolean): void;\n}"
    },
    "polaris-react/src/components/Filters/components/TagsWrapper/TagsWrapper.tsx": {
      "filePath": "polaris-react/src/components/Filters/components/TagsWrapper/TagsWrapper.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/components/TagsWrapper/TagsWrapper.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/TagsWrapper/TagsWrapper.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface Props {\n  children: React.ReactNode;\n  hidden: boolean;\n}"
    },
    "polaris-react/src/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.tsx": {
      "filePath": "polaris-react/src/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.tsx",
      "name": "Props",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "Callback when the search is dismissed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "visible",
          "value": "boolean",
          "description": "Determines whether the overlay should be visible"
        }
      ],
      "value": "interface Props {\n  /** Callback when the search is dismissed */\n  onDismiss?(): void;\n  /** Determines whether the overlay should be visible */\n  visible: boolean;\n}"
    }
  },
  "CardBackgroundColorTokenScale": {
    "polaris-react/src/components/AlphaCard/AlphaCard.tsx": {
      "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CardBackgroundColorTokenScale",
      "value": "\"surface\" | \"surface-subdued\"",
      "description": ""
    }
  },
  "Spacing": {
    "polaris-react/src/components/AlphaCard/AlphaCard.tsx": {
      "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "ResponsiveProp<SpacingSpaceScale>",
      "description": ""
    },
    "polaris-react/src/components/Bleed/Bleed.tsx": {
      "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "ResponsiveProp<SpacingSpaceScale>",
      "description": ""
    },
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "ResponsiveProp<SpacingSpaceScale>",
      "description": ""
    },
    "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx": {
      "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "'extraTight' | 'tight' | 'loose'",
      "description": ""
    },
    "polaris-react/src/components/LegacyStack/LegacyStack.tsx": {
      "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "'extraTight' | 'tight' | 'baseTight' | 'loose' | 'extraLoose' | 'none'",
      "description": ""
    },
    "polaris-react/src/components/List/List.tsx": {
      "filePath": "polaris-react/src/components/List/List.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "'extraTight' | 'loose'",
      "description": ""
    },
    "polaris-react/src/components/Stack/Stack.tsx": {
      "filePath": "polaris-react/src/components/Stack/Stack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "'extraTight' | 'tight' | 'baseTight' | 'loose' | 'extraLoose' | 'none'",
      "description": ""
    },
    "polaris-react/src/components/TextContainer/TextContainer.tsx": {
      "filePath": "polaris-react/src/components/TextContainer/TextContainer.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Spacing",
      "value": "'tight' | 'loose'",
      "description": ""
    }
  },
  "AlphaCardProps": {
    "polaris-react/src/components/AlphaCard/AlphaCard.tsx": {
      "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
      "name": "AlphaCardProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "background",
          "value": "CardBackgroundColorTokenScale",
          "description": "Background color",
          "isOptional": true,
          "defaultValue": "'surface'"
        },
        {
          "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "padding",
          "value": "Spacing",
          "description": "The spacing around the card",
          "isOptional": true,
          "defaultValue": "{xs: '4', sm: '5'}"
        },
        {
          "filePath": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "roundedAbove",
          "value": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"",
          "description": "Border radius value above a set breakpoint",
          "isOptional": true
        }
      ],
      "value": "export interface AlphaCardProps {\n  children?: React.ReactNode;\n  /** Background color\n   * @default 'surface'\n   */\n  background?: CardBackgroundColorTokenScale;\n  /** The spacing around the card\n   * @default {xs: '4', sm: '5'}\n   * @example\n   * padding='4'\n   * padding={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  padding?: Spacing;\n  /** Border radius value above a set breakpoint */\n  roundedAbove?: BreakpointsAlias;\n}"
    }
  },
  "Align": {
    "polaris-react/src/components/AlphaStack/AlphaStack.tsx": {
      "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Align",
      "value": "'start' | 'end' | 'center'",
      "description": ""
    },
    "polaris-react/src/components/Inline/Inline.tsx": {
      "filePath": "polaris-react/src/components/Inline/Inline.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Align",
      "value": "'start' | 'center' | 'end' | 'space-around' | 'space-between' | 'space-evenly'",
      "description": ""
    }
  },
  "Element": {
    "polaris-react/src/components/AlphaStack/AlphaStack.tsx": {
      "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Element",
      "value": "'div' | 'ul' | 'ol' | 'fieldset'",
      "description": ""
    },
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Element",
      "value": "'div' | 'span' | 'section' | 'legend' | 'ul' | 'li'",
      "description": ""
    },
    "polaris-react/src/components/Text/Text.tsx": {
      "filePath": "polaris-react/src/components/Text/Text.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Element",
      "value": "'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'span' | 'legend'",
      "description": ""
    }
  },
  "Gap": {
    "polaris-react/src/components/AlphaStack/AlphaStack.tsx": {
      "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Gap",
      "value": "ResponsiveProp<SpacingSpaceScale>",
      "description": ""
    },
    "polaris-react/src/components/Columns/Columns.tsx": {
      "filePath": "polaris-react/src/components/Columns/Columns.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Gap",
      "value": "ResponsiveProp<SpacingSpaceScale>",
      "description": ""
    },
    "polaris-react/src/components/Grid/Grid.tsx": {
      "filePath": "polaris-react/src/components/Grid/Grid.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Gap",
      "value": "{\n  [Breakpoint in Breakpoints]?: string;\n}",
      "description": ""
    },
    "polaris-react/src/components/Inline/Inline.tsx": {
      "filePath": "polaris-react/src/components/Inline/Inline.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Gap",
      "value": "ResponsiveProp<SpacingSpaceScale>",
      "description": ""
    }
  },
  "AlphaStackProps": {
    "polaris-react/src/components/AlphaStack/AlphaStack.tsx": {
      "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
      "name": "AlphaStackProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "as",
          "value": "Element",
          "description": "HTML Element type",
          "isOptional": true,
          "defaultValue": "'div'"
        },
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "align",
          "value": "Align",
          "description": "Horizontal alignment of children",
          "isOptional": true,
          "defaultValue": "'start'"
        },
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Toggle children to be full width",
          "isOptional": true,
          "defaultValue": "false"
        },
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "gap",
          "value": "Gap",
          "description": "The spacing between children",
          "isOptional": true,
          "defaultValue": "'4'"
        },
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "HTML id attribute",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "reverseOrder",
          "value": "boolean",
          "description": "Reverse the render order of child items",
          "isOptional": true,
          "defaultValue": "false"
        }
      ],
      "value": "export interface AlphaStackProps extends React.AriaAttributes {\n  children?: React.ReactNode;\n  /** HTML Element type\n   * @default 'div'\n   */\n  as?: Element;\n  /** Horizontal alignment of children\n   * @default 'start'\n   */\n  align?: Align;\n  /** Toggle children to be full width\n   * @default false\n   */\n  fullWidth?: boolean;\n  /** The spacing between children\n   * @default '4'\n   */\n  gap?: Gap;\n  /** HTML id attribute */\n  id?: string;\n  /** Reverse the render order of child items\n   * @default false\n   */\n  reverseOrder?: boolean;\n}"
    }
  },
  "State": {
    "polaris-react/src/components/AppProvider/AppProvider.tsx": {
      "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "intl",
          "value": "I18n",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "link",
          "value": "LinkLikeComponent",
          "description": ""
        }
      ],
      "value": "interface State {\n  intl: I18n;\n  link: LinkLikeComponent | undefined;\n}"
    },
    "polaris-react/src/components/BulkActions/BulkActions.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "popoverVisible",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "containerWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "measuring",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface State {\n  popoverVisible: boolean;\n  containerWidth: number;\n  measuring: boolean;\n}"
    },
    "polaris-react/src/components/ColorPicker/ColorPicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pickerSize",
          "value": "{ width: number; height: number; }",
          "description": ""
        }
      ],
      "value": "interface State {\n  pickerSize: {\n    width: number;\n    height: number;\n  };\n}"
    },
    "polaris-react/src/components/Filters/Filters.tsx": {
      "filePath": "polaris-react/src/components/Filters/Filters.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "name": "[key: string]",
          "value": "boolean"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "readyForFocus",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface State {\n  open: boolean;\n  readyForFocus: boolean;\n  [key: string]: boolean;\n}"
    },
    "polaris-react/src/components/Frame/Frame.tsx": {
      "filePath": "polaris-react/src/components/Frame/Frame.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "skipFocused",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "globalRibbonHeight",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loadingStack",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "toastMessages",
          "value": "ToastPropsWithID[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showContextualSaveBar",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface State {\n  skipFocused?: boolean;\n  globalRibbonHeight: number;\n  loadingStack: number;\n  toastMessages: ToastPropsWithID[];\n  showContextualSaveBar: boolean;\n}"
    },
    "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx": {
      "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "measuring",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activatorRect",
          "value": "Rect",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "left",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "right",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "top",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "height",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "positioning",
          "value": "Positioning",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndex",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "outsideScrollableContainer",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lockPosition",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface State {\n  measuring: boolean;\n  activatorRect: Rect;\n  left?: number;\n  right?: number;\n  top: number;\n  height: number;\n  width: number | null;\n  positioning: Positioning;\n  zIndex: number | null;\n  outsideScrollableContainer: boolean;\n  lockPosition: boolean;\n}"
    },
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionsMenuVisible",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focusedInner",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface State {\n  actionsMenuVisible: boolean;\n  focused: boolean;\n  focusedInner: boolean;\n  selected: boolean;\n}"
    },
    "polaris-react/src/components/Sticky/Sticky.tsx": {
      "filePath": "polaris-react/src/components/Sticky/Sticky.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Sticky/Sticky.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isSticky",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Sticky/Sticky.tsx",
          "syntaxKind": "PropertySignature",
          "name": "style",
          "value": "{ [key: string]: unknown; }",
          "description": ""
        }
      ],
      "value": "interface State {\n  isSticky: boolean;\n  style: {[key: string]: unknown};\n}"
    },
    "polaris-react/src/components/Tabs/Tabs.tsx": {
      "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disclosureWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabWidths",
          "value": "number[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "visibleTabs",
          "value": "number[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hiddenTabs",
          "value": "number[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "containerWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showDisclosure",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabToFocus",
          "value": "number",
          "description": ""
        }
      ],
      "value": "interface State {\n  disclosureWidth: number;\n  tabWidths: number[];\n  visibleTabs: number[];\n  hiddenTabs: number[];\n  containerWidth: number;\n  showDisclosure: boolean;\n  tabToFocus: number;\n}"
    },
    "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dragging",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "interface State {\n  dragging: boolean;\n}"
    },
    "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sliderHeight",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "draggerHeight",
          "value": "number",
          "description": ""
        }
      ],
      "value": "interface State {\n  sliderHeight: number;\n  draggerHeight: number;\n}"
    },
    "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sliderHeight",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "draggerHeight",
          "value": "number",
          "description": ""
        }
      ],
      "value": "interface State {\n  sliderHeight: number;\n  draggerHeight: number;\n}"
    },
    "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx": {
      "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "availableWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "proxyButtonsWidth",
          "value": "ComputedProperty",
          "description": ""
        }
      ],
      "value": "interface State {\n  availableWidth: number;\n  proxyButtonsWidth: ComputedProperty;\n}"
    },
    "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "transitionStatus",
          "value": "TransitionStatus",
          "description": ""
        }
      ],
      "value": "interface State {\n  transitionStatus: TransitionStatus;\n}"
    },
    "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx": {
      "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
      "name": "State",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "DualValue",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "trackWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "trackLeft",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prevValue",
          "value": "DualValue",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface State {\n  value: DualValue;\n  trackWidth: number;\n  trackLeft: number;\n  prevValue?: DualValue;\n}"
    }
  },
  "AppProviderProps": {
    "polaris-react/src/components/AppProvider/AppProvider.tsx": {
      "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
      "name": "AppProviderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "i18n",
          "value": "TranslationDictionary | TranslationDictionary[]",
          "description": "A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries"
        },
        {
          "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "linkComponent",
          "value": "LinkLikeComponent",
          "description": "A custom component to use for all links used by Polaris components",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "features",
          "value": "FeaturesConfig",
          "description": "For toggling features",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Inner content of the application",
          "isOptional": true
        }
      ],
      "value": "export interface AppProviderProps {\n  /** A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries */\n  i18n: ConstructorParameters<typeof I18n>[0];\n  /** A custom component to use for all links used by Polaris components */\n  linkComponent?: LinkLikeComponent;\n  /** For toggling features */\n  features?: FeaturesConfig;\n  /** Inner content of the application */\n  children?: React.ReactNode;\n}"
    }
  },
  "AutocompleteProps": {
    "polaris-react/src/components/Autocomplete/Autocomplete.tsx": {
      "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
      "name": "AutocompleteProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the Autocomplete",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "options",
          "value": "OptionDescriptor[] | SectionDescriptor[]",
          "description": "Collection of options to be listed"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "string[]",
          "description": "The selected options"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "textField",
          "value": "React.ReactElement",
          "description": "The text field component attached to the list of options"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "The preferred direction to open the popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "listTitle",
          "value": "string",
          "description": "Title of the list of options",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "Allow more than one option to be selected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionBefore",
          "value": "ActionListItemDescriptor & { wrapOverflow?: boolean; }",
          "description": "An action to render above the list of options",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Display loading state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "willLoadMoreResults",
          "value": "boolean",
          "description": "Indicates if more results will load dynamically",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "PropertySignature",
          "name": "emptyState",
          "value": "React.ReactNode",
          "description": "Is rendered when there are no options",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSelect",
          "value": "(selected: string[]) => void",
          "description": "Callback when the selection of options is changed"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onLoadMoreResults",
          "value": "() => void",
          "description": "Callback when the end of the list is reached",
          "isOptional": true
        }
      ],
      "value": "export interface AutocompleteProps {\n  /** A unique identifier for the Autocomplete */\n  id?: string;\n  /** Collection of options to be listed */\n  options: SectionDescriptor[] | OptionDescriptor[];\n  /** The selected options */\n  selected: string[];\n  /** The text field component attached to the list of options */\n  textField: React.ReactElement;\n  /** The preferred direction to open the popover */\n  preferredPosition?: PopoverProps['preferredPosition'];\n  /** Title of the list of options */\n  listTitle?: string;\n  /** Allow more than one option to be selected */\n  allowMultiple?: boolean;\n  /** An action to render above the list of options */\n  actionBefore?: ActionListItemDescriptor & {\n    /** Specifies that if the label is too long it will wrap instead of being hidden  */\n    wrapOverflow?: boolean;\n  };\n  /** Display loading state */\n  loading?: boolean;\n  /** Indicates if more results will load dynamically */\n  willLoadMoreResults?: boolean;\n  /** Is rendered when there are no options */\n  emptyState?: React.ReactNode;\n  /** Callback when the selection of options is changed */\n  onSelect(selected: string[]): void;\n  /** Callback when the end of the list is reached */\n  onLoadMoreResults?(): void;\n}"
    }
  },
  "Shape": {
    "polaris-react/src/components/Avatar/Avatar.tsx": {
      "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Shape",
      "value": "'square' | 'round'",
      "description": ""
    }
  },
  "AvatarProps": {
    "polaris-react/src/components/Avatar/Avatar.tsx": {
      "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
      "name": "AvatarProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of avatar",
          "isOptional": true,
          "defaultValue": "'medium'"
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shape",
          "value": "Shape",
          "description": "Shape of avatar",
          "isOptional": true,
          "defaultValue": "'round'"
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "The name of the person",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "initials",
          "value": "string",
          "description": "Initials of person to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "customer",
          "value": "boolean",
          "description": "Whether the avatar is for a customer",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "source",
          "value": "string",
          "description": "URL of the avatar image which falls back to initials if the image fails to load",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onError",
          "value": "() => void",
          "description": "Callback fired when the image fails to load",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Avatar/Avatar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Accessible label for the avatar image",
          "isOptional": true
        }
      ],
      "value": "export interface AvatarProps {\n  /**\n   * Size of avatar\n   * @default 'medium'\n   */\n  size?: Size;\n  /**\n   * Shape of avatar\n   * @default 'round'\n   */\n  shape?: Shape;\n  /** The name of the person */\n  name?: string;\n  /** Initials of person to display */\n  initials?: string;\n  /** Whether the avatar is for a customer */\n  customer?: boolean;\n  /** URL of the avatar image which falls back to initials if the image fails to load */\n  source?: string;\n  /** Callback fired when the image fails to load  */\n  onError?(): void;\n  /** Accessible label for the avatar image */\n  accessibilityLabel?: string;\n}"
    }
  },
  "BackdropProps": {
    "polaris-react/src/components/Backdrop/Backdrop.tsx": {
      "filePath": "polaris-react/src/components/Backdrop/Backdrop.tsx",
      "name": "BackdropProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "syntaxKind": "PropertySignature",
          "name": "belowNavigation",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "syntaxKind": "PropertySignature",
          "name": "transparent",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "syntaxKind": "PropertySignature",
          "name": "setClosing",
          "value": "Dispatch<SetStateAction<boolean>>",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface BackdropProps {\n  belowNavigation?: boolean;\n  transparent?: boolean;\n  onClick?(): void;\n  onTouchStart?(): void;\n  setClosing?: Dispatch<SetStateAction<boolean>>;\n}"
    }
  },
  "NonMutuallyExclusiveProps": {
    "polaris-react/src/components/Badge/Badge.tsx": {
      "filePath": "polaris-react/src/components/Badge/Badge.tsx",
      "name": "NonMutuallyExclusiveProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Badge/Badge.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "string",
          "description": "The content to display inside the badge.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Badge/Badge.tsx",
          "syntaxKind": "PropertySignature",
          "name": "status",
          "value": "Status",
          "description": "Colors and labels the badge with the given status.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Badge/Badge.tsx",
          "syntaxKind": "PropertySignature",
          "name": "progress",
          "value": "Progress",
          "description": "Render a pip showing the progress of a given task.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Badge/Badge.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display to the left of the badge’s content.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Badge/Badge.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Medium or small size.",
          "defaultValue": "'medium'"
        },
        {
          "filePath": "polaris-react/src/components/Badge/Badge.tsx",
          "syntaxKind": "PropertySignature",
          "name": "statusAndProgressLabelOverride",
          "value": "string",
          "description": "Pass a custom accessibilityLabel",
          "isOptional": true
        }
      ],
      "value": "interface NonMutuallyExclusiveProps {\n  /** The content to display inside the badge. */\n  children?: string;\n  /** Colors and labels the badge with the given status. */\n  status?: Status;\n  /** Render a pip showing the progress of a given task. */\n  progress?: Progress;\n  /** Icon to display to the left of the badge’s content. */\n  icon?: IconSource;\n  /**\n   * @deprecated\n   * Medium or small size.\n   * @default 'medium'\n   */\n  size?: Size;\n  /** Pass a custom accessibilityLabel */\n  statusAndProgressLabelOverride?: string;\n}"
    },
    "polaris-react/src/components/KeypressListener/KeypressListener.tsx": {
      "filePath": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
      "name": "NonMutuallyExclusiveProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "keyCode",
          "value": "Key",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
          "syntaxKind": "MethodSignature",
          "name": "handler",
          "value": "(event: KeyboardEvent) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "keyEvent",
          "value": "KeyEvent",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface NonMutuallyExclusiveProps {\n  keyCode: Key;\n  handler(event: KeyboardEvent): void;\n  keyEvent?: KeyEvent;\n}"
    },
    "polaris-react/src/components/Tag/Tag.tsx": {
      "filePath": "polaris-react/src/components/Tag/Tag.tsx",
      "name": "NonMutuallyExclusiveProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tag/Tag.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content to display in the tag",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tag/Tag.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables the tag",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tag/Tag.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when tag is clicked or keypressed. Renders without remove button or url when set.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tag/Tag.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onRemove",
          "value": "() => void",
          "description": "Callback when remove button is clicked or keypressed.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tag/Tag.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "A string to use when tag has more than textual content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tag/Tag.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "Url to navigate to when tag is clicked or keypressed.",
          "isOptional": true
        }
      ],
      "value": "export interface NonMutuallyExclusiveProps {\n  /** Content to display in the tag */\n  children?: React.ReactNode;\n  /** Disables the tag  */\n  disabled?: boolean;\n  /** Callback when tag is clicked or keypressed. Renders without remove button or url when set. */\n  onClick?(): void;\n  /** Callback when remove button is clicked or keypressed. */\n  onRemove?(): void;\n  /** A string to use when tag has more than textual content */\n  accessibilityLabel?: string;\n  /** Url to navigate to when tag is clicked or keypressed. */\n  url?: string;\n}"
    },
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "name": "NonMutuallyExclusiveProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "React.ReactNode",
          "description": "Text to display before value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "React.ReactNode",
          "description": "Text to display after value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalContent",
          "value": "React.ReactNode",
          "description": "Content to vertically display above the input value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "placeholder",
          "value": "string",
          "description": "Hint text to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Initial value for the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional hint text to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the input"
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "clearButton",
          "value": "boolean",
          "description": "Show a clear text button in the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectTextOnFocus",
          "value": "boolean",
          "description": "Indicates whether or not the entire value should be selected on focus.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suggestion",
          "value": "string",
          "description": "An inline autocomplete suggestion containing the input value. The characters that complete the input value are selected for ease of deletion on input change or keypress of Backspace/Delete. The selected substring is visually highlighted with subdued styling.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "readOnly",
          "value": "boolean",
          "description": "Disable editing of the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoFocus",
          "value": "boolean",
          "description": "Automatically focus the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": "Force the focus state on the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "multiline",
          "value": "number | boolean",
          "description": "Allow for multiple lines of input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Error to display beneath the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "connectedRight",
          "value": "React.ReactNode",
          "description": "An element connected to the right of the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "connectedLeft",
          "value": "React.ReactNode",
          "description": "An element connected to the left of the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "Type",
          "description": "Determine type of input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Name of the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "Defines a specific role attribute for the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "number",
          "description": "Limit increment value for numeric and date-time inputs",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoComplete",
          "value": "string",
          "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info"
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "string | number",
          "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "maxLength",
          "value": "number",
          "description": "Maximum character length for an input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "maxHeight",
          "value": "string | number",
          "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "string | number",
          "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "minLength",
          "value": "number",
          "description": "Minimum character length for an input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pattern",
          "value": "string",
          "description": "A regular expression to check the value against",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "inputMode",
          "value": "InputMode",
          "description": "Choose the keyboard that should be used on mobile devices",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spellCheck",
          "value": "boolean",
          "description": "Indicate whether value should have spelling checked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaOwns",
          "value": "string",
          "description": "Indicates the id of a component owned by the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Indicates whether or not a Popover is displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Indicates the id of a component controlled by the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaActiveDescendant",
          "value": "string",
          "description": "Indicates the id of a related component’s visually focused element to the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaAutocomplete",
          "value": "string",
          "description": "Indicates what kind of user input completion suggestions are provided",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showCharacterCount",
          "value": "boolean",
          "description": "Indicates whether or not the character count should be displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "align",
          "value": "Alignment",
          "description": "Determines the alignment of the text in the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "requiredIndicator",
          "value": "boolean",
          "description": "Visual required indicator, adds an asterisk to label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "monospaced",
          "value": "boolean",
          "description": "Indicates whether or not a monospaced font should be used",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClearButtonClick",
          "value": "(id: string) => void",
          "description": "Callback fired when clear button is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: string, id: string) => void",
          "description": "Callback fired when value is changed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onFocus",
          "value": "(event?: React.FocusEvent) => void",
          "description": "Callback fired when input is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "(event?: React.FocusEvent) => void",
          "description": "Callback fired when input is blurred",
          "isOptional": true
        }
      ],
      "value": "interface NonMutuallyExclusiveProps {\n  /** Text to display before value */\n  prefix?: React.ReactNode;\n  /** Text to display after value */\n  suffix?: React.ReactNode;\n  /** Content to vertically display above the input value */\n  verticalContent?: React.ReactNode;\n  /** Hint text to display */\n  placeholder?: string;\n  /** Initial value for the input */\n  value?: string;\n  /** Additional hint text to display */\n  helpText?: React.ReactNode;\n  /** Label for the input */\n  label: React.ReactNode;\n  /** Adds an action to the label */\n  labelAction?: LabelledProps['action'];\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Disable the input */\n  disabled?: boolean;\n  /** Show a clear text button in the input */\n  clearButton?: boolean;\n  /** Indicates whether or not the entire value should be selected on focus. */\n  selectTextOnFocus?: boolean;\n  /** An inline autocomplete suggestion containing the input value. The characters that complete the input value are selected for ease of deletion on input change or keypress of Backspace/Delete. The selected substring is visually highlighted with subdued styling. */\n  suggestion?: string;\n  /** Disable editing of the input */\n  readOnly?: boolean;\n  /** Automatically focus the input */\n  autoFocus?: boolean;\n  /** Force the focus state on the input */\n  focused?: boolean;\n  /** Allow for multiple lines of input */\n  multiline?: boolean | number;\n  /** Error to display beneath the label */\n  error?: Error | boolean;\n  /** An element connected to the right of the input */\n  connectedRight?: React.ReactNode;\n  /** An element connected to the left of the input */\n  connectedLeft?: React.ReactNode;\n  /** Determine type of input */\n  type?: Type;\n  /** Name of the input */\n  name?: string;\n  /** ID for the input */\n  id?: string;\n  /** Defines a specific role attribute for the input */\n  role?: string;\n  /** Limit increment value for numeric and date-time inputs */\n  step?: number;\n  /** Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info */\n  autoComplete: string;\n  /** Mimics the behavior of the native HTML attribute, limiting the maximum value */\n  max?: number | string;\n  /** Maximum character length for an input */\n  maxLength?: number;\n  /** Maximum height of the input element. Only applies when `multiline` is `true` */\n  maxHeight?: number | string;\n  /** Mimics the behavior of the native HTML attribute, limiting the minimum value */\n  min?: number | string;\n  /** Minimum character length for an input */\n  minLength?: number;\n  /** A regular expression to check the value against */\n  pattern?: string;\n  /** Choose the keyboard that should be used on mobile devices */\n  inputMode?: InputMode;\n  /** Indicate whether value should have spelling checked */\n  spellCheck?: boolean;\n  /** Indicates the id of a component owned by the input */\n  ariaOwns?: string;\n  /** Indicates whether or not a Popover is displayed */\n  ariaExpanded?: boolean;\n  /** Indicates the id of a component controlled by the input */\n  ariaControls?: string;\n  /** Indicates the id of a related component’s visually focused element to the input */\n  ariaActiveDescendant?: string;\n  /** Indicates what kind of user input completion suggestions are provided */\n  ariaAutocomplete?: string;\n  /** Indicates whether or not the character count should be displayed */\n  showCharacterCount?: boolean;\n  /** Determines the alignment of the text in the input */\n  align?: Alignment;\n  /** Visual required indicator, adds an asterisk to label */\n  requiredIndicator?: boolean;\n  /** Indicates whether or not a monospaced font should be used */\n  monospaced?: boolean;\n  /** Callback fired when clear button is clicked */\n  onClearButtonClick?(id: string): void;\n  /** Callback fired when value is changed */\n  onChange?(value: string, id: string): void;\n  /** Callback fired when input is focused */\n  onFocus?: (event?: React.FocusEvent) => void;\n  /** Callback fired when input is blurred */\n  onBlur?(event?: React.FocusEvent): void;\n}"
    }
  },
  "BadgeProps": {
    "polaris-react/src/components/Badge/Badge.tsx": {
      "filePath": "polaris-react/src/components/Badge/Badge.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BadgeProps",
      "value": "NonMutuallyExclusiveProps & (\n    | {progress?: Progress; icon?: undefined}\n    | {icon?: IconSource; progress?: undefined}\n  )",
      "description": ""
    }
  },
  "BannerStatus": {
    "polaris-react/src/components/Banner/Banner.tsx": {
      "filePath": "polaris-react/src/components/Banner/Banner.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BannerStatus",
      "value": "'success' | 'info' | 'warning' | 'critical'",
      "description": ""
    }
  },
  "BannerProps": {
    "polaris-react/src/components/Banner/Banner.tsx": {
      "filePath": "polaris-react/src/components/Banner/Banner.tsx",
      "name": "BannerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Title content for the banner.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display in the banner. Use only major, duotone icons",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "status",
          "value": "BannerStatus",
          "description": "Sets the status of the banner.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The child elements to render in the banner.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "DisableableAction & LoadableAction",
          "description": "Action for banner",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryAction",
          "value": "Action",
          "description": "Action | Displays a secondary action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "Callback when banner is dismissed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "stopAnnouncements",
          "value": "boolean",
          "description": "Disables screen reader announcements when changing the content of the banner",
          "isOptional": true
        }
      ],
      "value": "export interface BannerProps {\n  /** Title content for the banner. */\n  title?: string;\n  /** Icon to display in the banner. Use only major, duotone icons */\n  icon?: IconProps['source'];\n  /** Sets the status of the banner. */\n  status?: BannerStatus;\n  /** The child elements to render in the banner. */\n  children?: React.ReactNode;\n  /** Action for banner */\n  action?: DisableableAction & LoadableAction;\n  /** Action | Displays a secondary action */\n  secondaryAction?: Action;\n  /** Callback when banner is dismissed */\n  onDismiss?(): void;\n  /** Disables screen reader announcements when changing the content of the banner */\n  stopAnnouncements?: boolean;\n}"
    }
  },
  "BannerAttributes": {
    "polaris-react/src/components/Banner/Banner.tsx": {
      "filePath": "polaris-react/src/components/Banner/Banner.tsx",
      "name": "BannerAttributes",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "iconColor",
          "value": "Color",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultIcon",
          "value": "any",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaRoleType",
          "value": "\"alert\" | \"status\"",
          "description": ""
        }
      ],
      "value": "interface BannerAttributes {\n  iconColor: IconProps['color'];\n  defaultIcon: IconProps['source'];\n  ariaRoleType: 'status' | 'alert';\n}"
    }
  },
  "BannerHandles": {
    "polaris-react/src/components/Banner/Banner.tsx": {
      "filePath": "polaris-react/src/components/Banner/Banner.tsx",
      "name": "BannerHandles",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Banner/Banner.tsx",
          "syntaxKind": "MethodSignature",
          "name": "focus",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface BannerHandles {\n  focus(): void;\n}"
    }
  },
  "BleedProps": {
    "polaris-react/src/components/Bleed/Bleed.tsx": {
      "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
      "name": "BleedProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginInline",
          "value": "Spacing",
          "description": "Negative horizontal space around children",
          "isOptional": true,
          "defaultValue": "'5'"
        },
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginBlock",
          "value": "Spacing",
          "description": "Negative vertical space around children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginBlockStart",
          "value": "Spacing",
          "description": "Negative top space around children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginBlockEnd",
          "value": "Spacing",
          "description": "Negative bottom space around children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginInlineStart",
          "value": "Spacing",
          "description": "Negative left space around children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Bleed/Bleed.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginInlineEnd",
          "value": "Spacing",
          "description": "Negative right space around children",
          "isOptional": true
        }
      ],
      "value": "export interface BleedProps {\n  children?: React.ReactNode;\n  /** Negative horizontal space around children\n   * @default '5'\n   */\n  marginInline?: Spacing;\n  /** Negative vertical space around children */\n  marginBlock?: Spacing;\n  /** Negative top space around children */\n  marginBlockStart?: Spacing;\n  /** Negative bottom space around children */\n  marginBlockEnd?: Spacing;\n  /** Negative left space around children */\n  marginInlineStart?: Spacing;\n  /** Negative right space around children */\n  marginInlineEnd?: Spacing;\n}"
    }
  },
  "Overflow": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Overflow",
      "value": "'hidden' | 'scroll'",
      "description": ""
    }
  },
  "Position": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Position",
      "value": "'relative' | 'absolute' | 'fixed' | 'sticky'",
      "description": ""
    },
    "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
      "name": "Position",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "x",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "y",
          "value": "number",
          "description": ""
        }
      ],
      "value": "interface Position {\n  x: number;\n  y: number;\n}"
    }
  },
  "ColorTokenScale": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ColorTokenScale",
      "value": "'text' | 'text-critical' | 'text-disabled' | 'text-highlight' | 'text-on-critical' | 'text-on-dark' | 'text-on-interactive' | 'text-on-primary' | 'text-primary' | 'text-primary-hovered' | 'text-primary-pressed' | 'text-subdued' | 'text-subdued-on-dark' | 'text-success' | 'text-warning'",
      "description": ""
    }
  },
  "BorderTokenAlias": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BorderTokenAlias",
      "value": "'base' | 'dark' | 'divider' | 'divider-on-dark' | 'transparent'",
      "description": ""
    },
    "polaris-react/src/components/Divider/Divider.tsx": {
      "filePath": "polaris-react/src/components/Divider/Divider.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BorderTokenAlias",
      "value": "'base' | 'dark' | 'divider' | 'divider-on-dark' | 'transparent'",
      "description": ""
    }
  },
  "BorderRadiusTokenScale": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BorderRadiusTokenScale",
      "value": "'05' | '1' | '2' | '3' | '4' | '5' | '6' | 'base' | 'large' | 'half'",
      "description": ""
    }
  },
  "BackgroundColors": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BackgroundColors",
      "value": "ColorsBackdropTokenAlias | ColorsBackgroundTokenAlias | ColorsOverlayTokenAlias | ColorsActionTokenAlias | ColorsSurfaceTokenAlias",
      "description": ""
    }
  },
  "BoxProps": {
    "polaris-react/src/components/Box/Box.tsx": {
      "filePath": "polaris-react/src/components/Box/Box.tsx",
      "name": "BoxProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "as",
          "value": "Element",
          "description": "HTML Element type",
          "isOptional": true,
          "defaultValue": "'div'"
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "background",
          "value": "BackgroundColors",
          "description": "Background color",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "border",
          "value": "BorderTokenAlias",
          "description": "Border style",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderBlockEnd",
          "value": "BorderTokenAlias",
          "description": "Vertical end border style",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderInlineStart",
          "value": "BorderTokenAlias",
          "description": "Horizontal start border style",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderInlineEnd",
          "value": "BorderTokenAlias",
          "description": "Horizontal end border style",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderBlockStart",
          "value": "BorderTokenAlias",
          "description": "Vertical start border style",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadius",
          "value": "BorderRadiusTokenScale",
          "description": "Border radius",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadiusEndStart",
          "value": "BorderRadiusTokenScale",
          "description": "Vertical end horizontal start border radius",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadiusEndEnd",
          "value": "BorderRadiusTokenScale",
          "description": "Vertical end horizontal end border radius",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadiusStartStart",
          "value": "BorderRadiusTokenScale",
          "description": "Vertical start horizontal start border radius",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadiusStartEnd",
          "value": "BorderRadiusTokenScale",
          "description": "Vertical start horizontal end border radius",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderWidth",
          "value": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\"",
          "description": "Border width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderBlockStartWidth",
          "value": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\"",
          "description": "Vertical start border width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderBlockEndWidth",
          "value": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\"",
          "description": "Vertical end border width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderInlineStartWidth",
          "value": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\"",
          "description": "Horizontal start border width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderInlineEndWidth",
          "value": "\"1\" | \"2\" | \"3\" | \"4\" | \"5\"",
          "description": "Horizontal end border width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "ColorTokenScale",
          "description": "Color of children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "HTML id attribute",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "minHeight",
          "value": "string",
          "description": "Minimum height of container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "minWidth",
          "value": "string",
          "description": "Minimum width of container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "maxWidth",
          "value": "string",
          "description": "Maximum width of container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "overflowX",
          "value": "Overflow",
          "description": "Clip horizontal content of children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "overflowY",
          "value": "Overflow",
          "description": "Clip vertical content of children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "padding",
          "value": "Spacing",
          "description": "Spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paddingBlockStart",
          "value": "Spacing",
          "description": "Vertical start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paddingBlockEnd",
          "value": "Spacing",
          "description": "Vertical end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paddingInlineStart",
          "value": "Spacing",
          "description": "Horizontal start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paddingInlineEnd",
          "value": "Spacing",
          "description": "Horizontal end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "any",
          "description": "Aria role",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shadow",
          "value": "\"button\" | \"base\" | \"transparent\" | \"faint\" | \"deep\" | \"top-bar\" | \"card\" | \"popover\" | \"layer\" | \"modal\"",
          "description": "Shadow on box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabIndex",
          "value": "any",
          "description": "Set tab order",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "string",
          "description": "Width of container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "position",
          "value": "Position",
          "description": "Position of box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "insetBlockStart",
          "value": "Spacing",
          "description": "Top position of box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "insetBlockEnd",
          "value": "Spacing",
          "description": "Bottom position of box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "insetInlineStart",
          "value": "Spacing",
          "description": "Left position of box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "insetInlineEnd",
          "value": "Spacing",
          "description": "Right position of box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "opacity",
          "value": "string",
          "description": "Opacity of box",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "BorderTokenAlias",
          "description": "Outline style",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "printHidden",
          "value": "boolean",
          "description": "Visually hide the contents during print",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "visuallyHidden",
          "value": "boolean",
          "description": "Visually hide the contents (still announced by screenreader)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Box/Box.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndex",
          "value": "string",
          "description": "z-index of box",
          "isOptional": true
        }
      ],
      "value": "export interface BoxProps extends React.AriaAttributes {\n  children?: React.ReactNode;\n  /** HTML Element type\n   * @default 'div'\n   */\n  as?: Element;\n  /** Background color */\n  background?: BackgroundColors;\n  /** Border style */\n  border?: BorderTokenAlias;\n  /** Vertical end border style */\n  borderBlockEnd?: BorderTokenAlias;\n  /** Horizontal start border style */\n  borderInlineStart?: BorderTokenAlias;\n  /** Horizontal end border style */\n  borderInlineEnd?: BorderTokenAlias;\n  /** Vertical start border style */\n  borderBlockStart?: BorderTokenAlias;\n  /** Border radius */\n  borderRadius?: BorderRadiusTokenScale;\n  /** Vertical end horizontal start border radius */\n  borderRadiusEndStart?: BorderRadiusTokenScale;\n  /** Vertical end horizontal end border radius */\n  borderRadiusEndEnd?: BorderRadiusTokenScale;\n  /** Vertical start horizontal start border radius */\n  borderRadiusStartStart?: BorderRadiusTokenScale;\n  /** Vertical start horizontal end border radius */\n  borderRadiusStartEnd?: BorderRadiusTokenScale;\n  /** Border width */\n  borderWidth?: ShapeBorderWidthScale;\n  /** Vertical start border width */\n  borderBlockStartWidth?: ShapeBorderWidthScale;\n  /** Vertical end border width */\n  borderBlockEndWidth?: ShapeBorderWidthScale;\n  /** Horizontal start border width */\n  borderInlineStartWidth?: ShapeBorderWidthScale;\n  /** Horizontal end border width */\n  borderInlineEndWidth?: ShapeBorderWidthScale;\n  /** Color of children */\n  color?: ColorTokenScale;\n  /** HTML id attribute */\n  id?: string;\n  /** Minimum height of container */\n  minHeight?: string;\n  /** Minimum width of container */\n  minWidth?: string;\n  /** Maximum width of container */\n  maxWidth?: string;\n  /** Clip horizontal content of children */\n  overflowX?: Overflow;\n  /** Clip vertical content of children */\n  overflowY?: Overflow;\n  /** Spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @example\n   * padding='4'\n   * padding={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  padding?: Spacing;\n  /** Vertical start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @example\n   * paddingBlockStart='4'\n   * paddingBlockStart={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  paddingBlockStart?: Spacing;\n  /** Vertical end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @example\n   * paddingBlockEnd='4'\n   * paddingBlockEnd={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  paddingBlockEnd?: Spacing;\n  /** Horizontal start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @example\n   * paddingInlineStart='4'\n   * paddingInlineStart={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  paddingInlineStart?: Spacing;\n  /** Horizontal end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @example\n   * paddingInlineEnd='4'\n   * paddingInlineEnd={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  paddingInlineEnd?: Spacing;\n  /** Aria role */\n  role?: Extract<\n    React.AriaRole,\n    'status' | 'presentation' | 'menu' | 'listbox' | 'combobox'\n  >;\n  /** Shadow on box */\n  shadow?: DepthShadowAlias;\n  /** Set tab order */\n  tabIndex?: Extract<React.AllHTMLAttributes<HTMLElement>['tabIndex'], number>;\n  /** Width of container */\n  width?: string;\n  // These could be moved to new layout component(s) in the future\n  /** Position of box */\n  position?: Position;\n  /** Top position of box */\n  insetBlockStart?: Spacing;\n  /** Bottom position of box */\n  insetBlockEnd?: Spacing;\n  /** Left position of box */\n  insetInlineStart?: Spacing;\n  /** Right position of box */\n  insetInlineEnd?: Spacing;\n  /** Opacity of box */\n  opacity?: string;\n  /** Outline style */\n  outline?: BorderTokenAlias;\n  /** Visually hide the contents during print */\n  printHidden?: boolean;\n  /** Visually hide the contents (still announced by screenreader) */\n  visuallyHidden?: boolean;\n  /** z-index of box */\n  zIndex?: string;\n}"
    }
  },
  "BreadcrumbsProps": {
    "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx": {
      "filePath": "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx",
      "name": "BreadcrumbsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "breadcrumb",
          "value": "LinkAction | CallbackAction",
          "description": "Breadcrumb link"
        }
      ],
      "value": "export interface BreadcrumbsProps {\n  /** Breadcrumb link */\n  breadcrumb: CallbackAction | LinkAction;\n}"
    }
  },
  "BulkAction": {
    "polaris-react/src/components/BulkActions/BulkActions.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BulkAction",
      "value": "DisableableAction & BadgeAction",
      "description": ""
    }
  },
  "BulkActionListSection": {
    "polaris-react/src/components/BulkActions/BulkActions.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BulkActionListSection",
      "value": "ActionListSection",
      "description": ""
    }
  },
  "TransitionStatus": {
    "polaris-react/src/components/BulkActions/BulkActions.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TransitionStatus",
      "value": "'entering' | 'entered' | 'exiting' | 'exited'",
      "description": ""
    },
    "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx": {
      "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TransitionStatus",
      "value": "'entering' | 'entered' | 'exiting' | 'exited'",
      "description": ""
    },
    "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx": {
      "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "TransitionStatus",
      "value": "enum TransitionStatus {\n  Entering = 'entering',\n  Entered = 'entered',\n  Exiting = 'exiting',\n  Exited = 'exited',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "name": "Entering",
          "value": "entering"
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "name": "Entered",
          "value": "entered"
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "name": "Exiting",
          "value": "exiting"
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "name": "Exited",
          "value": "exited"
        }
      ]
    },
    "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "TransitionStatus",
      "value": "enum TransitionStatus {\n  Entering = 'entering',\n  Entered = 'entered',\n  Exiting = 'exiting',\n  Exited = 'exited',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "Entering",
          "value": "entering"
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "Entered",
          "value": "entered"
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "Exiting",
          "value": "exiting"
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "Exited",
          "value": "exited"
        }
      ]
    }
  },
  "BulkActionsProps": {
    "polaris-react/src/components/BulkActions/BulkActions.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
      "name": "BulkActionsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectMode",
          "value": "boolean",
          "description": "List is in a selectable state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "promotedActions",
          "value": "(MenuGroupDescriptor | BulkAction)[]",
          "description": "Actions that will be given more prominence",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "(ActionListSection | BulkAction)[]",
          "description": "List of actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables bulk actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSelectModeToggle",
          "value": "(selectMode: boolean) => void",
          "description": "Callback when selectable state of list is changed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMoreActionPopoverToggle",
          "value": "(isOpen: boolean) => void",
          "description": "Callback when more actions button is toggled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isSticky",
          "value": "boolean",
          "description": "If the BulkActions is currently sticky in view",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "number",
          "description": "The width of the BulkActions"
        }
      ],
      "value": "export interface BulkActionsProps {\n  /** List is in a selectable state */\n  selectMode?: boolean;\n  /** Actions that will be given more prominence */\n  promotedActions?: (BulkAction | MenuGroupDescriptor)[];\n  /** List of actions */\n  actions?: (BulkAction | BulkActionListSection)[];\n  /** Disables bulk actions */\n  disabled?: boolean;\n  /** Callback when selectable state of list is changed */\n  onSelectModeToggle?(selectMode: boolean): void;\n  /** Callback when more actions button is toggled */\n  onMoreActionPopoverToggle?(isOpen: boolean): void;\n  /** If the BulkActions is currently sticky in view */\n  isSticky?: boolean;\n  /** The width of the BulkActions */\n  width: number;\n}"
    }
  },
  "CombinedProps": {
    "polaris-react/src/components/BulkActions/BulkActions.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/BulkActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "BulkActionsProps & {\n  i18n: ReturnType<typeof useI18n>;\n}",
      "description": ""
    },
    "polaris-react/src/components/DataTable/DataTable.tsx": {
      "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "DataTableProps & {\n  i18n: ReturnType<typeof useI18n>;\n}",
      "description": ""
    },
    "polaris-react/src/components/Filters/Filters.tsx": {
      "filePath": "polaris-react/src/components/Filters/Filters.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "FiltersProps & {\n  i18n: ReturnType<typeof useI18n>;\n  mediaQuery: ReturnType<typeof useMediaQuery>;\n}",
      "description": ""
    },
    "polaris-react/src/components/Frame/Frame.tsx": {
      "filePath": "polaris-react/src/components/Frame/Frame.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "FrameProps & {\n  i18n: ReturnType<typeof useI18n>;\n  mediaQuery: ReturnType<typeof useMediaQuery>;\n}",
      "description": ""
    },
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "PropsFromWrapper & (PropsWithUrl | PropsWithClick)",
      "description": ""
    },
    "polaris-react/src/components/Sticky/Sticky.tsx": {
      "filePath": "polaris-react/src/components/Sticky/Sticky.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "StickyProps & {\n  stickyManager: ReturnType<typeof useStickyManager>;\n}",
      "description": ""
    },
    "polaris-react/src/components/Tabs/Tabs.tsx": {
      "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CombinedProps",
      "value": "TabsProps & {\n  i18n: ReturnType<typeof useI18n>;\n}",
      "description": ""
    }
  },
  "ButtonProps": {
    "polaris-react/src/components/Button/Button.tsx": {
      "filePath": "polaris-react/src/components/Button/Button.tsx",
      "name": "ButtonProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "string | string[]",
          "description": "The content to display inside the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primary",
          "value": "boolean",
          "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Indicates a dangerous or potentially negative action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "\"medium\" | \"large\" | \"slim\"",
          "description": "Changes the size of the button, giving it more or less padding",
          "isOptional": true,
          "defaultValue": "'medium'"
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "textAlign",
          "value": "\"start\" | \"end\" | \"center\" | \"left\" | \"right\"",
          "description": "Changes the inner text alignment of the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "boolean",
          "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Allows the button to grow to the width of its container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disclosure",
          "value": "boolean | \"up\" | \"down\" | \"select\"",
          "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "plain",
          "value": "boolean",
          "description": "Renders a button that looks like a link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "monochrome",
          "value": "boolean",
          "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "removeUnderline",
          "value": "boolean",
          "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display to the left of the button content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "connectedDisclosure",
          "value": "ConnectedDisclosure",
          "description": "Disclosure button connected right of the button. Toggles a popover action list.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dataPrimaryLink",
          "value": "boolean",
          "description": "Indicates whether or not the button is the primary navigation link when rendered inside of an `IndexTable.Row`",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the href attribute of a link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "download",
          "value": "string | boolean",
          "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "submit",
          "value": "boolean",
          "description": "Allows the button to submit a form",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables the button, disallowing merchant interaction",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Replaces button text with a spinner while a background action is being performed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pressed",
          "value": "boolean",
          "description": "Sets the button in a pressed state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "A valid WAI-ARIA role to define the semantic value of this element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the button controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaDescribedBy",
          "value": "string",
          "description": "Indicates the ID of the element that describes the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaChecked",
          "value": "\"false\" | \"true\"",
          "description": "Indicates the current checked state of the button when acting as a toggle or switch",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when button becomes focussed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus leaves button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyPress",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keypress event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyUp",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keyup event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyDown",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keydown event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onPointerDown",
          "value": "() => void",
          "description": "Callback when pointerdown event is being triggered",
          "isOptional": true
        }
      ],
      "value": "export interface ButtonProps extends BaseButton {\n  /** The content to display inside the button */\n  children?: string | string[];\n  /** Provides extra visual weight and identifies the primary action in a set of buttons */\n  primary?: boolean;\n  /** Indicates a dangerous or potentially negative action */\n  destructive?: boolean;\n  /**\n   * Changes the size of the button, giving it more or less padding\n   * @default 'medium'\n   */\n  size?: 'slim' | 'medium' | 'large';\n  /** Changes the inner text alignment of the button */\n  textAlign?: 'left' | 'right' | 'center' | 'start' | 'end';\n  /** Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops */\n  outline?: boolean;\n  /** Allows the button to grow to the width of its container */\n  fullWidth?: boolean;\n  /** Displays the button with a disclosure icon. Defaults to `down` when set to true */\n  disclosure?: 'down' | 'up' | 'select' | boolean;\n  /** Renders a button that looks like a link */\n  plain?: boolean;\n  /** Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons */\n  monochrome?: boolean;\n  /** Removes underline from button text (including on interaction) when `monochrome` and `plain` are true */\n  removeUnderline?: boolean;\n  /** Icon to display to the left of the button content */\n  icon?: React.ReactElement | IconSource;\n  /** Disclosure button connected right of the button. Toggles a popover action list. */\n  connectedDisclosure?: ConnectedDisclosure;\n  /** Indicates whether or not the button is the primary navigation link when rendered inside of an `IndexTable.Row` */\n  dataPrimaryLink?: boolean;\n}"
    }
  },
  "CommonButtonProps": {
    "polaris-react/src/components/Button/Button.tsx": {
      "filePath": "polaris-react/src/components/Button/Button.tsx",
      "name": "CommonButtonProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "className",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseUp",
          "value": "MouseUpBlurHandler",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Button/Button.tsx",
          "syntaxKind": "PropertySignature",
          "name": "data-primary-link",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface CommonButtonProps\n  extends Pick<\n    ButtonProps,\n    | 'id'\n    | 'accessibilityLabel'\n    | 'ariaDescribedBy'\n    | 'role'\n    | 'onClick'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onMouseEnter'\n    | 'onTouchStart'\n  > {\n  className: UnstyledButtonProps['className'];\n  onMouseUp: MouseUpBlurHandler;\n  'data-primary-link'?: boolean;\n}"
    }
  },
  "LinkButtonProps": {
    "polaris-react/src/components/Button/Button.tsx": {
      "filePath": "polaris-react/src/components/Button/Button.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "LinkButtonProps",
      "value": "\"url\" | \"external\" | \"download\"",
      "description": ""
    }
  },
  "ActionButtonProps": {
    "polaris-react/src/components/Button/Button.tsx": {
      "filePath": "polaris-react/src/components/Button/Button.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ActionButtonProps",
      "value": "\"submit\" | \"disabled\" | \"loading\" | \"ariaControls\" | \"ariaExpanded\" | \"ariaChecked\" | \"pressed\" | \"onKeyDown\" | \"onKeyUp\" | \"onKeyPress\" | \"onPointerDown\"",
      "description": ""
    }
  },
  "ButtonGroupProps": {
    "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx": {
      "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
      "name": "ButtonGroupProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spacing",
          "value": "Spacing",
          "description": "Determines the space between button group items",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "segmented",
          "value": "boolean",
          "description": "Join buttons as segmented group",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Buttons will stretch/shrink to occupy the full width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "connectedTop",
          "value": "boolean",
          "description": "Remove top left and right border radius",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "noWrap",
          "value": "boolean",
          "description": "Prevent buttons in button group from wrapping to next line",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Button components",
          "isOptional": true
        }
      ],
      "value": "export interface ButtonGroupProps {\n  /** Determines the space between button group items */\n  spacing?: Spacing;\n  /** Join buttons as segmented group */\n  segmented?: boolean;\n  /** Buttons will stretch/shrink to occupy the full width */\n  fullWidth?: boolean;\n  /** Remove top left and right border radius */\n  connectedTop?: boolean;\n  /** Prevent buttons in button group from wrapping to next line */\n  noWrap?: boolean;\n  /** Button components */\n  children?: React.ReactNode;\n}"
    }
  },
  "CalloutCardProps": {
    "polaris-react/src/components/CalloutCard/CalloutCard.tsx": {
      "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
      "name": "CalloutCardProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the callout card.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "The title of the card"
        },
        {
          "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "illustration",
          "value": "string",
          "description": "URL to the card illustration"
        },
        {
          "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "Action",
          "description": "Primary action for the card"
        },
        {
          "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryAction",
          "value": "Action",
          "description": "Secondary action for the card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "Callback when banner is dismissed",
          "isOptional": true
        }
      ],
      "value": "export interface CalloutCardProps {\n  /** The content to display inside the callout card. */\n  children?: React.ReactNode;\n  /** The title of the card */\n  title: React.ReactNode;\n  /** URL to the card illustration */\n  illustration: string;\n  /** Primary action for the card */\n  primaryAction: Action;\n  /** Secondary action for the card */\n  secondaryAction?: Action;\n  /** Callback when banner is dismissed */\n  onDismiss?(): void;\n}"
    }
  },
  "CardProps": {
    "polaris-react/src/components/Card/Card.tsx": {
      "filePath": "polaris-react/src/components/Card/Card.tsx",
      "name": "CardProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "Title content for the card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Inner content of the card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subdued",
          "value": "boolean",
          "description": "A less prominent card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "Auto wrap content in section",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "DisableableAction[]",
          "description": "Card header actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryFooterAction",
          "value": "ComplexAction",
          "description": "Primary action in the card footer",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryFooterActions",
          "value": "ComplexAction[]",
          "description": "Secondary actions in the card footer",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryFooterActionsDisclosureText",
          "value": "string",
          "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "footerActionAlignment",
          "value": "\"left\" | \"right\"",
          "description": "Alignment of the footer actions on the card, defaults to right",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/Card.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideOnPrint",
          "value": "boolean",
          "description": "Allow the card to be hidden when printing",
          "isOptional": true
        }
      ],
      "value": "export interface CardProps {\n  /** Title content for the card */\n  title?: React.ReactNode;\n  /** Inner content of the card */\n  children?: React.ReactNode;\n  /** A less prominent card */\n  subdued?: boolean;\n  /** Auto wrap content in section */\n  sectioned?: boolean;\n  /** Card header actions */\n  actions?: DisableableAction[];\n  /** Primary action in the card footer */\n  primaryFooterAction?: ComplexAction;\n  /** Secondary actions in the card footer */\n  secondaryFooterActions?: ComplexAction[];\n  /** The content of the disclosure button rendered when there is more than one secondary footer action */\n  secondaryFooterActionsDisclosureText?: string;\n  /** Alignment of the footer actions on the card, defaults to right */\n  footerActionAlignment?: 'right' | 'left';\n  /** Allow the card to be hidden when printing */\n  hideOnPrint?: boolean;\n}"
    }
  },
  "CheckboxState": {
    "polaris-react/src/components/Checkbox/Checkbox.stories.tsx": {
      "filePath": "polaris-react/src/components/Checkbox/Checkbox.stories.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CheckboxState",
      "value": "boolean | 'indeterminate'",
      "description": ""
    }
  },
  "CheckboxProps": {
    "polaris-react/src/components/Checkbox/Checkbox.tsx": {
      "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
      "name": "CheckboxProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Indicates the ID of the element that is controlled by the checkbox",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaDescribedBy",
          "value": "string",
          "description": "Indicates the ID of the element that describes the checkbox",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the checkbox"
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "checked",
          "value": "boolean | \"indeterminate\"",
          "description": "Checkbox is selected. `indeterminate` shows a horizontal line in the checkbox",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional text to aide in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Name for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Value for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(newChecked: boolean, id: string) => void",
          "description": "Callback when checkbox is toggled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when checkbox is focussed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        }
      ],
      "value": "export interface CheckboxProps {\n  /** Indicates the ID of the element that is controlled by the checkbox*/\n  ariaControls?: string;\n  /** Indicates the ID of the element that describes the checkbox*/\n  ariaDescribedBy?: string;\n  /** Label for the checkbox */\n  label: React.ReactNode;\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Checkbox is selected. `indeterminate` shows a horizontal line in the checkbox */\n  checked?: boolean | 'indeterminate';\n  /** Additional text to aide in use */\n  helpText?: React.ReactNode;\n  /** Disable input */\n  disabled?: boolean;\n  /** ID for form input */\n  id?: string;\n  /** Name for form input */\n  name?: string;\n  /** Value for form input */\n  value?: string;\n  /** Display an error message */\n  error?: Error | boolean;\n  /** Callback when checkbox is toggled */\n  onChange?(newChecked: boolean, id: string): void;\n  /** Callback when checkbox is focussed */\n  onFocus?(): void;\n  /** Callback when focus is removed */\n  onBlur?(): void;\n}"
    },
    "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx": {
      "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
      "name": "CheckboxProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "checked",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface CheckboxProps {\n  checked?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n  id?: string;\n  name?: string;\n  value?: string;\n  role?: string;\n  onChange(): void;\n}"
    }
  },
  "CheckableButtonProps": {
    "polaris-react/src/components/CheckableButton/CheckableButton.tsx": {
      "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
      "name": "CheckableButtonProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean | \"indeterminate\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onToggleAll",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/CheckableButton/CheckableButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaLive",
          "value": "\"off\" | \"polite\"",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CheckableButtonProps {\n  accessibilityLabel?: string;\n  label?: string;\n  selected?: boolean | 'indeterminate';\n  disabled?: boolean;\n  onToggleAll?(): void;\n  ariaLive?: 'off' | 'polite';\n}"
    }
  },
  "ChoiceProps": {
    "polaris-react/src/components/Choice/Choice.tsx": {
      "filePath": "polaris-react/src/components/Choice/Choice.tsx",
      "name": "ChoiceProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the choice"
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the choice"
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether the associated form control is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content to display inside the choice",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional text to aide in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseOver",
          "value": "() => void",
          "description": "Callback when mouse over",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Choice/Choice.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseOut",
          "value": "() => void",
          "description": "Callback when mouse out",
          "isOptional": true
        }
      ],
      "value": "export interface ChoiceProps {\n  /** A unique identifier for the choice */\n  id: string;\n  /**\tLabel for the choice */\n  label: React.ReactNode;\n  /** Whether the associated form control is disabled */\n  disabled?: boolean;\n  /** Display an error message */\n  error?: Error | boolean;\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /**  Content to display inside the choice */\n  children?: React.ReactNode;\n  /** Additional text to aide in use */\n  helpText?: React.ReactNode;\n  /** Callback when clicked */\n  onClick?(): void;\n  /** Callback when mouse over */\n  onMouseOver?(): void;\n  /** Callback when mouse out */\n  onMouseOut?(): void;\n}"
    }
  },
  "Choice": {
    "polaris-react/src/components/ChoiceList/ChoiceList.tsx": {
      "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
      "name": "Choice",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Value of the choice"
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the choice"
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the choice",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable choice",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional text to aide in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "describedByError",
          "value": "boolean",
          "description": "Indicates that the choice is aria-describedBy the error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "renderChildren",
          "value": "(isSelected: boolean) => any",
          "description": "Method to render children with a choice",
          "isOptional": true
        }
      ],
      "value": "interface Choice {\n  /** Value of the choice */\n  value: string;\n  /** Label for the choice */\n  label: React.ReactNode;\n  /** A unique identifier for the choice */\n  id?: string;\n  /** Disable choice */\n  disabled?: boolean;\n  /** Additional text to aide in use */\n  helpText?: React.ReactNode;\n  /** Indicates that the choice is aria-describedBy the error message*/\n  describedByError?: boolean;\n  /**  Method to render children with a choice */\n  renderChildren?(isSelected: boolean): React.ReactNode | false;\n}"
    }
  },
  "ChoiceListProps": {
    "polaris-react/src/components/ChoiceList/ChoiceList.tsx": {
      "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
      "name": "ChoiceListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "Label for list of choices"
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "choices",
          "value": "Choice[]",
          "description": "Collection of choices"
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "string[]",
          "description": "Collection of selected choices"
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Name for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "Allow merchants to select multiple options at once",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": "Toggles display of the title",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable all choices *",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(selected: string[], name: string) => void",
          "description": "Callback when the selected choices change",
          "isOptional": true
        }
      ],
      "value": "export interface ChoiceListProps {\n  /** Label for list of choices */\n  title: React.ReactNode;\n  /** Collection of choices */\n  choices: Choice[];\n  /** Collection of selected choices */\n  selected: string[];\n  /** Name for form input */\n  name?: string;\n  /** Allow merchants to select multiple options at once */\n  allowMultiple?: boolean;\n  /** Toggles display of the title */\n  titleHidden?: boolean;\n  /** Display an error message */\n  error?: Error;\n  /** Disable all choices **/\n  disabled?: boolean;\n  /** Callback when the selected choices change */\n  onChange?(selected: string[], name: string): void;\n}"
    }
  },
  "Transition": {
    "polaris-react/src/components/Collapsible/Collapsible.tsx": {
      "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
      "name": "Transition",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "duration",
          "value": "string",
          "description": "Assign a transition duration to the collapsible animation.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "timingFunction",
          "value": "string",
          "description": "Assign a transition timing function to the collapsible animation",
          "isOptional": true
        }
      ],
      "value": "interface Transition {\n  /** Assign a transition duration to the collapsible animation. */\n  duration?: string;\n  /** Assign a transition timing function to the collapsible animation */\n  timingFunction?: string;\n}"
    }
  },
  "CollapsibleProps": {
    "polaris-react/src/components/Collapsible/Collapsible.tsx": {
      "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
      "name": "CollapsibleProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "Assign a unique ID to the collapsible. For accessibility, pass this ID as the value of the triggering component’s aria-controls prop."
        },
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "expandOnPrint",
          "value": "boolean",
          "description": "Option to show collapsible content when printing",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "Toggle whether the collapsible is expanded or not."
        },
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "transition",
          "value": "boolean | Transition",
          "description": "Override transition properties. When set to false, disables transition completely.",
          "isOptional": true,
          "defaultValue": "transition={{duration: 'var(--p-duration-150)', timingFunction: 'var(--p-ease-in-out)'}}"
        },
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onAnimationEnd",
          "value": "() => void",
          "description": "Callback when the animation completes.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the collapsible.",
          "isOptional": true
        }
      ],
      "value": "export interface CollapsibleProps {\n  /** Assign a unique ID to the collapsible. For accessibility, pass this ID as the value of the triggering component’s aria-controls prop. */\n  id: string;\n  /** Option to show collapsible content when printing */\n  expandOnPrint?: boolean;\n  /** Toggle whether the collapsible is expanded or not. */\n  open: boolean;\n  /** Override transition properties. When set to false, disables transition completely.\n   * @default transition={{duration: 'var(--p-duration-150)', timingFunction: 'var(--p-ease-in-out)'}}\n   */\n  transition?: boolean | Transition;\n  /** Callback when the animation completes. */\n  onAnimationEnd?(): void;\n  /** The content to display inside the collapsible. */\n  children?: React.ReactNode;\n}"
    }
  },
  "AnimationState": {
    "polaris-react/src/components/Collapsible/Collapsible.tsx": {
      "filePath": "polaris-react/src/components/Collapsible/Collapsible.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "AnimationState",
      "value": "'idle' | 'measuring' | 'animating'",
      "description": ""
    }
  },
  "Color": {
    "polaris-react/src/components/ColorPicker/ColorPicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
      "name": "Color",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alpha",
          "value": "number",
          "description": "Level of transparency",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "brightness",
          "value": "number",
          "description": "Brightness of the color"
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": "The color"
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "saturation",
          "value": "number",
          "description": "Saturation of the color"
        }
      ],
      "value": "interface Color extends HSBColor {\n  /** Level of transparency */\n  alpha?: HSBAColor['alpha'];\n}"
    },
    "polaris-react/src/components/Icon/Icon.tsx": {
      "filePath": "polaris-react/src/components/Icon/Icon.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Color",
      "value": "'base' | 'subdued' | 'critical' | 'interactive' | 'warning' | 'highlight' | 'success' | 'primary'",
      "description": ""
    },
    "polaris-react/src/components/ProgressBar/ProgressBar.tsx": {
      "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Color",
      "value": "'highlight' | 'primary' | 'success' | 'critical'",
      "description": ""
    },
    "polaris-react/src/components/Text/Text.tsx": {
      "filePath": "polaris-react/src/components/Text/Text.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Color",
      "value": "'success' | 'critical' | 'warning' | 'subdued' | 'text-inverse'",
      "description": ""
    }
  },
  "ColorPickerProps": {
    "polaris-react/src/components/ColorPicker/ColorPicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
      "name": "ColorPickerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for the element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "Color",
          "description": "The currently selected color"
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowAlpha",
          "value": "boolean",
          "description": "Allow user to select an alpha value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Allow HuePicker to take the full width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(color: HSBAColor) => void",
          "description": "Callback when color is selected"
        }
      ],
      "value": "export interface ColorPickerProps {\n  /** ID for the element */\n  id?: string;\n  /** The currently selected color */\n  color: Color;\n  /** Allow user to select an alpha value */\n  allowAlpha?: boolean;\n  /** Allow HuePicker to take the full width */\n  fullWidth?: boolean;\n  /** Callback when color is selected */\n  onChange(color: HSBAColor): void;\n}"
    }
  },
  "Columns": {
    "polaris-react/src/components/Columns/Columns.tsx": {
      "filePath": "polaris-react/src/components/Columns/Columns.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Columns",
      "value": "{\n  [Breakpoint in BreakpointsAlias]?: number | string;\n}",
      "description": ""
    },
    "polaris-react/src/components/Grid/Grid.tsx": {
      "filePath": "polaris-react/src/components/Grid/Grid.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Columns",
      "value": "{\n  [Breakpoint in Breakpoints]?: number;\n}",
      "description": ""
    },
    "polaris-react/src/components/Grid/components/Cell/Cell.tsx": {
      "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
      "name": "Columns",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "xs",
          "value": "2 | 5 | 1 | 4 | 3 | 6",
          "description": "Number of columns the section should span on extra small screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sm",
          "value": "2 | 5 | 1 | 4 | 3 | 6",
          "description": "Number of columns the section should span on small screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "md",
          "value": "2 | 5 | 1 | 4 | 3 | 6",
          "description": "Number of columns the section should span on medium screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lg",
          "value": "2 | 5 | 1 | 4 | 10 | 7 | 3 | 6 | 8 | 9 | 11 | 12",
          "description": "Number of columns the section should span on large screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "xl",
          "value": "2 | 5 | 1 | 4 | 10 | 7 | 3 | 6 | 8 | 9 | 11 | 12",
          "description": "Number of columns the section should span on extra large screens",
          "isOptional": true
        }
      ],
      "value": "interface Columns {\n  /** Number of columns the section should span on extra small screens */\n  xs?: 1 | 2 | 3 | 4 | 5 | 6;\n  /** Number of columns the section should span on small screens */\n  sm?: 1 | 2 | 3 | 4 | 5 | 6;\n  /** Number of columns the section should span on medium screens */\n  md?: 1 | 2 | 3 | 4 | 5 | 6;\n  /** Number of columns the section should span on large screens */\n  lg?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n  /** Number of columns the section should span on extra large screens */\n  xl?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n}"
    }
  },
  "ColumnsProps": {
    "polaris-react/src/components/Columns/Columns.tsx": {
      "filePath": "polaris-react/src/components/Columns/Columns.tsx",
      "name": "ColumnsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Columns/Columns.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Columns/Columns.tsx",
          "syntaxKind": "PropertySignature",
          "name": "columns",
          "value": "Columns",
          "description": "The number of columns to display",
          "isOptional": true,
          "defaultValue": "{xs: 6, sm: 6, md: 6, lg: 6, xl: 6}"
        },
        {
          "filePath": "polaris-react/src/components/Columns/Columns.tsx",
          "syntaxKind": "PropertySignature",
          "name": "gap",
          "value": "Gap",
          "description": "The spacing between children. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true,
          "defaultValue": "'4'"
        }
      ],
      "value": "export interface ColumnsProps {\n  children?: React.ReactNode;\n  /** The number of columns to display\n   * @default {xs: 6, sm: 6, md: 6, lg: 6, xl: 6}\n   */\n  columns?: Columns;\n  /** The spacing between children. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @default '4'\n   * @example\n   * gap='2'\n   * gap={{xs: '1', sm: '2', md: '3', lg: '4', xl: '5'}}\n   */\n  gap?: Gap;\n}"
    }
  },
  "ComboboxProps": {
    "polaris-react/src/components/Combobox/Combobox.tsx": {
      "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
      "name": "ComboboxProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "React.ReactElement<TextFieldProps>",
          "description": "The text field component to activate the Popover"
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "Allows more than one option to be selected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "any",
          "description": "The content to display inside the popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "The preferred direction to open the popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "willLoadMoreOptions",
          "value": "boolean",
          "description": "Whether or not more options are available to lazy load when the bottom of the listbox reached. Use the hasMoreResults boolean provided by the GraphQL API of the paginated data.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "height",
          "value": "string",
          "description": "Height to set on the Popover Pane.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onScrolledToBottom",
          "value": "() => void",
          "description": "Callback fired when the bottom of the lisbox is reached. Use to lazy load when listbox option data is paginated.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Combobox/Combobox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": "Callback fired when the popover closes",
          "isOptional": true
        }
      ],
      "value": "export interface ComboboxProps {\n  /** The text field component to activate the Popover */\n  activator: React.ReactElement<TextFieldProps>;\n  /** Allows more than one option to be selected */\n  allowMultiple?: boolean;\n  /** The content to display inside the popover */\n  children?: React.ReactElement<ListboxProps> | null;\n  /** The preferred direction to open the popover */\n  preferredPosition?: PopoverProps['preferredPosition'];\n  /** Whether or not more options are available to lazy load when the bottom of the listbox reached. Use the hasMoreResults boolean provided by the GraphQL API of the paginated data. */\n  willLoadMoreOptions?: boolean;\n  /** Height to set on the Popover Pane. */\n  height?: string;\n  /** Callback fired when the bottom of the lisbox is reached. Use to lazy load when listbox option data is paginated. */\n  onScrolledToBottom?(): void;\n  /** Callback fired when the popover closes */\n  onClose?(): void;\n}"
    }
  },
  "ConnectedProps": {
    "polaris-react/src/components/Connected/Connected.tsx": {
      "filePath": "polaris-react/src/components/Connected/Connected.tsx",
      "name": "ConnectedProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Connected/Connected.tsx",
          "syntaxKind": "PropertySignature",
          "name": "left",
          "value": "React.ReactNode",
          "description": "Content to display on the left",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Connected/Connected.tsx",
          "syntaxKind": "PropertySignature",
          "name": "right",
          "value": "React.ReactNode",
          "description": "Content to display on the right",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Connected/Connected.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Connected content",
          "isOptional": true
        }
      ],
      "value": "export interface ConnectedProps {\n  /** Content to display on the left */\n  left?: React.ReactNode;\n  /** Content to display on the right */\n  right?: React.ReactNode;\n  /** Connected content */\n  children?: React.ReactNode;\n}"
    }
  },
  "TableRow": {
    "polaris-react/src/components/DataTable/DataTable.tsx": {
      "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TableRow",
      "value": "DataTableProps['headings'] | DataTableProps['rows'] | DataTableProps['totals']",
      "description": ""
    }
  },
  "TableData": {
    "polaris-react/src/components/DataTable/DataTable.tsx": {
      "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TableData",
      "value": "string | number | React.ReactNode",
      "description": ""
    }
  },
  "ColumnContentType": {
    "polaris-react/src/components/DataTable/DataTable.tsx": {
      "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ColumnContentType",
      "value": "'text' | 'numeric'",
      "description": ""
    }
  },
  "DataTableProps": {
    "polaris-react/src/components/DataTable/DataTable.tsx": {
      "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
      "name": "DataTableProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "columnContentTypes",
          "value": "ColumnContentType[]",
          "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right."
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "headings",
          "value": "React.ReactNode[]",
          "description": "List of column headings."
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "totals",
          "value": "any[]",
          "description": "List of numeric column totals, highlighted in the table’s header below column headings. Use empty strings as placeholders for columns with no total.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "totalsName",
          "value": "{ singular: React.ReactNode; plural: React.ReactNode; }",
          "description": "Custom totals row heading",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showTotalsInFooter",
          "value": "boolean",
          "description": "Placement of totals row within table",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rows",
          "value": "any[][]",
          "description": "Lists of data points which map to table body rows."
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideScrollIndicator",
          "value": "boolean",
          "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
          "isOptional": true,
          "defaultValue": "false"
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "truncate",
          "value": "boolean",
          "description": "Truncate content in first column instead of wrapping.",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlign",
          "value": "VerticalAlign",
          "description": "Vertical alignment of content in the cells.",
          "isOptional": true,
          "defaultValue": "'top'"
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "footerContent",
          "value": "any",
          "description": "Content centered in the full width cell of the table footer row.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hoverable",
          "value": "boolean",
          "description": "Table row has hover state. Defaults to true.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortable",
          "value": "boolean[]",
          "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultSortDirection",
          "value": "SortDirection",
          "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
          "isOptional": true,
          "defaultValue": "'ascending'"
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "initialSortColumnIndex",
          "value": "number",
          "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
          "isOptional": true,
          "defaultValue": "0"
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSort",
          "value": "(headingIndex: number, direction: SortDirection) => void",
          "description": "Callback fired on click or keypress of a sortable column heading.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "increasedTableDensity",
          "value": "boolean",
          "description": "Increased density",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasZebraStripingOnData",
          "value": "boolean",
          "description": "Add zebra striping to data rows",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "stickyHeader",
          "value": "boolean",
          "description": "Header becomes sticky and pins to top of table when scrolling",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasFixedFirstColumn",
          "value": "boolean",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Add a fixed first column on horizontal scroll. Use fixedFirstColumns={n} instead."
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixedFirstColumns",
          "value": "number",
          "description": "Add fixed columns on horizontal scroll.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/DataTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "firstColumnMinWidth",
          "value": "string",
          "description": "Specify a min width for the first column if neccessary",
          "isOptional": true
        }
      ],
      "value": "export interface DataTableProps {\n  /** List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right. */\n  columnContentTypes: ColumnContentType[];\n  /** List of column headings. */\n  headings: React.ReactNode[];\n  /** List of numeric column totals, highlighted in the table’s header below column headings. Use empty strings as placeholders for columns with no total. */\n  totals?: TableData[];\n  /** Custom totals row heading */\n  totalsName?: {\n    singular: React.ReactNode;\n    plural: React.ReactNode;\n  };\n  /** Placement of totals row within table */\n  showTotalsInFooter?: boolean;\n  /** Lists of data points which map to table body rows. */\n  rows: TableData[][];\n  /** Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.\n   * @default false\n   */\n  hideScrollIndicator?: boolean;\n  /** Truncate content in first column instead of wrapping.\n   * @default true\n   */\n  truncate?: boolean;\n  /** Vertical alignment of content in the cells.\n   * @default 'top'\n   */\n  verticalAlign?: VerticalAlign;\n  /** Content centered in the full width cell of the table footer row. */\n  footerContent?: TableData;\n  /** Table row has hover state. Defaults to true. */\n  hoverable?: boolean;\n  /** List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.  */\n  sortable?: boolean[];\n  /**\n   * The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.\n   * @default 'ascending'\n   */\n  defaultSortDirection?: SortDirection;\n  /**\n   * The index of the heading that the table rows are initially sorted by. Defaults to the first column.\n   * @default 0\n   */\n  initialSortColumnIndex?: number;\n  /** Callback fired on click or keypress of a sortable column heading. */\n  onSort?(headingIndex: number, direction: SortDirection): void;\n  /** Increased density */\n  increasedTableDensity?: boolean;\n  /** Add zebra striping to data rows */\n  hasZebraStripingOnData?: boolean;\n  /** Header becomes sticky and pins to top of table when scrolling  */\n  stickyHeader?: boolean;\n  /** @deprecated Add a fixed first column on horizontal scroll. Use fixedFirstColumns={n} instead. */\n  hasFixedFirstColumn?: boolean;\n  /** Add fixed columns on horizontal scroll. */\n  fixedFirstColumns?: number;\n  /** Specify a min width for the first column if neccessary */\n  firstColumnMinWidth?: string;\n}"
    }
  },
  "DatePickerProps": {
    "polaris-react/src/components/DatePicker/DatePicker.tsx": {
      "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
      "name": "DatePickerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for the element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "Range | Date",
          "description": "The selected date or range of dates",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "month",
          "value": "number",
          "description": "The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December"
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "year",
          "value": "number",
          "description": "The year to show"
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowRange",
          "value": "boolean",
          "description": "Allow a range of dates to be selected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableDatesBefore",
          "value": "Date",
          "description": "Disable selecting dates before this.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableDatesAfter",
          "value": "Date",
          "description": "Disable selecting dates after this.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableSpecificDates",
          "value": "Date[]",
          "description": "Disable specific dates.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "multiMonth",
          "value": "boolean",
          "description": "The selection can span multiple months",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "weekStartsOn",
          "value": "number",
          "description": "First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday",
          "isOptional": true,
          "defaultValue": "0"
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dayAccessibilityLabelPrefix",
          "value": "string",
          "description": "Visually hidden prefix text for selected days on single selection date pickers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(date: Range) => void",
          "description": "Callback when date is selected.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMonthChange",
          "value": "(month: number, year: number) => void",
          "description": "Callback when month is changed.",
          "isOptional": true
        }
      ],
      "value": "export interface DatePickerProps {\n  /** ID for the element */\n  id?: string;\n  /** The selected date or range of dates */\n  selected?: Date | Range;\n  /** The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December */\n  month: number;\n  /** The year to show */\n  year: number;\n  /** Allow a range of dates to be selected */\n  allowRange?: boolean;\n  /** Disable selecting dates before this. */\n  disableDatesBefore?: Date;\n  /** Disable selecting dates after this. */\n  disableDatesAfter?: Date;\n  /** Disable specific dates. */\n  disableSpecificDates?: Date[];\n  /** The selection can span multiple months */\n  multiMonth?: boolean;\n  /**\n   * First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday\n   * @default 0\n   */\n  weekStartsOn?: number;\n  /** Visually hidden prefix text for selected days on single selection date pickers */\n  dayAccessibilityLabelPrefix?: string;\n  /** Callback when date is selected. */\n  onChange?(date: Range): void;\n  /** Callback when month is changed. */\n  onMonthChange?(month: number, year: number): void;\n}"
    }
  },
  "Item": {
    "polaris-react/src/components/DescriptionList/DescriptionList.tsx": {
      "filePath": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
      "name": "Item",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "term",
          "value": "React.ReactNode",
          "description": "Title of the item"
        },
        {
          "filePath": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "description",
          "value": "React.ReactNode",
          "description": "Item content"
        }
      ],
      "value": "interface Item {\n  /** Title of the item */\n  term: React.ReactNode;\n  /**  Item content */\n  description: React.ReactNode;\n}"
    },
    "polaris-react/src/components/ExceptionList/ExceptionList.tsx": {
      "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
      "name": "Item",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "status",
          "value": "\"warning\" | \"critical\"",
          "description": "Set the color of the icon and title for the given item.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon displayed by the list item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Text displayed beside the icon",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "description",
          "value": "any",
          "description": "Text displayed for the item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "truncate",
          "value": "boolean",
          "description": "Should the description be truncated at end of line",
          "isOptional": true
        }
      ],
      "value": "interface Item {\n  /** Set the color of the icon and title for the given item. */\n  status?: 'critical' | 'warning';\n  /** Icon displayed by the list item */\n  icon?: IconProps['source'];\n  /** Text displayed beside the icon */\n  title?: string;\n  /** Text displayed for the item */\n  description?: Description;\n  /** Should the description be truncated at end of line */\n  truncate?: boolean;\n}"
    }
  },
  "DescriptionListProps": {
    "polaris-react/src/components/DescriptionList/DescriptionList.tsx": {
      "filePath": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
      "name": "DescriptionListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "Item[]",
          "description": "Collection of items for list"
        },
        {
          "filePath": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spacing",
          "value": "\"tight\" | \"loose\"",
          "description": "Determines the spacing between list items",
          "isOptional": true
        }
      ],
      "value": "export interface DescriptionListProps {\n  /** Collection of items for list */\n  items: Item[];\n  /** Determines the spacing between list items */\n  spacing?: 'tight' | 'loose';\n}"
    }
  },
  "DividerProps": {
    "polaris-react/src/components/Divider/Divider.tsx": {
      "filePath": "polaris-react/src/components/Divider/Divider.tsx",
      "name": "DividerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Divider/Divider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderStyle",
          "value": "BorderTokenAlias",
          "description": "Divider border style",
          "isOptional": true
        }
      ],
      "value": "export interface DividerProps {\n  /** Divider border style */\n  borderStyle?: BorderTokenAlias;\n}"
    }
  },
  "DropZoneFileType": {
    "polaris-react/src/components/DropZone/DropZone.tsx": {
      "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "DropZoneFileType",
      "value": "'file' | 'image' | 'video'",
      "description": ""
    }
  },
  "DropZoneProps": {
    "polaris-react/src/components/DropZone/DropZone.tsx": {
      "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
      "name": "DropZoneProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the file input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for file input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accept",
          "value": "string",
          "description": "Allowed file types",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "DropZoneFileType",
          "description": "Whether is a file or an image",
          "isOptional": true,
          "defaultValue": "'file'"
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Sets an active state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "boolean",
          "description": "Sets an error state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "boolean",
          "description": "Displays an outline border",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "overlay",
          "value": "boolean",
          "description": "Displays an overlay on hover",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "overlayText",
          "value": "string",
          "description": "Text that appears in the overlay",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "errorOverlayText",
          "value": "string",
          "description": "Text that appears in the overlay when set in error state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "Allows multiple files to be uploaded at once",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Sets a disabled state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "any",
          "description": "The child elements to render in the dropzone.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dropOnPage",
          "value": "boolean",
          "description": "Allows a file to be dropped anywhere on the page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "openFileDialog",
          "value": "boolean",
          "description": "Sets the default file dialog state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "variableHeight",
          "value": "boolean",
          "description": "Allows child content to adjust height",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "customValidator",
          "value": "(file: File) => boolean",
          "description": "Adds custom validations",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(event: React.MouseEvent<HTMLElement>) => void",
          "description": "Callback triggered on click",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDrop",
          "value": "(files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void",
          "description": "Callback triggered on any file drop",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDropAccepted",
          "value": "(acceptedFiles: File[]) => void",
          "description": "Callback triggered when at least one of the files dropped was accepted",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDropRejected",
          "value": "(rejectedFiles: File[]) => void",
          "description": "Callback triggered when at least one of the files dropped was rejected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDragOver",
          "value": "() => void",
          "description": "Callback triggered when one or more files are dragging over the drag area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDragEnter",
          "value": "() => void",
          "description": "Callback triggered when one or more files entered the drag area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDragLeave",
          "value": "() => void",
          "description": "Callback triggered when one or more files left the drag area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFileDialogClose",
          "value": "() => void",
          "description": "Callback triggered when the file dialog is canceled",
          "isOptional": true
        }
      ],
      "value": "export interface DropZoneProps {\n  /** Label for the file input */\n  label?: React.ReactNode;\n  /** Adds an action to the label */\n  labelAction?: LabelledProps['action'];\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** ID for file input */\n  id?: string;\n  /** Allowed file types */\n  accept?: string;\n  /**\n   * Whether is a file or an image\n   * @default 'file'\n   */\n  type?: DropZoneFileType;\n  /** Sets an active state */\n  active?: boolean;\n  /** Sets an error state */\n  error?: boolean;\n  /**\n   * Displays an outline border\n   * @default true\n   */\n  outline?: boolean;\n  /**\n   * Displays an overlay on hover\n   * @default true\n   */\n  overlay?: boolean;\n  /** Text that appears in the overlay */\n  overlayText?: string;\n  /** Text that appears in the overlay when set in error state */\n  errorOverlayText?: string;\n  /**\n   * Allows multiple files to be uploaded at once\n   * @default true\n   */\n  allowMultiple?: boolean;\n  /** Sets a disabled state */\n  disabled?: boolean;\n  /** The child elements to render in the dropzone. */\n  children?: string | React.ReactNode;\n  /** Allows a file to be dropped anywhere on the page */\n  dropOnPage?: boolean;\n  /** Sets the default file dialog state */\n  openFileDialog?: boolean;\n  /** Allows child content to adjust height */\n  variableHeight?: boolean;\n  /** Adds custom validations */\n  customValidator?(file: File): boolean;\n  /** Callback triggered on click */\n  onClick?(event: React.MouseEvent<HTMLElement>): void;\n  /** Callback triggered on any file drop */\n  onDrop?(files: File[], acceptedFiles: File[], rejectedFiles: File[]): void;\n  /** Callback triggered when at least one of the files dropped was accepted */\n  onDropAccepted?(acceptedFiles: File[]): void;\n  /** Callback triggered when at least one of the files dropped was rejected */\n  onDropRejected?(rejectedFiles: File[]): void;\n  /** Callback triggered when one or more files are dragging over the drag area */\n  onDragOver?(): void;\n  /** Callback triggered when one or more files entered the drag area */\n  onDragEnter?(): void;\n  /** Callback triggered when one or more files left the drag area */\n  onDragLeave?(): void;\n  /** Callback triggered when the file dialog is canceled */\n  onFileDialogClose?(): void;\n}"
    }
  },
  "DropZoneInputProps": {
    "polaris-react/src/components/DropZone/DropZone.tsx": {
      "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
      "name": "DropZoneInputProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accept",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "DropZoneFileType",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "multiple",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "PropertySignature",
          "name": "openFileDialog",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(event: any) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/DropZone.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFileDialogClose",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface DropZoneInputProps {\n  id: string;\n  accept?: string;\n  disabled: boolean;\n  type: DropZoneFileType;\n  multiple: boolean;\n  openFileDialog?: boolean;\n  onChange(event: DragEvent | React.ChangeEvent<HTMLInputElement>): void;\n  onFocus(): void;\n  onBlur(): void;\n  onFileDialogClose?(): void;\n}"
    }
  },
  "DropZoneContextType": {
    "polaris-react/src/components/DropZone/context.tsx": {
      "filePath": "polaris-react/src/components/DropZone/context.tsx",
      "name": "DropZoneContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DropZone/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "measuring",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DropZone/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "string",
          "description": ""
        }
      ],
      "value": "interface DropZoneContextType {\n  disabled: boolean;\n  focused: boolean;\n  measuring: boolean;\n  allowMultiple: boolean;\n  size: string;\n  type: string;\n}"
    }
  },
  "EmptySearchResultProps": {
    "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx": {
      "filePath": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
      "name": "EmptySearchResultProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
          "syntaxKind": "PropertySignature",
          "name": "description",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
          "syntaxKind": "PropertySignature",
          "name": "withIllustration",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface EmptySearchResultProps {\n  title: string;\n  description?: string;\n  withIllustration?: boolean;\n}"
    }
  },
  "EmptyStateProps": {
    "polaris-react/src/components/EmptyState/EmptyState.tsx": {
      "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
      "name": "EmptyStateProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "heading",
          "value": "string",
          "description": "The empty state heading",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "image",
          "value": "string",
          "description": "The path to the image to display.\nThe image should have ~40px of white space above when empty state is used within a card, modal, or navigation component"
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "largeImage",
          "value": "string",
          "description": "The path to the image to display on large screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "imageContained",
          "value": "boolean",
          "description": "Whether or not to limit the image to the size of its container on large screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Whether or not the content should span the full width of its container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Elements to display inside empty state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "ComplexAction",
          "description": "Primary action for empty state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryAction",
          "value": "ComplexAction",
          "description": "Secondary action for empty state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "syntaxKind": "PropertySignature",
          "name": "footerContent",
          "value": "React.ReactNode",
          "description": "Secondary elements to display below empty state actions",
          "isOptional": true
        }
      ],
      "value": "export interface EmptyStateProps {\n  /** The empty state heading */\n  heading?: string;\n  /**\n   * The path to the image to display.\n   * The image should have ~40px of white space above when empty state is used within a card, modal, or navigation component\n   */\n  image: string;\n  /** The path to the image to display on large screens */\n  largeImage?: string;\n  /** Whether or not to limit the image to the size of its container on large screens */\n  imageContained?: boolean;\n  /** Whether or not the content should span the full width of its container  */\n  fullWidth?: boolean;\n  /** Elements to display inside empty state */\n  children?: React.ReactNode;\n  /** Primary action for empty state */\n  action?: ComplexAction;\n  /** Secondary action for empty state */\n  secondaryAction?: ComplexAction;\n  /** Secondary elements to display below empty state actions */\n  footerContent?: React.ReactNode;\n}"
    }
  },
  "BaseEventProps": {
    "polaris-react/src/components/EventListener/EventListener.tsx": {
      "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
      "name": "BaseEventProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "event",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "capture",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "MethodSignature",
          "name": "handler",
          "value": "(event: Event) => void",
          "description": ""
        }
      ],
      "value": "interface BaseEventProps {\n  event: string;\n  capture?: boolean;\n  handler(event: Event): void;\n}"
    }
  },
  "EventListenerProps": {
    "polaris-react/src/components/EventListener/EventListener.tsx": {
      "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
      "name": "EventListenerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "passive",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "event",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "PropertySignature",
          "name": "capture",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/EventListener/EventListener.tsx",
          "syntaxKind": "MethodSignature",
          "name": "handler",
          "value": "(event: Event) => void",
          "description": ""
        }
      ],
      "value": "export interface EventListenerProps extends BaseEventProps {\n  passive?: boolean;\n}"
    }
  },
  "Description": {
    "polaris-react/src/components/ExceptionList/ExceptionList.tsx": {
      "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Description",
      "value": "string | React.ReactElement | (string | React.ReactElement)[]",
      "description": ""
    }
  },
  "ExceptionListProps": {
    "polaris-react/src/components/ExceptionList/ExceptionList.tsx": {
      "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
      "name": "ExceptionListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "Item[]",
          "description": "Collection of items for list"
        }
      ],
      "value": "export interface ExceptionListProps {\n  /** Collection of items for list */\n  items: Item[];\n}"
    }
  },
  "AppliedFilterInterface": {
    "polaris-react/src/components/Filters/Filters.tsx": {
      "filePath": "polaris-react/src/components/Filters/Filters.tsx",
      "name": "AppliedFilterInterface",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "key",
          "value": "string",
          "description": "A unique key used to identify the applied filter"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "A label for the applied filter"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onRemove",
          "value": "(key: string) => void",
          "description": "Callback when the remove button is pressed"
        }
      ],
      "value": "export interface AppliedFilterInterface {\n  /** A unique key used to identify the applied filter */\n  key: string;\n  /** A label for the applied filter */\n  label: string;\n  /** Callback when the remove button is pressed */\n  onRemove(key: string): void;\n}"
    }
  },
  "FilterInterface": {
    "polaris-react/src/components/Filters/Filters.tsx": {
      "filePath": "polaris-react/src/components/Filters/Filters.tsx",
      "name": "FilterInterface",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "key",
          "value": "string",
          "description": "A unique key used to identify the filter"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "The label for the filter"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "filter",
          "value": "React.ReactNode",
          "description": "The markup for the given filter"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shortcut",
          "value": "boolean",
          "description": "Whether or not the filter should have a shortcut popover displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the filter is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideClearButton",
          "value": "boolean",
          "description": "",
          "isOptional": true,
          "defaultValue": "false\nWhether or not the clear button is displayed"
        }
      ],
      "value": "export interface FilterInterface {\n  /** A unique key used to identify the filter */\n  key: string;\n  /** The label for the filter */\n  label: string;\n  /** The markup for the given filter */\n  filter: React.ReactNode;\n  /** Whether or not the filter should have a shortcut popover displayed */\n  shortcut?: boolean;\n  /** Whether or not the filter is disabled */\n  disabled?: boolean;\n  /**\n   * @default false\n   * Whether or not the clear button is displayed\n   */\n  hideClearButton?: boolean;\n}"
    }
  },
  "FiltersProps": {
    "polaris-react/src/components/Filters/Filters.tsx": {
      "filePath": "polaris-react/src/components/Filters/Filters.tsx",
      "name": "FiltersProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "queryValue",
          "value": "string",
          "description": "Currently entered text in the query field",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "queryPlaceholder",
          "value": "string",
          "description": "Placeholder text for the query field",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": "Whether the query field is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "filters",
          "value": "FilterInterface[]",
          "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet."
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "appliedFilters",
          "value": "AppliedFilterInterface[]",
          "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onQueryChange",
          "value": "(queryValue: string) => void",
          "description": "Callback when the query field is changed"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onQueryClear",
          "value": "() => void",
          "description": "Callback when the clear button is triggered"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClearAll",
          "value": "() => void",
          "description": "Callback when the reset all button is pressed"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onQueryBlur",
          "value": "() => void",
          "description": "Callback when the query field is blurred",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onQueryFocus",
          "value": "() => void",
          "description": "Callback when the query field is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inline with the controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable all filters",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "any",
          "description": "Additional hint text to display below the filters",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideTags",
          "value": "boolean",
          "description": "Hide tags for applied filters",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideQueryField",
          "value": "boolean",
          "description": "Hide the query field",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableQueryField",
          "value": "boolean",
          "description": "Disable the query field",
          "isOptional": true
        }
      ],
      "value": "export interface FiltersProps {\n  /** Currently entered text in the query field */\n  queryValue?: string;\n  /** Placeholder text for the query field */\n  queryPlaceholder?: string;\n  /** Whether the query field is focused */\n  focused?: boolean;\n  /** Available filters added to the sheet. Shortcut filters are exposed outside of the sheet. */\n  filters: FilterInterface[];\n  /** Applied filters which are rendered as tags. The remove callback is called with the respective key */\n  appliedFilters?: AppliedFilterInterface[];\n  /** Callback when the query field is changed */\n  onQueryChange(queryValue: string): void;\n  /** Callback when the clear button is triggered */\n  onQueryClear(): void;\n  /** Callback when the reset all button is pressed */\n  onClearAll(): void;\n  /** Callback when the query field is blurred */\n  onQueryBlur?(): void;\n  /** Callback when the query field is focused */\n  onQueryFocus?(): void;\n  /** The content to display inline with the controls */\n  children?: React.ReactNode;\n  /** Disable all filters */\n  disabled?: boolean;\n  /** Additional hint text to display below the filters */\n  helpText?: string | React.ReactNode;\n  /** Hide tags for applied filters */\n  hideTags?: boolean;\n  /** Hide the query field */\n  hideQueryField?: boolean;\n  /** Disable the query field */\n  disableQueryField?: boolean;\n}"
    }
  },
  "Suffix": {
    "polaris-react/src/components/Filters/Filters.tsx": {
      "filePath": "polaris-react/src/components/Filters/Filters.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "Suffix",
      "value": "enum Suffix {\n  Filter = 'Filter',\n  Shortcut = 'Shortcut',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "name": "Filter",
          "value": "Filter"
        },
        {
          "filePath": "polaris-react/src/components/Filters/Filters.tsx",
          "name": "Shortcut",
          "value": "Shortcut"
        }
      ]
    }
  },
  "FocusProps": {
    "polaris-react/src/components/Focus/Focus.tsx": {
      "filePath": "polaris-react/src/components/Focus/Focus.tsx",
      "name": "FocusProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Focus/Focus.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Focus/Focus.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Focus/Focus.tsx",
          "syntaxKind": "PropertySignature",
          "name": "root",
          "value": "any",
          "description": ""
        }
      ],
      "value": "export interface FocusProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  root: React.RefObject<HTMLElement> | HTMLElement | null;\n}"
    }
  },
  "Context": {
    "polaris-react/src/components/FocusManager/FocusManager.tsx": {
      "filePath": "polaris-react/src/components/FocusManager/FocusManager.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Context",
      "value": "NonNullable<ContextType<typeof FocusManagerContext>>",
      "description": ""
    }
  },
  "FooterHelpProps": {
    "polaris-react/src/components/FooterHelp/FooterHelp.tsx": {
      "filePath": "polaris-react/src/components/FooterHelp/FooterHelp.tsx",
      "name": "FooterHelpProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/FooterHelp/FooterHelp.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the layout.",
          "isOptional": true
        }
      ],
      "value": "export interface FooterHelpProps {\n  /** The content to display inside the layout. */\n  children?: React.ReactNode;\n}"
    }
  },
  "Enctype": {
    "polaris-react/src/components/Form/Form.tsx": {
      "filePath": "polaris-react/src/components/Form/Form.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Enctype",
      "value": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'",
      "description": ""
    }
  },
  "Method": {
    "polaris-react/src/components/Form/Form.tsx": {
      "filePath": "polaris-react/src/components/Form/Form.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Method",
      "value": "'post' | 'get' | 'action'",
      "description": ""
    }
  },
  "Target": {
    "polaris-react/src/components/Form/Form.tsx": {
      "filePath": "polaris-react/src/components/Form/Form.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Target",
      "value": "'_blank' | '_self' | '_parent' | '_top' | string",
      "description": ""
    }
  },
  "FormProps": {
    "polaris-react/src/components/Form/Form.tsx": {
      "filePath": "polaris-react/src/components/Form/Form.tsx",
      "name": "FormProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "acceptCharset",
          "value": "string",
          "description": "Space separated list of character encodings",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "string",
          "description": "Where to send form-data on submittal",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoComplete",
          "value": "boolean",
          "description": "Grants the browser the ability to autocomplete input elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the form.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "encType",
          "value": "Enctype",
          "description": "Media type when submitting content to server",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "implicitSubmit",
          "value": "boolean",
          "description": "Toggles if form submits on Enter keypress. Defaults to true.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "method",
          "value": "Method",
          "description": "Method used to submit form",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "A unique name for the form",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "noValidate",
          "value": "boolean",
          "description": "Whether or not form is validated when submitting",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preventDefault",
          "value": "boolean",
          "description": "Blocks the default form action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "PropertySignature",
          "name": "target",
          "value": "string",
          "description": "Where to display response after form submittal",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Form/Form.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSubmit",
          "value": "(event: React.FormEvent<HTMLFormElement>) => void",
          "description": "Callback when form is submitted"
        }
      ],
      "value": "export interface FormProps {\n  /** Space separated list of character encodings */\n  acceptCharset?: string;\n  /** Where to send form-data on submittal */\n  action?: string;\n  /** Grants the browser the ability to autocomplete input elements */\n  autoComplete?: boolean;\n  /** The content to display inside the form. */\n  children?: React.ReactNode;\n  /** Media type when submitting content to server */\n  encType?: Enctype;\n  /** Toggles if form submits on Enter keypress. Defaults to true. */\n  implicitSubmit?: boolean;\n  /** Method used to submit form */\n  method?: Method;\n  /** A unique name for the form */\n  name?: string;\n  /** Whether or not form is validated when submitting */\n  noValidate?: boolean;\n  /** Blocks the default form action */\n  preventDefault?: boolean;\n  /** Where to display response after form submittal */\n  target?: Target;\n  /** Callback when form is submitted */\n  onSubmit(event: React.FormEvent<HTMLFormElement>): void;\n}"
    }
  },
  "FormLayoutProps": {
    "polaris-react/src/components/FormLayout/FormLayout.tsx": {
      "filePath": "polaris-react/src/components/FormLayout/FormLayout.tsx",
      "name": "FormLayoutProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/FormLayout/FormLayout.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the layout.",
          "isOptional": true
        }
      ],
      "value": "export interface FormLayoutProps {\n  /** The content to display inside the layout. */\n  children?: React.ReactNode;\n}"
    }
  },
  "FullscreenBarProps": {
    "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx": {
      "filePath": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
      "name": "FullscreenBarProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when back button is clicked"
        },
        {
          "filePath": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Render child elements",
          "isOptional": true
        }
      ],
      "value": "export interface FullscreenBarProps {\n  /** Callback when back button is clicked */\n  onAction: () => void;\n  /** Render child elements */\n  children?: React.ReactNode;\n}"
    }
  },
  "FrameProps": {
    "polaris-react/src/components/Frame/Frame.tsx": {
      "filePath": "polaris-react/src/components/Frame/Frame.tsx",
      "name": "FrameProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "logo",
          "value": "Logo",
          "description": "Sets the logo for the TopBar, Navigation, and ContextualSaveBar components",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "offset",
          "value": "string",
          "description": "A horizontal offset that pushes the frame to the right, leaving empty space on the left",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the frame.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "topBar",
          "value": "React.ReactNode",
          "description": "Accepts a top bar component that will be rendered at the top-most portion of an application frame",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "navigation",
          "value": "React.ReactNode",
          "description": "Accepts a navigation component that will be rendered in the left sidebar of an application frame",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "globalRibbon",
          "value": "React.ReactNode",
          "description": "Accepts a global ribbon component that will be rendered fixed to the bottom of an application frame",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showMobileNavigation",
          "value": "boolean",
          "description": "A boolean property indicating whether the mobile navigation is currently visible",
          "isOptional": true,
          "defaultValue": "false"
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "PropertySignature",
          "name": "skipToContentTarget",
          "value": "React.RefObject<HTMLAnchorElement>",
          "description": "Accepts a ref to the html anchor element you wish to focus when clicking the skip to content link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Frame/Frame.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onNavigationDismiss",
          "value": "() => void",
          "description": "A callback function to handle clicking the mobile navigation dismiss button",
          "isOptional": true
        }
      ],
      "value": "export interface FrameProps {\n  /** Sets the logo for the TopBar, Navigation, and ContextualSaveBar components */\n  logo?: Logo;\n  /** A horizontal offset that pushes the frame to the right, leaving empty space on the left */\n  offset?: string;\n  /** The content to display inside the frame. */\n  children?: React.ReactNode;\n  /** Accepts a top bar component that will be rendered at the top-most portion of an application frame */\n  topBar?: React.ReactNode;\n  /** Accepts a navigation component that will be rendered in the left sidebar of an application frame */\n  navigation?: React.ReactNode;\n  /** Accepts a global ribbon component that will be rendered fixed to the bottom of an application frame */\n  globalRibbon?: React.ReactNode;\n  /** A boolean property indicating whether the mobile navigation is currently visible\n   * @default false\n   */\n  showMobileNavigation?: boolean;\n  /** Accepts a ref to the html anchor element you wish to focus when clicking the skip to content link */\n  skipToContentTarget?: React.RefObject<HTMLAnchorElement>;\n  /** A callback function to handle clicking the mobile navigation dismiss button */\n  onNavigationDismiss?(): void;\n}"
    }
  },
  "Breakpoints": {
    "polaris-react/src/components/Grid/Grid.tsx": {
      "filePath": "polaris-react/src/components/Grid/Grid.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Breakpoints",
      "value": "'xs' | 'sm' | 'md' | 'lg' | 'xl'",
      "description": ""
    },
    "polaris-react/src/components/Grid/components/Cell/Cell.tsx": {
      "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Breakpoints",
      "value": "'xs' | 'sm' | 'md' | 'lg' | 'xl'",
      "description": ""
    }
  },
  "Areas": {
    "polaris-react/src/components/Grid/Grid.tsx": {
      "filePath": "polaris-react/src/components/Grid/Grid.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Areas",
      "value": "{\n  [Breakpoint in Breakpoints]?: string[];\n}",
      "description": ""
    }
  },
  "GridProps": {
    "polaris-react/src/components/Grid/Grid.tsx": {
      "filePath": "polaris-react/src/components/Grid/Grid.tsx",
      "name": "GridProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Grid/Grid.tsx",
          "syntaxKind": "PropertySignature",
          "name": "areas",
          "value": "Areas",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/Grid.tsx",
          "syntaxKind": "PropertySignature",
          "name": "columns",
          "value": "Columns",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/Grid.tsx",
          "syntaxKind": "PropertySignature",
          "name": "gap",
          "value": "Gap",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/Grid.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface GridProps {\n  /* Set grid-template-areas */\n  areas?: Areas;\n  /* Number of columns */\n  columns?: Columns;\n  /* Grid gap */\n  gap?: Gap;\n  children?: React.ReactNode;\n}"
    }
  },
  "SourceSet": {
    "polaris-react/src/components/Image/Image.tsx": {
      "filePath": "polaris-react/src/components/Image/Image.tsx",
      "name": "SourceSet",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "PropertySignature",
          "name": "source",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "PropertySignature",
          "name": "descriptor",
          "value": "string",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface SourceSet {\n  source: string;\n  descriptor?: string;\n}"
    }
  },
  "CrossOrigin": {
    "polaris-react/src/components/Image/Image.tsx": {
      "filePath": "polaris-react/src/components/Image/Image.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CrossOrigin",
      "value": "'anonymous' | 'use-credentials' | '' | undefined",
      "description": ""
    }
  },
  "ImageProps": {
    "polaris-react/src/components/Image/Image.tsx": {
      "filePath": "polaris-react/src/components/Image/Image.tsx",
      "name": "ImageProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alt",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "PropertySignature",
          "name": "source",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "PropertySignature",
          "name": "crossOrigin",
          "value": "CrossOrigin",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sourceSet",
          "value": "SourceSet[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onLoad",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Image/Image.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onError",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ImageProps extends React.HTMLProps<HTMLImageElement> {\n  alt: string;\n  source: string;\n  crossOrigin?: CrossOrigin;\n  sourceSet?: SourceSet[];\n  onLoad?(): void;\n  onError?(): void;\n}"
    }
  },
  "IconProps": {
    "polaris-react/src/components/Icon/Icon.tsx": {
      "filePath": "polaris-react/src/components/Icon/Icon.tsx",
      "name": "IconProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Icon/Icon.tsx",
          "syntaxKind": "PropertySignature",
          "name": "source",
          "value": "any",
          "description": "The SVG contents to display in the icon (icons should fit in a 20 × 20 pixel viewBox)"
        },
        {
          "filePath": "polaris-react/src/components/Icon/Icon.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "Color",
          "description": "Set the color for the SVG fill",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Icon/Icon.tsx",
          "syntaxKind": "PropertySignature",
          "name": "backdrop",
          "value": "boolean",
          "description": "Show a backdrop behind the icon",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Icon/Icon.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Descriptive text to be read to screenreaders",
          "isOptional": true
        }
      ],
      "value": "export interface IconProps {\n  /** The SVG contents to display in the icon (icons should fit in a 20 × 20 pixel viewBox) */\n  source: IconSource;\n  /** Set the color for the SVG fill */\n  color?: Color;\n  /** Show a backdrop behind the icon */\n  backdrop?: boolean;\n  /** Descriptive text to be read to screenreaders */\n  accessibilityLabel?: string;\n}"
    }
  },
  "IndexTableHeadingBase": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "IndexTableHeadingBase",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "new",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipContent",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipWidth",
          "value": "Width",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipPersistsOnClick",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface IndexTableHeadingBase {\n  flush?: boolean;\n  new?: boolean;\n  hidden?: boolean;\n  tooltipContent?: React.ReactNode;\n  tooltipWidth?: Width;\n  tooltipPersistsOnClick?: boolean;\n}"
    }
  },
  "IndexTableHeadingTitleString": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "IndexTableHeadingTitleString",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "new",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipContent",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipWidth",
          "value": "Width",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipPersistsOnClick",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface IndexTableHeadingTitleString extends IndexTableHeadingBase {\n  title: string;\n}"
    }
  },
  "IndexTableHeadingTitleNode": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "IndexTableHeadingTitleNode",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "new",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipContent",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipWidth",
          "value": "Width",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltipPersistsOnClick",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface IndexTableHeadingTitleNode extends IndexTableHeadingBase {\n  title: React.ReactNode;\n  id: string;\n}"
    }
  },
  "IndexTableHeading": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IndexTableHeading",
      "value": "IndexTableHeadingTitleString | IndexTableHeadingTitleNode",
      "description": ""
    }
  },
  "IndexTableSortDirection": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IndexTableSortDirection",
      "value": "'ascending' | 'descending'",
      "description": ""
    }
  },
  "IndexTableSortToggleLabel": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "IndexTableSortToggleLabel",
      "value": "{\n  [key in IndexTableSortDirection]: string;\n}",
      "description": ""
    }
  },
  "IndexTableSortToggleLabels": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "IndexTableSortToggleLabels",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "name": "[key: number]",
          "value": "IndexTableSortToggleLabel"
        }
      ],
      "value": "interface IndexTableSortToggleLabels {\n  [key: number]: IndexTableSortToggleLabel;\n}"
    }
  },
  "IndexTableBaseProps": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "IndexTableBaseProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "headings",
          "value": "NonEmptyArray<IndexTableHeading>",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "promotedBulkActions",
          "value": "(MenuGroupDescriptor | BulkAction)[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "bulkActions",
          "value": "(ActionListSection | BulkAction)[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "emptyState",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sort",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paginatedSelectAllActionText",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lastColumnSticky",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortable",
          "value": "boolean[]",
          "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultSortDirection",
          "value": "IndexTableSortDirection",
          "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to descending.",
          "isOptional": true,
          "defaultValue": "'descending'"
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortDirection",
          "value": "IndexTableSortDirection",
          "description": "The current sorting direction.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortColumnIndex",
          "value": "number",
          "description": "The index of the heading that the table rows are sorted by.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSort",
          "value": "(headingIndex: number, direction: IndexTableSortDirection) => void",
          "description": "Callback fired on click or keypress of a sortable column heading.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortToggleLabels",
          "value": "IndexTableSortToggleLabels",
          "description": "Optional dictionary of sort toggle labels for each sortable column, with ascending and descending label,\nwith the key as the index of the column",
          "isOptional": true
        }
      ],
      "value": "export interface IndexTableBaseProps {\n  headings: NonEmptyArray<IndexTableHeading>;\n  promotedBulkActions?: BulkActionsProps['promotedActions'];\n  bulkActions?: BulkActionsProps['actions'];\n  children?: React.ReactNode;\n  emptyState?: React.ReactNode;\n  sort?: React.ReactNode;\n  paginatedSelectAllActionText?: string;\n  lastColumnSticky?: boolean;\n  selectable?: boolean;\n  /** List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.  */\n  sortable?: boolean[];\n  /**\n   * The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to descending.\n   * @default 'descending'\n   */\n  defaultSortDirection?: IndexTableSortDirection;\n  /** The current sorting direction. */\n  sortDirection?: IndexTableSortDirection;\n  /**\n   * The index of the heading that the table rows are sorted by.\n   */\n  sortColumnIndex?: number;\n  /** Callback fired on click or keypress of a sortable column heading. */\n  onSort?(headingIndex: number, direction: IndexTableSortDirection): void;\n  /** Optional dictionary of sort toggle labels for each sortable column, with ascending and descending label,\n   * with the key as the index of the column */\n  sortToggleLabels?: IndexTableSortToggleLabels;\n}"
    }
  },
  "TableHeadingRect": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "TableHeadingRect",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "offsetWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "offsetLeft",
          "value": "number",
          "description": ""
        }
      ],
      "value": "export interface TableHeadingRect {\n  offsetWidth: number;\n  offsetLeft: number;\n}"
    }
  },
  "IndexTableProps": {
    "polaris-react/src/components/IndexTable/IndexTable.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
      "name": "IndexTableProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "headings",
          "value": "NonEmptyArray<IndexTableHeading>",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "promotedBulkActions",
          "value": "(MenuGroupDescriptor | BulkAction)[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "bulkActions",
          "value": "(ActionListSection | BulkAction)[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "emptyState",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sort",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paginatedSelectAllActionText",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lastColumnSticky",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortable",
          "value": "boolean[]",
          "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultSortDirection",
          "value": "IndexTableSortDirection",
          "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to descending.",
          "isOptional": true,
          "defaultValue": "'descending'"
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortDirection",
          "value": "IndexTableSortDirection",
          "description": "The current sorting direction.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortColumnIndex",
          "value": "number",
          "description": "The index of the heading that the table rows are sorted by.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSort",
          "value": "(headingIndex: number, direction: IndexTableSortDirection) => void",
          "description": "Callback fired on click or keypress of a sortable column heading.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortToggleLabels",
          "value": "IndexTableSortToggleLabels",
          "description": "Optional dictionary of sort toggle labels for each sortable column, with ascending and descending label,\nwith the key as the index of the column",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "itemCount",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectedItemsCount",
          "value": "number | \"All\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "resourceName",
          "value": "{ singular: string; plural: string; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasMoreItems",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "condensed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSelectionChange",
          "value": "(selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface IndexTableProps\n  extends IndexTableBaseProps,\n    IndexProviderProps {}"
    }
  },
  "IndicatorProps": {
    "polaris-react/src/components/Indicator/Indicator.tsx": {
      "filePath": "polaris-react/src/components/Indicator/Indicator.tsx",
      "name": "IndicatorProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Indicator/Indicator.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pulse",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface IndicatorProps {\n  pulse?: boolean;\n}"
    }
  },
  "BlockAlign": {
    "polaris-react/src/components/Inline/Inline.tsx": {
      "filePath": "polaris-react/src/components/Inline/Inline.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BlockAlign",
      "value": "'start' | 'center' | 'end' | 'baseline' | 'stretch'",
      "description": ""
    }
  },
  "InlineProps": {
    "polaris-react/src/components/Inline/Inline.tsx": {
      "filePath": "polaris-react/src/components/Inline/Inline.tsx",
      "name": "InlineProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Inline/Inline.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Inline/Inline.tsx",
          "syntaxKind": "PropertySignature",
          "name": "align",
          "value": "Align",
          "description": "Horizontal alignment of children",
          "isOptional": true,
          "defaultValue": "'start'"
        },
        {
          "filePath": "polaris-react/src/components/Inline/Inline.tsx",
          "syntaxKind": "PropertySignature",
          "name": "blockAlign",
          "value": "BlockAlign",
          "description": "Vertical alignment of children",
          "isOptional": true,
          "defaultValue": "'center'"
        },
        {
          "filePath": "polaris-react/src/components/Inline/Inline.tsx",
          "syntaxKind": "PropertySignature",
          "name": "gap",
          "value": "Gap",
          "description": "The spacing between elements. Accepts a spacing token or an object of spacing tokens for different screen sizes.",
          "isOptional": true,
          "defaultValue": "'4'"
        },
        {
          "filePath": "polaris-react/src/components/Inline/Inline.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wrap",
          "value": "boolean",
          "description": "Wrap stack elements to additional rows as needed on small screens",
          "isOptional": true,
          "defaultValue": "true"
        }
      ],
      "value": "export interface InlineProps {\n  children?: React.ReactNode;\n  /** Horizontal alignment of children\n   * @default 'start'\n   */\n  align?: Align;\n  /** Vertical alignment of children\n   * @default 'center'\n   */\n  blockAlign?: BlockAlign;\n  /** The spacing between elements. Accepts a spacing token or an object of spacing tokens for different screen sizes.\n   * @default '4'\n   * @example\n   * gap='2'\n   * gap={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n   */\n  gap?: Gap;\n  /** Wrap stack elements to additional rows as needed on small screens\n   * @default true\n   */\n  wrap?: boolean;\n}"
    }
  },
  "InlineCodeProps": {
    "polaris-react/src/components/InlineCode/InlineCode.tsx": {
      "filePath": "polaris-react/src/components/InlineCode/InlineCode.tsx",
      "name": "InlineCodeProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/InlineCode/InlineCode.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "The content to render inside the code block"
        }
      ],
      "value": "export interface InlineCodeProps {\n  /** The content to render inside the code block */\n  children: ReactNode;\n}"
    }
  },
  "InlineErrorProps": {
    "polaris-react/src/components/InlineError/InlineError.tsx": {
      "filePath": "polaris-react/src/components/InlineError/InlineError.tsx",
      "name": "InlineErrorProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/InlineError/InlineError.tsx",
          "syntaxKind": "PropertySignature",
          "name": "message",
          "value": "any",
          "description": "Content briefly explaining how to resolve the invalid form field input."
        },
        {
          "filePath": "polaris-react/src/components/InlineError/InlineError.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fieldID",
          "value": "string",
          "description": "Unique identifier of the invalid form field that the message describes"
        }
      ],
      "value": "export interface InlineErrorProps {\n  /** Content briefly explaining how to resolve the invalid form field input. */\n  message: Error;\n  /** Unique identifier of the invalid form field that the message describes */\n  fieldID: string;\n}"
    }
  },
  "KeyboardKeyProps": {
    "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx": {
      "filePath": "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx",
      "name": "KeyboardKeyProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "string",
          "description": "The content to display inside the key",
          "isOptional": true
        }
      ],
      "value": "export interface KeyboardKeyProps {\n  /** The content to display inside the key */\n  children?: string;\n}"
    }
  },
  "KeypressListenerProps": {
    "polaris-react/src/components/KeypressListener/KeypressListener.tsx": {
      "filePath": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "KeypressListenerProps",
      "value": "NonMutuallyExclusiveProps & (\n    | {useCapture?: boolean; options?: undefined}\n    | {useCapture?: undefined; options?: AddEventListenerOptions}\n  )",
      "description": ""
    }
  },
  "KeyEvent": {
    "polaris-react/src/components/KeypressListener/KeypressListener.tsx": {
      "filePath": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "KeyEvent",
      "value": "'keydown' | 'keyup'",
      "description": ""
    }
  },
  "LabelProps": {
    "polaris-react/src/components/Label/Label.tsx": {
      "filePath": "polaris-react/src/components/Label/Label.tsx",
      "name": "LabelProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Label/Label.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Label content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Label/Label.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the label"
        },
        {
          "filePath": "polaris-react/src/components/Label/Label.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Label/Label.tsx",
          "syntaxKind": "PropertySignature",
          "name": "requiredIndicator",
          "value": "boolean",
          "description": "Visual required indicator for the label",
          "isOptional": true
        }
      ],
      "value": "export interface LabelProps {\n  /** Label content */\n  children?: React.ReactNode;\n  /** A unique identifier for the label */\n  id: string;\n  /** Visually hide the label */\n  hidden?: boolean;\n  /** Visual required indicator for the label */\n  requiredIndicator?: boolean;\n}"
    }
  },
  "LabelledProps": {
    "polaris-react/src/components/Labelled/Labelled.tsx": {
      "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
      "name": "LabelledProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the label"
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Text for the label"
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Error to display beneath the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "Action",
          "description": "An action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional hint text to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content to display inside the connected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Labelled/Labelled.tsx",
          "syntaxKind": "PropertySignature",
          "name": "requiredIndicator",
          "value": "boolean",
          "description": "Visual required indicator for the label",
          "isOptional": true
        }
      ],
      "value": "export interface LabelledProps {\n  /** A unique identifier for the label */\n  id: LabelProps['id'];\n  /** Text for the label */\n  label: React.ReactNode;\n  /** Error to display beneath the label */\n  error?: Error | boolean;\n  /** An action */\n  action?: Action;\n  /** Additional hint text to display */\n  helpText?: React.ReactNode;\n  /** Content to display inside the connected */\n  children?: React.ReactNode;\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Visual required indicator for the label */\n  requiredIndicator?: boolean;\n}"
    }
  },
  "LayoutProps": {
    "polaris-react/src/components/Layout/Layout.tsx": {
      "filePath": "polaris-react/src/components/Layout/Layout.tsx",
      "name": "LayoutProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Layout/Layout.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "Automatically adds sections to layout.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/Layout.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the layout.",
          "isOptional": true
        }
      ],
      "value": "export interface LayoutProps {\n  /** Automatically adds sections to layout. */\n  sectioned?: boolean;\n  /** The content to display inside the layout. */\n  children?: React.ReactNode;\n}"
    }
  },
  "LegacyCardProps": {
    "polaris-react/src/components/LegacyCard/LegacyCard.tsx": {
      "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
      "name": "LegacyCardProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "Title content for the card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Inner content of the card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subdued",
          "value": "boolean",
          "description": "A less prominent card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "Auto wrap content in section",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "DisableableAction[]",
          "description": "Card header actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryFooterAction",
          "value": "ComplexAction",
          "description": "Primary action in the card footer",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryFooterActions",
          "value": "ComplexAction[]",
          "description": "Secondary actions in the card footer",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryFooterActionsDisclosureText",
          "value": "string",
          "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "footerActionAlignment",
          "value": "\"left\" | \"right\"",
          "description": "Alignment of the footer actions on the card, defaults to right",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideOnPrint",
          "value": "boolean",
          "description": "Allow the card to be hidden when printing",
          "isOptional": true
        }
      ],
      "value": "export interface LegacyCardProps {\n  /** Title content for the card */\n  title?: React.ReactNode;\n  /** Inner content of the card */\n  children?: React.ReactNode;\n  /** A less prominent card */\n  subdued?: boolean;\n  /** Auto wrap content in section */\n  sectioned?: boolean;\n  /** Card header actions */\n  actions?: DisableableAction[];\n  /** Primary action in the card footer */\n  primaryFooterAction?: ComplexAction;\n  /** Secondary actions in the card footer */\n  secondaryFooterActions?: ComplexAction[];\n  /** The content of the disclosure button rendered when there is more than one secondary footer action */\n  secondaryFooterActionsDisclosureText?: string;\n  /** Alignment of the footer actions on the card, defaults to right */\n  footerActionAlignment?: 'right' | 'left';\n  /** Allow the card to be hidden when printing */\n  hideOnPrint?: boolean;\n}"
    }
  },
  "Alignment": {
    "polaris-react/src/components/LegacyStack/LegacyStack.tsx": {
      "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'leading' | 'trailing' | 'center' | 'fill' | 'baseline'",
      "description": ""
    },
    "polaris-react/src/components/OptionList/OptionList.tsx": {
      "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'top' | 'center' | 'bottom'",
      "description": ""
    },
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'leading' | 'trailing' | 'center' | 'fill' | 'baseline'",
      "description": ""
    },
    "polaris-react/src/components/Stack/Stack.tsx": {
      "filePath": "polaris-react/src/components/Stack/Stack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'leading' | 'trailing' | 'center' | 'fill' | 'baseline'",
      "description": ""
    },
    "polaris-react/src/components/Text/Text.tsx": {
      "filePath": "polaris-react/src/components/Text/Text.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'start' | 'center' | 'end' | 'justify'",
      "description": ""
    },
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'left' | 'center' | 'right'",
      "description": ""
    },
    "polaris-react/src/components/OptionList/components/Option/Option.tsx": {
      "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Alignment",
      "value": "'top' | 'center' | 'bottom'",
      "description": ""
    }
  },
  "Distribution": {
    "polaris-react/src/components/LegacyStack/LegacyStack.tsx": {
      "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Distribution",
      "value": "'equalSpacing' | 'leading' | 'trailing' | 'center' | 'fill' | 'fillEvenly'",
      "description": ""
    },
    "polaris-react/src/components/Stack/Stack.tsx": {
      "filePath": "polaris-react/src/components/Stack/Stack.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Distribution",
      "value": "'equalSpacing' | 'leading' | 'trailing' | 'center' | 'fill' | 'fillEvenly'",
      "description": ""
    }
  },
  "LegacyStackProps": {
    "polaris-react/src/components/LegacyStack/LegacyStack.tsx": {
      "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
      "name": "LegacyStackProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Elements to display inside stack",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wrap",
          "value": "boolean",
          "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "vertical",
          "value": "boolean",
          "description": "Stack the elements vertically",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spacing",
          "value": "Spacing",
          "description": "Adjust spacing between elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alignment",
          "value": "Alignment",
          "description": "Adjust vertical alignment of elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "distribution",
          "value": "Distribution",
          "description": "Adjust horizontal alignment of elements",
          "isOptional": true
        }
      ],
      "value": "export interface LegacyStackProps {\n  /** Elements to display inside stack */\n  children?: React.ReactNode;\n  /** Wrap stack elements to additional rows as needed on small screens (Defaults to true) */\n  wrap?: boolean;\n  /** Stack the elements vertically */\n  vertical?: boolean;\n  /** Adjust spacing between elements */\n  spacing?: Spacing;\n  /** Adjust vertical alignment of elements */\n  alignment?: Alignment;\n  /** Adjust horizontal alignment of elements */\n  distribution?: Distribution;\n}"
    }
  },
  "LinkProps": {
    "polaris-react/src/components/Link/Link.tsx": {
      "filePath": "polaris-react/src/components/Link/Link.tsx",
      "name": "LinkProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for the link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "The url to link to",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Makes the link open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "monochrome",
          "value": "boolean",
          "description": "Makes the link color the same as the current text color and adds an underline",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "removeUnderline",
          "value": "boolean",
          "description": "Removes text decoration underline to the link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when a link is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Descriptive text to be read to screenreaders",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Link/Link.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dataPrimaryLink",
          "value": "boolean",
          "description": "Indicates whether or not the link is the primary navigation link when rendered inside of an `IndexTable.Row`",
          "isOptional": true
        }
      ],
      "value": "export interface LinkProps {\n  /** ID for the link */\n  id?: string;\n  /** The url to link to */\n  url?: string;\n  /** The content to display inside the link */\n  children?: React.ReactNode;\n  /** Makes the link open in a new tab */\n  external?: boolean;\n  /** Makes the link color the same as the current text color and adds an underline */\n  monochrome?: boolean;\n  /** Removes text decoration underline to the link*/\n  removeUnderline?: boolean;\n  /** Callback when a link is clicked */\n  onClick?(): void;\n  /** Descriptive text to be read to screenreaders */\n  accessibilityLabel?: string;\n  /** Indicates whether or not the link is the primary navigation link when rendered inside of an `IndexTable.Row` */\n  dataPrimaryLink?: boolean;\n}"
    }
  },
  "Type": {
    "polaris-react/src/components/List/List.tsx": {
      "filePath": "polaris-react/src/components/List/List.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Type",
      "value": "'bullet' | 'number'",
      "description": ""
    },
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Type",
      "value": "'text' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'url' | 'date' | 'datetime-local' | 'month' | 'time' | 'week' | 'currency'",
      "description": ""
    }
  },
  "ListProps": {
    "polaris-react/src/components/List/List.tsx": {
      "filePath": "polaris-react/src/components/List/List.tsx",
      "name": "ListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/List/List.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spacing",
          "value": "Spacing",
          "description": "Determines the space between list items",
          "isOptional": true,
          "defaultValue": "'loose'"
        },
        {
          "filePath": "polaris-react/src/components/List/List.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "Type",
          "description": "Type of list to display",
          "isOptional": true,
          "defaultValue": "'bullet'"
        },
        {
          "filePath": "polaris-react/src/components/List/List.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "List item elements",
          "isOptional": true
        }
      ],
      "value": "export interface ListProps {\n  /**\n   * Determines the space between list items\n   * @default 'loose'\n   */\n  spacing?: Spacing;\n  /**\n   * Type of list to display\n   * @default 'bullet'\n   */\n  type?: Type;\n  /** List item elements */\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/Tabs/components/List/List.tsx": {
      "filePath": "polaris-react/src/components/Tabs/components/List/List.tsx",
      "name": "ListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/components/List/List.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focusIndex",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/List/List.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disclosureTabs",
          "value": "TabDescriptor[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/List/List.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(id: string) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/List/List.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyPress",
          "value": "(event: React.KeyboardEvent<HTMLElement>) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ListProps {\n  focusIndex: number;\n  disclosureTabs: TabDescriptor[];\n  onClick?(id: string): void;\n  onKeyPress?(event: React.KeyboardEvent<HTMLElement>): void;\n}"
    }
  },
  "AutoSelection": {
    "polaris-react/src/components/Listbox/Listbox.tsx": {
      "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "AutoSelection",
      "value": "export enum AutoSelection {\n  /** Default active option is the first selected option. If no options are selected, defaults to first interactive option. */\n  FirstSelected = 'FIRST_SELECTED',\n  /** Default active option is always the first interactive option. */\n  First = 'FIRST',\n  /** Default to the manual selection pattern. */\n  None = 'NONE',\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "name": "FirstSelected",
          "value": "FIRST_SELECTED"
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "name": "First",
          "value": "FIRST"
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "name": "None",
          "value": "NONE"
        }
      ]
    }
  },
  "ListboxProps": {
    "polaris-react/src/components/Listbox/Listbox.tsx": {
      "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
      "name": "ListboxProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "Inner content of the listbox"
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoSelection",
          "value": "AutoSelection",
          "description": "Indicates the default active option in the list. Patterns that support option creation should default the active option to the first option.",
          "isOptional": true,
          "defaultValue": "AutoSelection.FirstSelected"
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "enableKeyboardControl",
          "value": "boolean",
          "description": "Explicitly enable keyboard control",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "customListId",
          "value": "string",
          "description": "Provide a custom ID for the list element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSelect",
          "value": "(value: string) => void",
          "description": "Callback fired when an option is selected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onActiveOptionChange",
          "value": "(value: string, domId: string) => void",
          "description": "Callback fired when an option becomes active",
          "isOptional": true
        }
      ],
      "value": "export interface ListboxProps {\n  /** Inner content of the listbox */\n  children: ReactNode;\n  /** Indicates the default active option in the list. Patterns that support option creation should default the active option to the first option.\n   * @default AutoSelection.FirstSelected\n   */\n  autoSelection?: AutoSelection;\n  /** Explicitly enable keyboard control */\n  enableKeyboardControl?: boolean;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** Provide a custom ID for the list element */\n  customListId?: string;\n  /** Callback fired when an option is selected */\n  onSelect?(value: string): void;\n  /** Callback fired when an option becomes active */\n  onActiveOptionChange?(value: string, domId: string): void;\n}"
    }
  },
  "ArrowKeys": {
    "polaris-react/src/components/Listbox/Listbox.tsx": {
      "filePath": "polaris-react/src/components/Listbox/Listbox.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ArrowKeys",
      "value": "'up' | 'down'",
      "description": ""
    }
  },
  "LoadingProps": {
    "polaris-react/src/components/Loading/Loading.tsx": {
      "filePath": "polaris-react/src/components/Loading/Loading.tsx",
      "name": "LoadingProps",
      "description": "",
      "members": [],
      "value": "export interface LoadingProps {}"
    },
    "polaris-react/src/components/Listbox/components/Loading/Loading.tsx": {
      "filePath": "polaris-react/src/components/Listbox/components/Loading/Loading.tsx",
      "name": "LoadingProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/components/Loading/Loading.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Loading/Loading.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": ""
        }
      ],
      "value": "export interface LoadingProps {\n  children?: React.ReactNode;\n  accessibilityLabel: string;\n}"
    }
  },
  "MediaCardProps": {
    "polaris-react/src/components/MediaCard/MediaCard.tsx": {
      "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
      "name": "MediaCardProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The visual media to display in the card"
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "Heading content"
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "description",
          "value": "string",
          "description": "Body content"
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "ComplexAction",
          "description": "Main call to action, rendered as a basic button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryAction",
          "value": "ComplexAction",
          "description": "Secondary call to action, rendered as a plain button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "popoverActions",
          "value": "ActionListItemDescriptor[]",
          "description": "Action list items to render in ellipsis popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "portrait",
          "value": "boolean",
          "description": "Whether or not card content should be laid out vertically",
          "isOptional": true,
          "defaultValue": "false"
        },
        {
          "filePath": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of the visual media in the card",
          "isOptional": true,
          "defaultValue": "'medium'"
        }
      ],
      "value": "interface MediaCardProps {\n  /** The visual media to display in the card */\n  children: React.ReactNode;\n  /** Heading content */\n  title: React.ReactNode;\n  /** Body content */\n  description: string;\n  /** Main call to action, rendered as a basic button */\n  primaryAction?: ComplexAction;\n  /** Secondary call to action, rendered as a plain button */\n  secondaryAction?: ComplexAction;\n  /** Action list items to render in ellipsis popover */\n  popoverActions?: ActionListItemDescriptor[];\n  /** Whether or not card content should be laid out vertically\n   * @default false\n   */\n  portrait?: boolean;\n  /** Size of the visual media in the card\n   * @default 'medium'\n   */\n  size?: Size;\n}"
    }
  },
  "MessageIndicatorProps": {
    "polaris-react/src/components/MessageIndicator/MessageIndicator.tsx": {
      "filePath": "polaris-react/src/components/MessageIndicator/MessageIndicator.tsx",
      "name": "MessageIndicatorProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/MessageIndicator/MessageIndicator.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/MessageIndicator/MessageIndicator.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface MessageIndicatorProps {\n  children?: React.ReactNode;\n  active?: boolean;\n}"
    }
  },
  "ModalProps": {
    "polaris-react/src/components/Modal/Modal.tsx": {
      "filePath": "polaris-react/src/components/Modal/Modal.tsx",
      "name": "ModalProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "Whether the modal is open or not"
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "src",
          "value": "string",
          "description": "The url that will be loaded as the content of the modal",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "iFrameName",
          "value": "string",
          "description": "The name of the modal content iframe",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "any",
          "description": "The content for the title of the modal"
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": "Hide the title in the modal",
          "isOptional": true,
          "defaultValue": "false"
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside modal",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "footer",
          "value": "React.ReactNode",
          "description": "Inner content of the footer",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "instant",
          "value": "boolean",
          "description": "Disable animations and open modal instantly",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "Automatically adds sections to modal",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "large",
          "value": "boolean",
          "description": "Increases the modal width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "small",
          "value": "boolean",
          "description": "Decreases the modal width",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "limitHeight",
          "value": "boolean",
          "description": "Limits modal height on large sceens with scrolling",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Replaces modal content with a spinner while a background action is being performed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": "Callback when the modal is closed"
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onIFrameLoad",
          "value": "(evt: React.SyntheticEvent<HTMLIFrameElement>) => void",
          "description": "Callback when iframe has loaded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTransitionEnd",
          "value": "() => void",
          "description": "Callback when modal transition animation has ended",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onScrolledToBottom",
          "value": "() => void",
          "description": "Callback when the bottom of the modal content is reached",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "any",
          "description": "The element or the RefObject that activates the Modal",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "noScroll",
          "value": "boolean",
          "description": "Removes Scrollable container from the modal content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullScreen",
          "value": "boolean",
          "description": "Sets modal to the height of the viewport on small screens",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "ComplexAction",
          "description": "Primary action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/Modal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryActions",
          "value": "ComplexAction[]",
          "description": "Collection of secondary actions",
          "isOptional": true
        }
      ],
      "value": "export interface ModalProps extends FooterProps {\n  /** Whether the modal is open or not */\n  open: boolean;\n  /** The url that will be loaded as the content of the modal */\n  src?: string;\n  /** The name of the modal content iframe */\n  iFrameName?: string;\n  /** The content for the title of the modal */\n  title: string | React.ReactNode;\n  /**\n   * Hide the title in the modal\n   * @default false\n   */\n  titleHidden?: boolean;\n  /** The content to display inside modal */\n  children?: React.ReactNode;\n  /** Inner content of the footer */\n  footer?: React.ReactNode;\n  /** Disable animations and open modal instantly */\n  instant?: boolean;\n  /** Automatically adds sections to modal */\n  sectioned?: boolean;\n  /** Increases the modal width */\n  large?: boolean;\n  /** Decreases the modal width */\n  small?: boolean;\n  /** Limits modal height on large sceens with scrolling */\n  limitHeight?: boolean;\n  /** Replaces modal content with a spinner while a background action is being performed */\n  loading?: boolean;\n  /** Callback when the modal is closed */\n  onClose(): void;\n  /** Callback when iframe has loaded */\n  onIFrameLoad?(evt: React.SyntheticEvent<HTMLIFrameElement>): void;\n  /** Callback when modal transition animation has ended */\n  onTransitionEnd?(): void;\n  /** Callback when the bottom of the modal content is reached */\n  onScrolledToBottom?(): void;\n  /** The element or the RefObject that activates the Modal */\n  activator?: React.RefObject<HTMLElement> | React.ReactElement;\n  /** Removes Scrollable container from the modal content */\n  noScroll?: boolean;\n  /** Sets modal to the height of the viewport on small screens */\n  fullScreen?: boolean;\n}"
    }
  },
  "NavigationProps": {
    "polaris-react/src/components/Navigation/Navigation.tsx": {
      "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
      "name": "NavigationProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "location",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contextControl",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaLabelledBy",
          "value": "string",
          "description": "id of the element used as aria-labelledby",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "logoSuffix",
          "value": "React.ReactNode",
          "description": "Accepts a component that is used to supplement the logo markup",
          "isOptional": true
        }
      ],
      "value": "export interface NavigationProps {\n  location: string;\n  children?: React.ReactNode;\n  contextControl?: React.ReactNode;\n  onDismiss?(): void;\n  /** id of the element used as aria-labelledby */\n  ariaLabelledBy?: string;\n  /** Accepts a component that is used to supplement the logo markup */\n  logoSuffix?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx": {
      "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
      "name": "NavigationProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "columnVisibilityData",
          "value": "ColumnVisibilityData[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isScrolledFarthestLeft",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isScrolledFarthestRight",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixedFirstColumns",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "MethodSignature",
          "name": "navigateTableLeft",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "MethodSignature",
          "name": "navigateTableRight",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Navigation/Navigation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "setRef",
          "value": "(ref: HTMLDivElement) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface NavigationProps {\n  columnVisibilityData: ColumnVisibilityData[];\n  isScrolledFarthestLeft?: boolean;\n  isScrolledFarthestRight?: boolean;\n  fixedFirstColumns: number;\n  navigateTableLeft?(): void;\n  navigateTableRight?(): void;\n  setRef?: (ref: HTMLDivElement | null) => void;\n}"
    }
  },
  "NavigationContextType": {
    "polaris-react/src/components/Navigation/context.tsx": {
      "filePath": "polaris-react/src/components/Navigation/context.tsx",
      "name": "NavigationContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "location",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onNavigationDismiss",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "withinContentContainer",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface NavigationContextType {\n  location: string;\n  onNavigationDismiss?(): void;\n  withinContentContainer?: boolean;\n}"
    }
  },
  "OptionListProps": {
    "polaris-react/src/components/OptionList/OptionList.tsx": {
      "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
      "name": "OptionListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the option list",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "List title",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "options",
          "value": "OptionDescriptor[]",
          "description": "Collection of options to be listed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "Defines a specific role attribute for the list itself",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "optionRole",
          "value": "string",
          "description": "Defines a specific role attribute for each option in the list",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sections",
          "value": "SectionDescriptor[]",
          "description": "Sections containing a header and related options",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "string[]",
          "description": "The selected options"
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "Allow more than one option to be selected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlign",
          "value": "Alignment",
          "description": "Vertically align child content to the center, top, or bottom.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/OptionList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(selected: string[]) => void",
          "description": "Callback when selection is changed"
        }
      ],
      "value": "export interface OptionListProps {\n  /** A unique identifier for the option list */\n  id?: string;\n  /** List title */\n  title?: string;\n  /** Collection of options to be listed */\n  options?: OptionDescriptor[];\n  /** Defines a specific role attribute for the list itself */\n  role?: 'listbox' | 'combobox' | string;\n  /** Defines a specific role attribute for each option in the list */\n  optionRole?: string;\n  /** Sections containing a header and related options */\n  sections?: SectionDescriptor[];\n  /** The selected options */\n  selected: string[];\n  /** Allow more than one option to be selected */\n  allowMultiple?: boolean;\n  /** Vertically align child content to the center, top, or bottom.  */\n  verticalAlign?: Alignment;\n  /** Callback when selection is changed */\n  onChange(selected: string[]): void;\n}"
    }
  },
  "PageProps": {
    "polaris-react/src/components/Page/Page.tsx": {
      "filePath": "polaris-react/src/components/Page/Page.tsx",
      "name": "PageProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The contents of the page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Remove the normal max-width on the page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "narrowWidth",
          "value": "boolean",
          "description": "Decreases the maximum layout width. Intended for single-column layouts",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "divider",
          "value": "boolean",
          "description": "Displays a divider between the page header and the page content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": "Visually hide the title",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "any",
          "description": "Primary page-level action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pagination",
          "value": "PaginationProps",
          "description": "Page-level pagination",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "breadcrumb",
          "value": "LinkAction | CallbackAction",
          "description": "Breadcrumb link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryActions",
          "value": "any",
          "description": "Collection of secondary page-level actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionGroups",
          "value": "MenuGroupDescriptor[]",
          "description": "Collection of page-level groups of secondary actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "additionalNavigation",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Additional navigation markup"
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "additionalMetadata",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onActionRollup",
          "value": "(hasRolledUp: boolean) => void",
          "description": "Callback that returns true when secondary actions are rolled up into action groups, and false when not",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Page title, in large type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subtitle",
          "value": "string",
          "description": "Page subtitle, in regular type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleMetadata",
          "value": "React.ReactNode",
          "description": "Important and non-interactive status information shown immediately after the title.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/Page.tsx",
          "syntaxKind": "PropertySignature",
          "name": "compactTitle",
          "value": "boolean",
          "description": "Removes spacing between title and subtitle",
          "isOptional": true
        }
      ],
      "value": "export interface PageProps extends HeaderProps {\n  /** The contents of the page */\n  children?: React.ReactNode;\n  /** Remove the normal max-width on the page */\n  fullWidth?: boolean;\n  /** Decreases the maximum layout width. Intended for single-column layouts */\n  narrowWidth?: boolean;\n  /** Displays a divider between the page header and the page content */\n  divider?: boolean;\n}"
    }
  },
  "PageActionsProps": {
    "polaris-react/src/components/PageActions/PageActions.tsx": {
      "filePath": "polaris-react/src/components/PageActions/PageActions.tsx",
      "name": "PageActionsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PageActions/PageActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "any",
          "description": "The primary action for the page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PageActions/PageActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryActions",
          "value": "any",
          "description": "The secondary actions for the page",
          "isOptional": true
        }
      ],
      "value": "export interface PageActionsProps {\n  /** The primary action for the page */\n  primaryAction?: (DisableableAction & LoadableAction) | React.ReactNode;\n  /** The secondary actions for the page */\n  secondaryActions?: ComplexAction[] | React.ReactNode;\n}"
    }
  },
  "MaybeJSX": {
    "polaris-react/src/components/PageActions/PageActions.tsx": {
      "filePath": "polaris-react/src/components/PageActions/PageActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MaybeJSX",
      "value": "JSX.Element | null",
      "description": ""
    },
    "polaris-react/src/components/Page/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MaybeJSX",
      "value": "JSX.Element | null",
      "description": ""
    }
  },
  "AccessibilityLabels": {
    "polaris-react/src/components/Pagination/Pagination.tsx": {
      "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
      "name": "AccessibilityLabels",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "previous",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "next",
          "value": "string",
          "description": ""
        }
      ],
      "value": "interface AccessibilityLabels {\n  previous: string;\n  next: string;\n}"
    }
  },
  "PaginationProps": {
    "polaris-react/src/components/Pagination/Pagination.tsx": {
      "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
      "name": "PaginationProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "nextKeys",
          "value": "Key[]",
          "description": "Keyboard shortcuts for the next button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "previousKeys",
          "value": "Key[]",
          "description": "Keyboard shortcuts for the previous button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "nextTooltip",
          "value": "string",
          "description": "Tooltip for the next button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "previousTooltip",
          "value": "string",
          "description": "Tooltip for the previous button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "nextURL",
          "value": "string",
          "description": "The URL of the next page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "previousURL",
          "value": "string",
          "description": "The URL of the previous page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasNext",
          "value": "boolean",
          "description": "Whether there is a next page to show",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasPrevious",
          "value": "boolean",
          "description": "Whether there is a previous page to show",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Accessible label for the pagination",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabels",
          "value": "AccessibilityLabels",
          "description": "Accessible labels for the buttons and UnstyledLinks",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onNext",
          "value": "() => void",
          "description": "Callback when next button is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onPrevious",
          "value": "() => void",
          "description": "Callback when previous button is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Pagination/Pagination.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Text to provide more context in between the arrow buttons",
          "isOptional": true
        }
      ],
      "value": "export interface PaginationProps {\n  /** Keyboard shortcuts for the next button */\n  nextKeys?: Key[];\n  /** Keyboard shortcuts for the previous button */\n  previousKeys?: Key[];\n  /** Tooltip for the next button */\n  nextTooltip?: string;\n  /** Tooltip for the previous button */\n  previousTooltip?: string;\n  /** The URL of the next page */\n  nextURL?: string;\n  /** The URL of the previous page */\n  previousURL?: string;\n  /** Whether there is a next page to show */\n  hasNext?: boolean;\n  /** Whether there is a previous page to show */\n  hasPrevious?: boolean;\n  /** Accessible label for the pagination */\n  accessibilityLabel?: string;\n  /** Accessible labels for the buttons and UnstyledLinks */\n  accessibilityLabels?: AccessibilityLabels;\n  /** Callback when next button is clicked */\n  onNext?(): void;\n  /** Callback when previous button is clicked */\n  onPrevious?(): void;\n  /** Text to provide more context in between the arrow buttons */\n  label?: React.ReactNode;\n}"
    }
  },
  "MediaQueryContextType": {
    "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx": {
      "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MediaQueryContextType",
      "value": "NonNullable<\n  React.ContextType<typeof MediaQueryContext>\n>",
      "description": ""
    },
    "polaris-react/src/utilities/media-query/context.tsx": {
      "filePath": "polaris-react/src/utilities/media-query/context.tsx",
      "name": "MediaQueryContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/media-query/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isNavigationCollapsed",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "export interface MediaQueryContextType {\n  isNavigationCollapsed: boolean;\n}"
    }
  },
  "WithPolarisTestProviderOptions": {
    "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx": {
      "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
      "name": "WithPolarisTestProviderOptions",
      "description": "When writing a custom mounting function `mountWithAppContext(node, options)`\nthis is the type of the options object. These values are customizable when\nyou call the app",
      "members": [
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "i18n",
          "value": "TranslationDictionary | TranslationDictionary[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "link",
          "value": "LinkLikeComponent",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "mediaQuery",
          "value": "Partial<any>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "features",
          "value": "FeaturesConfig",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "frame",
          "value": "Partial<any>",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface WithPolarisTestProviderOptions {\n  // Contexts provided by AppProvider\n  i18n?: ConstructorParameters<typeof I18n>[0];\n  link?: LinkLikeComponent;\n  mediaQuery?: Partial<MediaQueryContextType>;\n  features?: FeaturesConfig;\n  // Contexts provided by Frame\n  frame?: Partial<FrameContextType>;\n}"
    }
  },
  "PolarisTestProviderProps": {
    "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx": {
      "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
      "name": "PolarisTestProviderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "strict",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "i18n",
          "value": "TranslationDictionary | TranslationDictionary[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "link",
          "value": "LinkLikeComponent",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "mediaQuery",
          "value": "Partial<any>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "features",
          "value": "FeaturesConfig",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "syntaxKind": "PropertySignature",
          "name": "frame",
          "value": "Partial<any>",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PolarisTestProviderProps\n  extends WithPolarisTestProviderOptions {\n  children: React.ReactElement;\n  strict?: boolean;\n}"
    }
  },
  "PopoverProps": {
    "polaris-react/src/components/Popover/Popover.tsx": {
      "filePath": "polaris-react/src/components/Popover/Popover.tsx",
      "name": "PopoverProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "The preferred direction to open the popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredAlignment",
          "value": "PreferredAlignment",
          "description": "The preferred alignment of the popover relative to its activator",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Show or hide the Popover"
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "React.ReactElement",
          "description": "The element to activate the Popover"
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferInputActivator",
          "value": "boolean",
          "description": "Use the activator's input element to calculate the Popover position",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activatorWrapper",
          "value": "string",
          "description": "The element type to wrap the activator with",
          "isOptional": true,
          "defaultValue": "'div'"
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndexOverride",
          "value": "number",
          "description": "Override on the default z-index of 400",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preventFocusOnClose",
          "value": "boolean",
          "description": "Prevents focusing the activator or the next focusable element when the popover is deactivated",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "Automatically add wrap content in a section",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Allow popover to stretch to the full width of its activator",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullHeight",
          "value": "boolean",
          "description": "Allow popover to stretch to fit content vertically",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fluidContent",
          "value": "boolean",
          "description": "Allow popover content to determine the overlay width and height",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixed",
          "value": "boolean",
          "description": "Remains in a fixed position",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaHaspopup",
          "value": "boolean | \"false\" | \"true\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\"",
          "description": "Used to illustrate the type of popover element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideOnPrint",
          "value": "boolean",
          "description": "Allow the popover overlay to be hidden when printing",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "(source: PopoverCloseSource) => void",
          "description": "Callback when popover is closed"
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autofocusTarget",
          "value": "PopoverAutofocusTarget",
          "description": "The preferred auto focus target defaulting to the popover container",
          "isOptional": true,
          "defaultValue": "'container'"
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preventCloseOnChildOverlayClick",
          "value": "boolean",
          "description": "Prevents closing the popover when other overlays are clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "PropertySignature",
          "name": "captureOverscroll",
          "value": "boolean",
          "description": "Prevents page scrolling when the end of the scrollable Popover overlay content is reached - applied to Pane subcomponent",
          "isOptional": true,
          "defaultValue": "false"
        }
      ],
      "value": "export interface PopoverProps {\n  /** The content to display inside the popover */\n  children?: React.ReactNode;\n  /** The preferred direction to open the popover */\n  preferredPosition?: PopoverOverlayProps['preferredPosition'];\n  /** The preferred alignment of the popover relative to its activator */\n  preferredAlignment?: PopoverOverlayProps['preferredAlignment'];\n  /** Show or hide the Popover */\n  active: boolean;\n  /** The element to activate the Popover */\n  activator: React.ReactElement;\n  /**\n   * Use the activator's input element to calculate the Popover position\n   * @default true\n   */\n  preferInputActivator?: PopoverOverlayProps['preferInputActivator'];\n  /**\n   * The element type to wrap the activator with\n   * @default 'div'\n   */\n  activatorWrapper?: string;\n  /** Override on the default z-index of 400 */\n  zIndexOverride?: number;\n  /** Prevents focusing the activator or the next focusable element when the popover is deactivated */\n  preventFocusOnClose?: boolean;\n  /** Automatically add wrap content in a section */\n  sectioned?: boolean;\n  /** Allow popover to stretch to the full width of its activator */\n  fullWidth?: boolean;\n  /** Allow popover to stretch to fit content vertically */\n  fullHeight?: boolean;\n  /** Allow popover content to determine the overlay width and height */\n  fluidContent?: boolean;\n  /** Remains in a fixed position */\n  fixed?: boolean;\n  /** Used to illustrate the type of popover element */\n  ariaHaspopup?: AriaAttributes['aria-haspopup'];\n  /** Allow the popover overlay to be hidden when printing */\n  hideOnPrint?: boolean;\n  /** Callback when popover is closed */\n  onClose(source: PopoverCloseSource): void;\n  /**\n   * The preferred auto focus target defaulting to the popover container\n   * @default 'container'\n   */\n  autofocusTarget?: PopoverAutofocusTarget;\n  /** Prevents closing the popover when other overlays are clicked */\n  preventCloseOnChildOverlayClick?: boolean;\n  /**\n   * Prevents page scrolling when the end of the scrollable Popover overlay content is reached - applied to Pane subcomponent\n   * @default false\n   */\n  captureOverscroll?: boolean;\n}"
    }
  },
  "PopoverPublicAPI": {
    "polaris-react/src/components/Popover/Popover.tsx": {
      "filePath": "polaris-react/src/components/Popover/Popover.tsx",
      "name": "PopoverPublicAPI",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/Popover.tsx",
          "syntaxKind": "MethodSignature",
          "name": "forceUpdatePosition",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface PopoverPublicAPI {\n  forceUpdatePosition(): void;\n}"
    }
  },
  "PortalProps": {
    "polaris-react/src/components/Portal/Portal.tsx": {
      "filePath": "polaris-react/src/components/Portal/Portal.tsx",
      "name": "PortalProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Portal/Portal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Portal/Portal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "idPrefix",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Portal/Portal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onPortalCreated",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PortalProps {\n  children?: React.ReactNode;\n  idPrefix?: string;\n  onPortalCreated?(): void;\n}"
    }
  },
  "PortalsManagerProps": {
    "polaris-react/src/components/PortalsManager/PortalsManager.tsx": {
      "filePath": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
      "name": "PortalsManagerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
          "syntaxKind": "PropertySignature",
          "name": "container",
          "value": "HTMLDivElement",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PortalsManagerProps {\n  children: React.ReactNode;\n  container?: PortalsContainerElement;\n}"
    }
  },
  "Positioning": {
    "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx": {
      "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Positioning",
      "value": "'above' | 'below'",
      "description": ""
    }
  },
  "OverlayDetails": {
    "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx": {
      "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
      "name": "OverlayDetails",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "left",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "right",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "desiredHeight",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "positioning",
          "value": "Positioning",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "measuring",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activatorRect",
          "value": "Rect",
          "description": ""
        }
      ],
      "value": "interface OverlayDetails {\n  left?: number;\n  right?: number;\n  desiredHeight: number;\n  positioning: Positioning;\n  measuring: boolean;\n  activatorRect: Rect;\n}"
    }
  },
  "PositionedOverlayProps": {
    "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx": {
      "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
      "name": "PositionedOverlayProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "HTMLElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferInputActivator",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredAlignment",
          "value": "PreferredAlignment",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preventInteraction",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "classNames",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndexOverride",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "MethodSignature",
          "name": "render",
          "value": "(overlayDetails: OverlayDetails) => React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onScrollOut",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PositionedOverlayProps {\n  active: boolean;\n  activator: HTMLElement;\n  preferInputActivator?: boolean;\n  preferredPosition?: PreferredPosition;\n  preferredAlignment?: PreferredAlignment;\n  fullWidth?: boolean;\n  fixed?: boolean;\n  preventInteraction?: boolean;\n  classNames?: string;\n  zIndexOverride?: number;\n  render(overlayDetails: OverlayDetails): React.ReactNode;\n  onScrollOut?(): void;\n}"
    }
  },
  "ProgressBarProps": {
    "polaris-react/src/components/ProgressBar/ProgressBar.tsx": {
      "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
      "name": "ProgressBarProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "progress",
          "value": "number",
          "description": "The progression of certain tasks",
          "isOptional": true,
          "defaultValue": "0"
        },
        {
          "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of progressbar",
          "isOptional": true,
          "defaultValue": "'medium'"
        },
        {
          "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "Color",
          "description": "Color of progressbar",
          "isOptional": true,
          "defaultValue": "'highlight'"
        },
        {
          "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "animated",
          "value": "boolean",
          "description": "Whether the fill animation is triggered",
          "isOptional": true,
          "defaultValue": "'true'"
        },
        {
          "filePath": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaLabelledBy",
          "value": "string",
          "description": "Id (ids) of element (elements) that describes progressbar",
          "isOptional": true
        }
      ],
      "value": "export interface ProgressBarProps {\n  /**\n   * The progression of certain tasks\n   * @default 0\n   */\n  progress?: number;\n  /**\n   * Size of progressbar\n   * @default 'medium'\n   */\n  size?: Size;\n  /**\n   * Color of progressbar\n   * @default 'highlight'\n   */\n  color?: Color;\n  /**\n   * Whether the fill animation is triggered\n   * @default 'true'\n   */\n  animated?: boolean;\n  /**\n   * Id (ids) of element (elements) that describes progressbar\n   */\n  ariaLabelledBy?: string;\n}"
    }
  },
  "RadioButtonProps": {
    "polaris-react/src/components/RadioButton/RadioButton.tsx": {
      "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
      "name": "RadioButtonProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaDescribedBy",
          "value": "string",
          "description": "Indicates the ID of the element that describes the the radio button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the radio button"
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "checked",
          "value": "boolean",
          "description": "Radio button is selected",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional text to aid in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Name for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Value for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(newValue: boolean, id: string) => void",
          "description": "Callback when the radio button is toggled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when radio button is focussed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        }
      ],
      "value": "export interface RadioButtonProps {\n  /** Indicates the ID of the element that describes the the radio button*/\n  ariaDescribedBy?: string;\n  /** Label for the radio button */\n  label: React.ReactNode;\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Radio button is selected */\n  checked?: boolean;\n  /** Additional text to aid in use */\n  helpText?: React.ReactNode;\n  /** Disable input */\n  disabled?: boolean;\n  /** ID for form input */\n  id?: string;\n  /** Name for form input */\n  name?: string;\n  /** Value for form input */\n  value?: string;\n  /** Callback when the radio button is toggled */\n  onChange?(newValue: boolean, id: string): void;\n  /** Callback when radio button is focussed */\n  onFocus?(): void;\n  /** Callback when focus is removed */\n  onBlur?(): void;\n}"
    }
  },
  "BaseProps": {
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "name": "BaseProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers used for item link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Individual item name used by various text labels",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the item onClick controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "Unique identifier for the item"
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "React.ReactElement<ThumbnailProps | AvatarProps>",
          "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "persistActions",
          "value": "boolean",
          "description": "Makes the shortcut actions always visible",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shortcutActions",
          "value": "DisableableAction[]",
          "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortOrder",
          "value": "number",
          "description": "The order the item is rendered",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "URL for the resource’s details page (required unless onClick is provided)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Allows url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(id?: string) => void",
          "description": "Callback when clicked (required if url is omitted)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content for the details area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlignment",
          "value": "Alignment",
          "description": "Adjust vertical alignment of elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dataHref",
          "value": "string",
          "description": "Prefetched url attribute to bind to the main element being returned",
          "isOptional": true
        }
      ],
      "value": "interface BaseProps {\n  /** Visually hidden text for screen readers used for item link*/\n  accessibilityLabel?: string;\n  /** Individual item name used by various text labels */\n  name?: string;\n  /** Id of the element the item onClick controls */\n  ariaControls?: string;\n  /** Tells screen reader the controlled element is expanded */\n  ariaExpanded?: boolean;\n  /** Unique identifier for the item */\n  id: string;\n  /** Content for the media area at the left of the item, usually an Avatar or Thumbnail */\n  media?: React.ReactElement<AvatarProps | ThumbnailProps>;\n  /** Makes the shortcut actions always visible */\n  persistActions?: boolean;\n  /** 1 or 2 shortcut actions; must be available on the page linked to by url */\n  shortcutActions?: DisableableAction[];\n  /** The order the item is rendered */\n  sortOrder?: number;\n  /** URL for the resource’s details page (required unless onClick is provided) */\n  url?: string;\n  /** Allows url to open in a new tab */\n  external?: boolean;\n  /** Callback when clicked (required if url is omitted) */\n  onClick?(id?: string): void;\n  /** Content for the details area */\n  children?: React.ReactNode;\n  /** Adjust vertical alignment of elements */\n  verticalAlignment?: Alignment;\n  /** Prefetched url attribute to bind to the main element being returned */\n  dataHref?: string;\n}"
    }
  },
  "PropsWithUrl": {
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "name": "PropsWithUrl",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "URL for the resource’s details page (required unless onClick is provided)"
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(id?: string) => void",
          "description": "Callback when clicked (required if url is omitted)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers used for item link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Individual item name used by various text labels",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the item onClick controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "Unique identifier for the item"
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "React.ReactElement<ThumbnailProps | AvatarProps>",
          "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "persistActions",
          "value": "boolean",
          "description": "Makes the shortcut actions always visible",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shortcutActions",
          "value": "DisableableAction[]",
          "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortOrder",
          "value": "number",
          "description": "The order the item is rendered",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Allows url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content for the details area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlignment",
          "value": "Alignment",
          "description": "Adjust vertical alignment of elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dataHref",
          "value": "string",
          "description": "Prefetched url attribute to bind to the main element being returned",
          "isOptional": true
        }
      ],
      "value": "interface PropsWithUrl extends BaseProps {\n  url: string;\n  onClick?(id?: string): void;\n}"
    }
  },
  "PropsWithClick": {
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "name": "PropsWithClick",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "URL for the resource’s details page (required unless onClick is provided)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(id?: string) => void",
          "description": "Callback when clicked (required if url is omitted)"
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers used for item link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Individual item name used by various text labels",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the item onClick controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "Unique identifier for the item"
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "React.ReactElement<ThumbnailProps | AvatarProps>",
          "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "persistActions",
          "value": "boolean",
          "description": "Makes the shortcut actions always visible",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shortcutActions",
          "value": "DisableableAction[]",
          "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortOrder",
          "value": "number",
          "description": "The order the item is rendered",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Allows url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content for the details area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlignment",
          "value": "Alignment",
          "description": "Adjust vertical alignment of elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dataHref",
          "value": "string",
          "description": "Prefetched url attribute to bind to the main element being returned",
          "isOptional": true
        }
      ],
      "value": "interface PropsWithClick extends BaseProps {\n  url?: string;\n  onClick(id?: string): void;\n}"
    }
  },
  "ResourceItemProps": {
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ResourceItemProps",
      "value": "PropsWithUrl | PropsWithClick",
      "description": ""
    }
  },
  "PropsFromWrapper": {
    "polaris-react/src/components/ResourceItem/ResourceItem.tsx": {
      "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
      "name": "PropsFromWrapper",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "breakpoints",
          "value": "BreakpointsMatches",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "context",
          "value": "React.ContextType<Context<ResourceListContextType>>",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "syntaxKind": "PropertySignature",
          "name": "i18n",
          "value": "I18n",
          "description": ""
        }
      ],
      "value": "interface PropsFromWrapper {\n  breakpoints?: BreakpointsMatches;\n  context: React.ContextType<typeof ResourceListContext>;\n  i18n: ReturnType<typeof useI18n>;\n}"
    }
  },
  "ScrollableProps": {
    "polaris-react/src/components/Scrollable/Scrollable.tsx": {
      "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
      "name": "ScrollableProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content to display in scrollable area",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "vertical",
          "value": "boolean",
          "description": "Scroll content vertically",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "horizontal",
          "value": "boolean",
          "description": "Scroll content horizontally",
          "isOptional": true,
          "defaultValue": "true"
        },
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shadow",
          "value": "boolean",
          "description": "Add a shadow when content is scrollable",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hint",
          "value": "boolean",
          "description": "Slightly hints content upon mounting when scrollable",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focusable",
          "value": "boolean",
          "description": "Adds a tabIndex to scrollable when children are not focusable",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onScrolledToBottom",
          "value": "() => void",
          "description": "Called when scrolled to the bottom of the scroll area",
          "isOptional": true
        }
      ],
      "value": "export interface ScrollableProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content to display in scrollable area */\n  children?: React.ReactNode;\n  /** Scroll content vertically\n   * @default true\n   * */\n  vertical?: boolean;\n  /** Scroll content horizontally\n   * @default true\n   * */\n  horizontal?: boolean;\n  /** Add a shadow when content is scrollable */\n  shadow?: boolean;\n  /** Slightly hints content upon mounting when scrollable */\n  hint?: boolean;\n  /** Adds a tabIndex to scrollable when children are not focusable */\n  focusable?: boolean;\n  /** Called when scrolled to the bottom of the scroll area */\n  onScrolledToBottom?(): void;\n}"
    }
  },
  "ResourceListItemData": {
    "polaris-react/src/components/ResourceList/ResourceList.tsx": {
      "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
      "name": "ResourceListItemData",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "name": "[data: string]",
          "value": "any"
        }
      ],
      "value": "interface ResourceListItemData {\n  [data: string]: any;\n}"
    }
  },
  "ResourceListProps": {
    "polaris-react/src/components/ResourceList/ResourceList.tsx": {
      "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
      "name": "ResourceListProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "TItemType[]",
          "description": "Item data; each item is passed to renderItem"
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "filterControl",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "emptyState",
          "value": "React.ReactNode",
          "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "emptySearchState",
          "value": "React.ReactNode",
          "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
          "isOptional": true,
          "defaultValue": "EmptySearchResult"
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "resourceName",
          "value": "{ singular: string; plural: string; }",
          "description": "Name of the resource, such as customers or products",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "promotedBulkActions",
          "value": "(MenuGroupDescriptor | BulkAction)[]",
          "description": "Up to 2 bulk actions that will be given more prominence",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "bulkActions",
          "value": "(ActionListSection | BulkAction)[]",
          "description": "Actions available on the currently selected items",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectedItems",
          "value": "ResourceListSelectedItems",
          "description": "Collection of IDs for the currently selected items",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isFiltered",
          "value": "boolean",
          "description": "Whether or not the list has filter(s) applied",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectable",
          "value": "boolean",
          "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasMoreItems",
          "value": "boolean",
          "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Overlays item list with a spinner while a background action is being performed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showHeader",
          "value": "boolean",
          "description": "Boolean to show or hide the header",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "totalItemsCount",
          "value": "number",
          "description": "Total number of resources",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortValue",
          "value": "string",
          "description": "Current value of the sort control",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortOptions",
          "value": "SelectOption[]",
          "description": "Collection of sort options to choose from",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alternateTool",
          "value": "React.ReactNode",
          "description": "ReactNode to display instead of the sort control",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "PropertySignature",
          "name": "headerContent",
          "value": "string",
          "description": "Custom header text displayed above the list instead of the resource count.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSortChange",
          "value": "(selected: string, id: string) => void",
          "description": "Callback when sort option is changed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSelectionChange",
          "value": "(selectedItems: ResourceListSelectedItems) => void",
          "description": "Callback when selection is changed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "renderItem",
          "value": "(item: TItemType, id: string, index: number) => React.ReactNode",
          "description": "Function to render each list item, must return a ResourceItem component"
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "idForItem",
          "value": "(item: TItemType, index: number) => string",
          "description": "Function to customize the unique ID for each item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "syntaxKind": "MethodSignature",
          "name": "resolveItemId",
          "value": "(item: TItemType) => string",
          "description": "Function to resolve the ids of items",
          "isOptional": true
        }
      ],
      "value": "export interface ResourceListProps<\n  TItemType extends ResourceListItemData = ResourceListItemData,\n> {\n  /** Item data; each item is passed to renderItem */\n  items: TItemType[];\n  filterControl?: React.ReactNode;\n  /** The markup to display when no resources exist yet. Renders when set and items is empty. */\n  emptyState?: React.ReactNode;\n  /** The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.\n   * @default EmptySearchResult\n   */\n  emptySearchState?: React.ReactNode;\n  /** Name of the resource, such as customers or products */\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  /** Up to 2 bulk actions that will be given more prominence */\n  promotedBulkActions?: BulkActionsProps['promotedActions'];\n  /** Actions available on the currently selected items */\n  bulkActions?: BulkActionsProps['actions'];\n  /** Collection of IDs for the currently selected items */\n  selectedItems?: ResourceListSelectedItems;\n  /** Whether or not the list has filter(s) applied */\n  isFiltered?: boolean;\n  /** Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. **/\n  selectable?: boolean;\n  /** Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component. */\n  hasMoreItems?: boolean;\n  /** Overlays item list with a spinner while a background action is being performed */\n  loading?: boolean;\n  /** Boolean to show or hide the header */\n  showHeader?: boolean;\n  /** Total number of resources */\n  totalItemsCount?: number;\n  /** Current value of the sort control */\n  sortValue?: string;\n  /** Collection of sort options to choose from */\n  sortOptions?: SelectOption[];\n  /** ReactNode to display instead of the sort control */\n  alternateTool?: React.ReactNode;\n  /** Custom header text displayed above the list instead of the resource count. */\n  headerContent?: string;\n  /** Callback when sort option is changed */\n  onSortChange?(selected: string, id: string): void;\n  /** Callback when selection is changed */\n  onSelectionChange?(selectedItems: ResourceListSelectedItems): void;\n  /** Function to render each list item, must return a ResourceItem component */\n  renderItem(item: TItemType, id: string, index: number): React.ReactNode;\n  /** Function to customize the unique ID for each item */\n  idForItem?(item: TItemType, index: number): string;\n  /** Function to resolve the ids of items */\n  resolveItemId?(item: TItemType): string;\n}"
    }
  },
  "StrictOption": {
    "polaris-react/src/components/Select/Select.tsx": {
      "filePath": "polaris-react/src/components/Select/Select.tsx",
      "name": "StrictOption",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Machine value of the option; this is the value passed to `onChange`"
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "Human-readable text for the option"
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Option will be visible, but not selectable",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "React.ReactNode",
          "description": "Element to display to the left of the option label. Does not show in the dropdown.",
          "isOptional": true
        }
      ],
      "value": "interface StrictOption {\n  /** Machine value of the option; this is the value passed to `onChange` */\n  value: string;\n  /** Human-readable text for the option */\n  label: string;\n  /** Option will be visible, but not selectable */\n  disabled?: boolean;\n  /** Element to display to the left of the option label. Does not show in the dropdown. */\n  prefix?: React.ReactNode;\n}"
    }
  },
  "HideableStrictOption": {
    "polaris-react/src/components/Select/Select.tsx": {
      "filePath": "polaris-react/src/components/Select/Select.tsx",
      "name": "HideableStrictOption",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Machine value of the option; this is the value passed to `onChange`"
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "Human-readable text for the option"
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Option will be visible, but not selectable",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "React.ReactNode",
          "description": "Element to display to the left of the option label. Does not show in the dropdown.",
          "isOptional": true
        }
      ],
      "value": "interface HideableStrictOption extends StrictOption {\n  hidden?: boolean;\n}"
    }
  },
  "StrictGroup": {
    "polaris-react/src/components/Select/Select.tsx": {
      "filePath": "polaris-react/src/components/Select/Select.tsx",
      "name": "StrictGroup",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Title for the group"
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "options",
          "value": "StrictOption[]",
          "description": "List of options"
        }
      ],
      "value": "interface StrictGroup {\n  /** Title for the group */\n  title: string;\n  /** List of options */\n  options: StrictOption[];\n}"
    }
  },
  "SelectOption": {
    "polaris-react/src/components/Select/Select.tsx": {
      "filePath": "polaris-react/src/components/Select/Select.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "SelectOption",
      "value": "string | StrictOption",
      "description": ""
    }
  },
  "SelectGroup": {
    "polaris-react/src/components/Select/Select.tsx": {
      "filePath": "polaris-react/src/components/Select/Select.tsx",
      "name": "SelectGroup",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "options",
          "value": "SelectOption[]",
          "description": ""
        }
      ],
      "value": "export interface SelectGroup {\n  title: string;\n  options: SelectOption[];\n}"
    }
  },
  "SelectProps": {
    "polaris-react/src/components/Select/Select.tsx": {
      "filePath": "polaris-react/src/components/Select/Select.tsx",
      "name": "SelectProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "options",
          "value": "(SelectOption | SelectGroup)[]",
          "description": "List of options or option groups to choose from",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": "Label for the select"
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelInline",
          "value": "boolean",
          "description": "Show the label to the left of the value, inside the control",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional text to aide in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "placeholder",
          "value": "string",
          "description": "Example text to display as placeholder",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "Name for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Value for form input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(selected: string, id: string) => void",
          "description": "Callback when selection is changed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when select is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Select/Select.tsx",
          "syntaxKind": "PropertySignature",
          "name": "requiredIndicator",
          "value": "boolean",
          "description": "Visual required indicator, add an asterisk to label",
          "isOptional": true
        }
      ],
      "value": "export interface SelectProps {\n  /** List of options or option groups to choose from */\n  options?: (SelectOption | SelectGroup)[];\n  /** Label for the select */\n  label: React.ReactNode;\n  /** Adds an action to the label */\n  labelAction?: LabelledProps['action'];\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Show the label to the left of the value, inside the control */\n  labelInline?: boolean;\n  /** Disable input */\n  disabled?: boolean;\n  /** Additional text to aide in use */\n  helpText?: React.ReactNode;\n  /** Example text to display as placeholder */\n  placeholder?: string;\n  /** ID for form input */\n  id?: string;\n  /** Name for form input */\n  name?: string;\n  /** Value for form input */\n  value?: string;\n  /** Display an error state */\n  error?: Error | boolean;\n  /** Callback when selection is changed */\n  onChange?(selected: string, id: string): void;\n  /** Callback when select is focused */\n  onFocus?(): void;\n  /** Callback when focus is removed */\n  onBlur?(): void;\n  /** Visual required indicator, add an asterisk to label */\n  requiredIndicator?: boolean;\n}"
    }
  },
  "AriaLive": {
    "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx": {
      "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "AriaLive",
      "value": "'off' | 'polite' | undefined",
      "description": ""
    }
  },
  "SelectAllActionsProps": {
    "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx": {
      "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
      "name": "SelectAllActionsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "Label for the bulk actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean | \"indeterminate\"",
          "description": "State of the bulk actions checkbox",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectMode",
          "value": "boolean",
          "description": "List is in a selectable state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paginatedSelectAllText",
          "value": "string",
          "description": "Text to select all across pages",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "paginatedSelectAllAction",
          "value": "Action",
          "description": "Action for selecting all across pages",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables bulk actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onToggleAll",
          "value": "() => void",
          "description": "Callback when the select all checkbox is clicked",
          "isOptional": true
        }
      ],
      "value": "export interface SelectAllActionsProps {\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /** Label for the bulk actions */\n  label?: string;\n  /** State of the bulk actions checkbox */\n  selected?: boolean | 'indeterminate';\n  /** List is in a selectable state */\n  selectMode?: boolean;\n  /** Text to select all across pages */\n  paginatedSelectAllText?: string;\n  /** Action for selecting all across pages */\n  paginatedSelectAllAction?: Action;\n  /** Disables bulk actions */\n  disabled?: boolean;\n  /** Callback when the select all checkbox is clicked */\n  onToggleAll?(): void;\n}"
    }
  },
  "SettingActionProps": {
    "polaris-react/src/components/SettingAction/SettingAction.tsx": {
      "filePath": "polaris-react/src/components/SettingAction/SettingAction.tsx",
      "name": "SettingActionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SettingAction/SettingAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SettingAction/SettingAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SettingActionProps {\n  action?: React.ReactNode;\n  children?: React.ReactNode;\n}"
    }
  },
  "SettingToggleProps": {
    "polaris-react/src/components/SettingToggle/SettingToggle.tsx": {
      "filePath": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
      "name": "SettingToggleProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Inner content of the card",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "ComplexAction",
          "description": "Card header actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
          "syntaxKind": "PropertySignature",
          "name": "enabled",
          "value": "boolean",
          "description": "Sets toggle state to activated or deactivated",
          "isOptional": true
        }
      ],
      "value": "export interface SettingToggleProps {\n  /** Inner content of the card */\n  children?: React.ReactNode;\n  /** Card header actions */\n  action?: ComplexAction;\n  /** Sets toggle state to activated or deactivated */\n  enabled?: boolean;\n}"
    }
  },
  "SheetProps": {
    "polaris-react/src/components/Sheet/Sheet.tsx": {
      "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
      "name": "SheetProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "Whether or not the sheet is open"
        },
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The child elements to render in the sheet"
        },
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": "Callback when the backdrop is clicked or `ESC` is pressed"
        },
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onEntered",
          "value": "() => void",
          "description": "Callback when the sheet has completed entering",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onExit",
          "value": "() => void",
          "description": "Callback when the sheet has started to exit",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "ARIA label for sheet"
        },
        {
          "filePath": "polaris-react/src/components/Sheet/Sheet.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "any",
          "description": "The element or the RefObject that activates the Sheet",
          "isOptional": true
        }
      ],
      "value": "export interface SheetProps {\n  /** Whether or not the sheet is open */\n  open: boolean;\n  /** The child elements to render in the sheet */\n  children: React.ReactNode;\n  /** Callback when the backdrop is clicked or `ESC` is pressed */\n  onClose(): void;\n  /** Callback when the sheet has completed entering */\n  onEntered?(): void;\n  /** Callback when the sheet has started to exit */\n  onExit?(): void;\n  /** ARIA label for sheet */\n  accessibilityLabel: string;\n  /** The element or the RefObject that activates the Sheet */\n  activator?: React.RefObject<HTMLElement> | React.ReactElement;\n}"
    }
  },
  "SkeletonBodyTextProps": {
    "polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx": {
      "filePath": "polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx",
      "name": "SkeletonBodyTextProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lines",
          "value": "number",
          "description": "Number of lines to display",
          "isOptional": true,
          "defaultValue": "3"
        }
      ],
      "value": "export interface SkeletonBodyTextProps {\n  /**\n   * Number of lines to display\n   * @default 3\n   */\n  lines?: number;\n}"
    }
  },
  "SkeletonDisplayTextProps": {
    "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx": {
      "filePath": "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx",
      "name": "SkeletonDisplayTextProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of the text",
          "isOptional": true,
          "defaultValue": "'medium'"
        }
      ],
      "value": "export interface SkeletonDisplayTextProps {\n  /**\n   * Size of the text\n   * @default 'medium'\n   */\n  size?: Size;\n}"
    }
  },
  "SkeletonPageProps": {
    "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx": {
      "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
      "name": "SkeletonPageProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Page title, in large type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Remove the normal max-width on the page",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "syntaxKind": "PropertySignature",
          "name": "narrowWidth",
          "value": "boolean",
          "description": "Decreases the maximum layout width. Intended for single-column layouts",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "boolean",
          "description": "Shows a skeleton over the primary action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "syntaxKind": "PropertySignature",
          "name": "breadcrumbs",
          "value": "boolean",
          "description": "Shows a skeleton over the breadcrumb",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The child elements to render in the skeleton page.",
          "isOptional": true
        }
      ],
      "value": "export interface SkeletonPageProps {\n  /** Page title, in large type */\n  title?: string;\n  /** Remove the normal max-width on the page */\n  fullWidth?: boolean;\n  /** Decreases the maximum layout width. Intended for single-column layouts */\n  narrowWidth?: boolean;\n  /** Shows a skeleton over the primary action */\n  primaryAction?: boolean;\n  /** Shows a skeleton over the breadcrumb */\n  breadcrumbs?: boolean;\n  /** The child elements to render in the skeleton page. */\n  children?: React.ReactNode;\n}"
    }
  },
  "SkeletonTabsProps": {
    "polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx": {
      "filePath": "polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx",
      "name": "SkeletonTabsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "count",
          "value": "number",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SkeletonTabsProps {\n  count?: number;\n}"
    }
  },
  "SkeletonThumbnailProps": {
    "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx": {
      "filePath": "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx",
      "name": "SkeletonThumbnailProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of the thumbnail",
          "isOptional": true,
          "defaultValue": "'medium'"
        }
      ],
      "value": "export interface SkeletonThumbnailProps {\n  /**\n   * Size of the thumbnail\n   * @default 'medium'\n   */\n  size?: Size;\n}"
    }
  },
  "SpinnerProps": {
    "polaris-react/src/components/Spinner/Spinner.tsx": {
      "filePath": "polaris-react/src/components/Spinner/Spinner.tsx",
      "name": "SpinnerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Spinner/Spinner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of spinner",
          "isOptional": true,
          "defaultValue": "'large'"
        },
        {
          "filePath": "polaris-react/src/components/Spinner/Spinner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Accessible label for the spinner",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Spinner/Spinner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasFocusableParent",
          "value": "boolean",
          "description": "Allows the component to apply the correct accessibility roles based on focus",
          "isOptional": true
        }
      ],
      "value": "export interface SpinnerProps {\n  /**\n   * Size of spinner\n   * @default 'large'\n   */\n  size?: Size;\n  /** Accessible label for the spinner */\n  accessibilityLabel?: string;\n  /** Allows the component to apply the correct accessibility roles based on focus */\n  hasFocusableParent?: boolean;\n}"
    },
    "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx": {
      "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
      "name": "SpinnerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onChange",
          "value": "HandleStepFn",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(event: React.MouseEvent) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseDown",
          "value": "(onChange: HandleStepFn) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseUp",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "(event: React.FocusEvent) => void",
          "description": ""
        }
      ],
      "value": "export interface SpinnerProps {\n  onChange: HandleStepFn;\n  onClick?(event: React.MouseEvent): void;\n  onMouseDown(onChange: HandleStepFn): void;\n  onMouseUp(): void;\n  onBlur(event: React.FocusEvent): void;\n}"
    }
  },
  "StackProps": {
    "polaris-react/src/components/Stack/Stack.tsx": {
      "filePath": "polaris-react/src/components/Stack/Stack.tsx",
      "name": "StackProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Stack/Stack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Elements to display inside stack",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Stack/Stack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wrap",
          "value": "boolean",
          "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Stack/Stack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "vertical",
          "value": "boolean",
          "description": "Stack the elements vertically",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Stack/Stack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spacing",
          "value": "Spacing",
          "description": "Adjust spacing between elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Stack/Stack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alignment",
          "value": "Alignment",
          "description": "Adjust vertical alignment of elements",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Stack/Stack.tsx",
          "syntaxKind": "PropertySignature",
          "name": "distribution",
          "value": "Distribution",
          "description": "Adjust horizontal alignment of elements",
          "isOptional": true
        }
      ],
      "value": "export interface StackProps {\n  /** Elements to display inside stack */\n  children?: React.ReactNode;\n  /** Wrap stack elements to additional rows as needed on small screens (Defaults to true) */\n  wrap?: boolean;\n  /** Stack the elements vertically */\n  vertical?: boolean;\n  /** Adjust spacing between elements */\n  spacing?: Spacing;\n  /** Adjust vertical alignment of elements */\n  alignment?: Alignment;\n  /** Adjust horizontal alignment of elements */\n  distribution?: Distribution;\n}"
    }
  },
  "StickyProps": {
    "polaris-react/src/components/Sticky/Sticky.tsx": {
      "filePath": "polaris-react/src/components/Sticky/Sticky.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "StickyProps",
      "value": "{\n  /** Element outlining the fixed position boundaries */\n  boundingElement?: HTMLElement | null;\n  /** Offset vertical spacing from the top of the scrollable container */\n  offset?: boolean;\n  /** Should the element remain in a fixed position when the layout is stacked (smaller screens)  */\n  disableWhenStacked?: boolean;\n  /** Callback run when sticky header is added or removed  */\n  onStickyChange?: (isSticky: boolean) => void;\n} & (\n  | {children: React.ReactNode}\n  | {children(isSticky: boolean): React.ReactNode}\n)",
      "description": ""
    }
  },
  "TabsProps": {
    "polaris-react/src/components/Tabs/Tabs.tsx": {
      "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
      "name": "TabsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content to display in tabs",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "number",
          "description": "Index of selected tab"
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabs",
          "value": "TabDescriptor[]",
          "description": "List of tabs"
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fitted",
          "value": "boolean",
          "description": "Fit tabs to container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disclosureText",
          "value": "string",
          "description": "Text to replace disclosures horizontal dots",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/Tabs.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSelect",
          "value": "(selectedTabIndex: number) => void",
          "description": "Callback when tab is selected",
          "isOptional": true
        }
      ],
      "value": "export interface TabsProps {\n  /** Content to display in tabs */\n  children?: React.ReactNode;\n  /** Index of selected tab */\n  selected: number;\n  /** List of tabs */\n  tabs: TabDescriptor[];\n  /** Fit tabs to container */\n  fitted?: boolean;\n  /** Text to replace disclosures horizontal dots */\n  disclosureText?: string;\n  /** Callback when tab is selected */\n  onSelect?(selectedTabIndex: number): void;\n}"
    }
  },
  "TagProps": {
    "polaris-react/src/components/Tag/Tag.tsx": {
      "filePath": "polaris-react/src/components/Tag/Tag.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TagProps",
      "value": "NonMutuallyExclusiveProps & (\n    | {onClick?(): void; onRemove?: undefined; url?: undefined}\n    | {onClick?: undefined; onRemove?(): void; url?: string}\n  )",
      "description": ""
    }
  },
  "Variant": {
    "polaris-react/src/components/Text/Text.tsx": {
      "filePath": "polaris-react/src/components/Text/Text.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Variant",
      "value": "'headingXs' | 'headingSm' | 'headingMd' | 'headingLg' | 'headingXl' | 'heading2xl' | 'heading3xl' | 'heading4xl' | 'bodySm' | 'bodyMd' | 'bodyLg'",
      "description": ""
    }
  },
  "FontWeight": {
    "polaris-react/src/components/Text/Text.tsx": {
      "filePath": "polaris-react/src/components/Text/Text.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "FontWeight",
      "value": "'regular' | 'medium' | 'semibold' | 'bold'",
      "description": ""
    }
  },
  "TextProps": {
    "polaris-react/src/components/Text/Text.tsx": {
      "filePath": "polaris-react/src/components/Text/Text.tsx",
      "name": "TextProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alignment",
          "value": "Alignment",
          "description": "Adjust horizontal alignment of text",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "as",
          "value": "Element",
          "description": "The element type"
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "breakWord",
          "value": "boolean",
          "description": "Prevent text from overflowing",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "Text to display"
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "Color",
          "description": "Adjust color of text",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fontWeight",
          "value": "FontWeight",
          "description": "Adjust weight of text",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "HTML id attribute",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "truncate",
          "value": "boolean",
          "description": "Truncate text overflow with ellipsis",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "variant",
          "value": "Variant",
          "description": "Typographic style of text"
        },
        {
          "filePath": "polaris-react/src/components/Text/Text.tsx",
          "syntaxKind": "PropertySignature",
          "name": "visuallyHidden",
          "value": "boolean",
          "description": "Visually hide the text",
          "isOptional": true
        }
      ],
      "value": "export interface TextProps {\n  /** Adjust horizontal alignment of text */\n  alignment?: Alignment;\n  /** The element type */\n  as: Element;\n  /** Prevent text from overflowing */\n  breakWord?: boolean;\n  /** Text to display */\n  children: ReactNode;\n  /** Adjust color of text */\n  color?: Color;\n  /** Adjust weight of text */\n  fontWeight?: FontWeight;\n  /** HTML id attribute */\n  id?: string;\n  /** Truncate text overflow with ellipsis */\n  truncate?: boolean;\n  /** Typographic style of text */\n  variant: Variant;\n  /** Visually hide the text */\n  visuallyHidden?: boolean;\n}"
    }
  },
  "TextContainerProps": {
    "polaris-react/src/components/TextContainer/TextContainer.tsx": {
      "filePath": "polaris-react/src/components/TextContainer/TextContainer.tsx",
      "name": "TextContainerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextContainer/TextContainer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spacing",
          "value": "Spacing",
          "description": "The amount of vertical spacing children will get between them",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextContainer/TextContainer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to render in the text container.",
          "isOptional": true
        }
      ],
      "value": "export interface TextContainerProps {\n  /** The amount of vertical spacing children will get between them */\n  spacing?: Spacing;\n  /** The content to render in the text container. */\n  children?: React.ReactNode;\n}"
    }
  },
  "InputMode": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "InputMode",
      "value": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'",
      "description": ""
    }
  },
  "SelectSuggestion": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "name": "SelectSuggestion",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suggestion",
          "value": "string",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface SelectSuggestion {\n  suggestion?: string;\n}"
    }
  },
  "SelectTextOnFocus": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "name": "SelectTextOnFocus",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectTextOnFocus",
          "value": "true",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface SelectTextOnFocus {\n  selectTextOnFocus?: true;\n}"
    }
  },
  "Readonly": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "name": "Readonly",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "readonly",
          "value": "true",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface Readonly {\n  readonly?: true;\n}"
    }
  },
  "Disabled": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "name": "Disabled",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "true",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface Disabled {\n  disabled?: true;\n}"
    }
  },
  "Interactive": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "name": "Interactive",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/TextField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: string, id: string) => void",
          "description": ""
        }
      ],
      "value": "interface Interactive {\n  onChange(value: string, id: string): void;\n}"
    }
  },
  "MutuallyExclusiveSelectionProps": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MutuallyExclusiveSelectionProps",
      "value": "SelectSuggestion | SelectTextOnFocus",
      "description": ""
    }
  },
  "MutuallyExclusiveInteractionProps": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MutuallyExclusiveInteractionProps",
      "value": "Interactive | Readonly | Disabled",
      "description": ""
    }
  },
  "TextFieldProps": {
    "polaris-react/src/components/TextField/TextField.tsx": {
      "filePath": "polaris-react/src/components/TextField/TextField.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TextFieldProps",
      "value": "NonMutuallyExclusiveProps & MutuallyExclusiveInteractionProps & MutuallyExclusiveSelectionProps",
      "description": ""
    }
  },
  "ThumbnailProps": {
    "polaris-react/src/components/Thumbnail/Thumbnail.tsx": {
      "filePath": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
      "name": "ThumbnailProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "Size",
          "description": "Size of thumbnail",
          "isOptional": true,
          "defaultValue": "'medium'"
        },
        {
          "filePath": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "source",
          "value": "any",
          "description": "URL for the image"
        },
        {
          "filePath": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alt",
          "value": "string",
          "description": "Alt text for the thumbnail image"
        },
        {
          "filePath": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "transparent",
          "value": "boolean",
          "description": "Transparent background",
          "isOptional": true
        }
      ],
      "value": "export interface ThumbnailProps {\n  /**\n   * Size of thumbnail\n   * @default 'medium'\n   */\n  size?: Size;\n  /** URL for the image */\n  source: string | React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n  /** Alt text for the thumbnail image */\n  alt: string;\n  /** Transparent background */\n  transparent?: boolean;\n}"
    }
  },
  "Width": {
    "polaris-react/src/components/Tooltip/Tooltip.tsx": {
      "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Width",
      "value": "'default' | 'wide'",
      "description": ""
    }
  },
  "Padding": {
    "polaris-react/src/components/Tooltip/Tooltip.tsx": {
      "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Padding",
      "value": "'default' | Extract<SpacingSpaceScale, '4'>",
      "description": ""
    }
  },
  "BorderRadius": {
    "polaris-react/src/components/Tooltip/Tooltip.tsx": {
      "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BorderRadius",
      "value": "\"1\" | \"2\"",
      "description": ""
    }
  },
  "TooltipProps": {
    "polaris-react/src/components/Tooltip/Tooltip.tsx": {
      "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
      "name": "TooltipProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The element that will activate to tooltip",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "React.ReactNode",
          "description": "The content to display within the tooltip"
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Toggle whether the tooltip is visible",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hoverDelay",
          "value": "number",
          "description": "Delay in milliseconds while hovering over an element before the tooltip is visible",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dismissOnMouseOut",
          "value": "boolean",
          "description": "Dismiss tooltip when not interacting with its children",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "The direction the tooltip tries to display",
          "isOptional": true,
          "defaultValue": "'below'"
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activatorWrapper",
          "value": "string",
          "description": "The element type to wrap the activator in",
          "isOptional": true,
          "defaultValue": "'span'"
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "Width",
          "description": "Width of content",
          "isOptional": true,
          "defaultValue": "'default'"
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "padding",
          "value": "Padding",
          "description": "Padding of content",
          "isOptional": true,
          "defaultValue": "'default'"
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadius",
          "value": "BorderRadius",
          "description": "Border radius of the tooltip",
          "isOptional": true,
          "defaultValue": "'1'"
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndexOverride",
          "value": "number",
          "description": "Override on the default z-index of 400",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasUnderline",
          "value": "boolean",
          "description": "Whether to render a dotted underline underneath the tooltip's activator",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "persistOnClick",
          "value": "boolean",
          "description": "Whether the tooltip's content remains open after clicking the activator",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onOpen",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface TooltipProps {\n  /** The element that will activate to tooltip */\n  children?: React.ReactNode;\n  /** The content to display within the tooltip */\n  content: React.ReactNode;\n  /** Toggle whether the tooltip is visible */\n  active?: boolean;\n  /** Delay in milliseconds while hovering over an element before the tooltip is visible */\n  hoverDelay?: number;\n  /** Dismiss tooltip when not interacting with its children */\n  dismissOnMouseOut?: TooltipOverlayProps['preventInteraction'];\n  /**\n   * The direction the tooltip tries to display\n   * @default 'below'\n   */\n  preferredPosition?: TooltipOverlayProps['preferredPosition'];\n  /**\n   * The element type to wrap the activator in\n   * @default 'span'\n   */\n  activatorWrapper?: string;\n  /** Visually hidden text for screen readers */\n  accessibilityLabel?: string;\n  /**\n   * Width of content\n   * @default 'default'\n   */\n  width?: Width;\n  /**\n   * Padding of content\n   * @default 'default'\n   */\n  padding?: Padding;\n  /**\n   * Border radius of the tooltip\n   * @default '1'\n   */\n  borderRadius?: BorderRadius;\n  /** Override on the default z-index of 400 */\n  zIndexOverride?: number;\n  /** Whether to render a dotted underline underneath the tooltip's activator */\n  hasUnderline?: boolean;\n  /** Whether the tooltip's content remains open after clicking the activator */\n  persistOnClick?: boolean;\n  /* Callback fired when the tooltip is activated */\n  onOpen?(): void;\n  /* Callback fired when the tooltip is dismissed */\n  onClose?(): void;\n}"
    }
  },
  "TopBarProps": {
    "polaris-react/src/components/TopBar/TopBar.tsx": {
      "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
      "name": "TopBarProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showNavigationToggle",
          "value": "boolean",
          "description": "Toggles whether or not a navigation component has been provided. Controls the presence of the mobile nav toggle button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "userMenu",
          "value": "React.ReactNode",
          "description": "Accepts a user component that is made available as a static member of the top bar component and renders as the primary menu",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryMenu",
          "value": "React.ReactNode",
          "description": "Accepts a menu component that is made available as a static member of the top bar component",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contextControl",
          "value": "React.ReactNode",
          "description": "Accepts a component that is used to help users switch between different contexts",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "searchField",
          "value": "React.ReactNode",
          "description": "Accepts a search field component that is made available as a `TextField` static member of the top bar component",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "searchResults",
          "value": "React.ReactNode",
          "description": "Accepts a search results component that is ideally composed of a card component containing a list of actionable search results",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "searchResultsVisible",
          "value": "boolean",
          "description": "A boolean property indicating whether search results are currently visible.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "searchResultsOverlayVisible",
          "value": "boolean",
          "description": "Whether or not the search results overlay has a visible backdrop",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSearchResultsDismiss",
          "value": "() => void",
          "description": "A callback function that handles the dismissal of search results",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onNavigationToggle",
          "value": "() => void",
          "description": "A callback function that handles hiding and showing mobile navigation",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/TopBar.tsx",
          "syntaxKind": "PropertySignature",
          "name": "logoSuffix",
          "value": "React.ReactNode",
          "description": "Accepts a component that is used to supplement the logo markup",
          "isOptional": true
        }
      ],
      "value": "export interface TopBarProps {\n  /** Toggles whether or not a navigation component has been provided. Controls the presence of the mobile nav toggle button */\n  showNavigationToggle?: boolean;\n  /** Accepts a user component that is made available as a static member of the top bar component and renders as the primary menu */\n  userMenu?: React.ReactNode;\n  /** Accepts a menu component that is made available as a static member of the top bar component */\n  secondaryMenu?: React.ReactNode;\n  /** Accepts a component that is used to help users switch between different contexts */\n  contextControl?: React.ReactNode;\n  /** Accepts a search field component that is made available as a `TextField` static member of the top bar component */\n  searchField?: React.ReactNode;\n  /** Accepts a search results component that is ideally composed of a card component containing a list of actionable search results */\n  searchResults?: React.ReactNode;\n  /** A boolean property indicating whether search results are currently visible. */\n  searchResultsVisible?: boolean;\n  /** Whether or not the search results overlay has a visible backdrop */\n  searchResultsOverlayVisible?: boolean;\n  /** A callback function that handles the dismissal of search results */\n  onSearchResultsDismiss?: SearchProps['onDismiss'];\n  /** A callback function that handles hiding and showing mobile navigation */\n  onNavigationToggle?(): void;\n  /** Accepts a component that is used to supplement the logo markup */\n  logoSuffix?: React.ReactNode;\n}"
    }
  },
  "TrapFocusProps": {
    "polaris-react/src/components/TrapFocus/TrapFocus.tsx": {
      "filePath": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
      "name": "TrapFocusProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
          "syntaxKind": "PropertySignature",
          "name": "trapping",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface TrapFocusProps {\n  trapping?: boolean;\n  children?: React.ReactNode;\n}"
    }
  },
  "TruncateProps": {
    "polaris-react/src/components/Truncate/Truncate.tsx": {
      "filePath": "polaris-react/src/components/Truncate/Truncate.tsx",
      "name": "TruncateProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Truncate/Truncate.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        }
      ],
      "value": "export interface TruncateProps {\n  children: React.ReactNode;\n}"
    }
  },
  "UnstyledButtonProps": {
    "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx": {
      "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
      "name": "UnstyledButtonProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "name": "[key: string]",
          "value": "any"
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "className",
          "value": "string",
          "description": "A custom class name to apply styles to button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the href attribute of a link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "download",
          "value": "string | boolean",
          "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "submit",
          "value": "boolean",
          "description": "Allows the button to submit a form",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables the button, disallowing merchant interaction",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Replaces button text with a spinner while a background action is being performed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pressed",
          "value": "boolean",
          "description": "Sets the button in a pressed state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "A valid WAI-ARIA role to define the semantic value of this element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the button controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaDescribedBy",
          "value": "string",
          "description": "Indicates the ID of the element that describes the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaChecked",
          "value": "\"false\" | \"true\"",
          "description": "Indicates the current checked state of the button when acting as a toggle or switch",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when button becomes focussed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus leaves button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyPress",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keypress event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyUp",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keyup event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyDown",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keydown event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onPointerDown",
          "value": "() => void",
          "description": "Callback when pointerdown event is being triggered",
          "isOptional": true
        }
      ],
      "value": "export interface UnstyledButtonProps extends BaseButton {\n  /** The content to display inside the button */\n  children?: React.ReactNode;\n  /** A custom class name to apply styles to button */\n  className?: string;\n  [key: string]: any;\n}"
    }
  },
  "UnstyledLinkProps": {
    "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx": {
      "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
      "name": "UnstyledLinkProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "The url to link to"
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "The content to display inside the link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Makes the link open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "download",
          "value": "string | boolean",
          "description": "Makes the browser download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accept",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "acceptCharset",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowFullScreen",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowTransparency",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alt",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "as",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "async",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoComplete",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoFocus",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoPlay",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "capture",
          "value": "boolean | \"user\" | \"environment\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "cellPadding",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "cellSpacing",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "charSet",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "challenge",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "checked",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "cite",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "classID",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "cols",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "colSpan",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "controls",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "coords",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "crossOrigin",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "data",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dateTime",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "default",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defer",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "encType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "form",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "formAction",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "formEncType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "formMethod",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "formNoValidate",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "formTarget",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "frameBorder",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "headers",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "height",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "high",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "href",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hrefLang",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "htmlFor",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "httpEquiv",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "integrity",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "keyParams",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "keyType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "kind",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "list",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loop",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "low",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "manifest",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginHeight",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "marginWidth",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "maxLength",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "mediaGroup",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "method",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "minLength",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "multiple",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "muted",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "nonce",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "noValidate",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "optimum",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pattern",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "placeholder",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "playsInline",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "poster",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preload",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "readOnly",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "required",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "reversed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rows",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rowSpan",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sandbox",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "scope",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "scoped",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "scrolling",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "seamless",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shape",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sizes",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "span",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "src",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "srcDoc",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "srcLang",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "srcSet",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "start",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "summary",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "target",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "useMap",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string | number | readonly string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "string | number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wmode",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wrap",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultChecked",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultValue",
          "value": "string | number | readonly string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suppressContentEditableWarning",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suppressHydrationWarning",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessKey",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "className",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contentEditable",
          "value": "Booleanish | \"inherit\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contextMenu",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dir",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "draggable",
          "value": "Booleanish",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lang",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "slot",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "spellCheck",
          "value": "Booleanish",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "style",
          "value": "CSSProperties",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabIndex",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "translate",
          "value": "\"yes\" | \"no\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "radioGroup",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "AriaRole",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "about",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "datatype",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "inlist",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "property",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "resource",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "typeof",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "vocab",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoCapitalize",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoCorrect",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autoSave",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "itemProp",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "itemScope",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "itemType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "itemID",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "itemRef",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "results",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "security",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "unselectable",
          "value": "\"on\" | \"off\"",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "inputMode",
          "value": "\"none\" | \"search\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "description": "Hints at the type of data that might be entered by the user while editing the element or its contents",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "is",
          "value": "string",
          "description": "Specify that a standard HTML element should behave like a defined custom built-in element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-activedescendant",
          "value": "string",
          "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-atomic",
          "value": "Booleanish",
          "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-autocomplete",
          "value": "\"none\" | \"list\" | \"inline\" | \"both\"",
          "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-busy",
          "value": "Booleanish",
          "description": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-checked",
          "value": "boolean | \"false\" | \"true\" | \"mixed\"",
          "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-colcount",
          "value": "number",
          "description": "Defines the total number of columns in a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-colindex",
          "value": "number",
          "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-colspan",
          "value": "number",
          "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-controls",
          "value": "string",
          "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-current",
          "value": "boolean | \"false\" | \"true\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-describedby",
          "value": "string",
          "description": "Identifies the element (or elements) that describes the object.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-details",
          "value": "string",
          "description": "Identifies the element that provides a detailed, extended description for the object.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-disabled",
          "value": "Booleanish",
          "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-dropeffect",
          "value": "\"none\" | \"link\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "description": "Indicates what functions can be performed when a dragged object is released on the drop target.",
          "isOptional": true,
          "deprecationMessage": "in ARIA 1.1"
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-errormessage",
          "value": "string",
          "description": "Identifies the element that provides an error message for the object.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-expanded",
          "value": "Booleanish",
          "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-flowto",
          "value": "string",
          "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-grabbed",
          "value": "Booleanish",
          "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
          "isOptional": true,
          "deprecationMessage": "in ARIA 1.1"
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-haspopup",
          "value": "boolean | \"false\" | \"true\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\"",
          "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-hidden",
          "value": "Booleanish",
          "description": "Indicates whether the element is exposed to an accessibility API.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-invalid",
          "value": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\"",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-keyshortcuts",
          "value": "string",
          "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-label",
          "value": "string",
          "description": "Defines a string value that labels the current element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-labelledby",
          "value": "string",
          "description": "Identifies the element (or elements) that labels the current element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-level",
          "value": "number",
          "description": "Defines the hierarchical level of an element within a structure.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-live",
          "value": "\"off\" | \"assertive\" | \"polite\"",
          "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-modal",
          "value": "Booleanish",
          "description": "Indicates whether an element is modal when displayed.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-multiline",
          "value": "Booleanish",
          "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-multiselectable",
          "value": "Booleanish",
          "description": "Indicates that the user may select more than one item from the current selectable descendants.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-orientation",
          "value": "\"horizontal\" | \"vertical\"",
          "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-owns",
          "value": "string",
          "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-placeholder",
          "value": "string",
          "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-posinset",
          "value": "number",
          "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-pressed",
          "value": "boolean | \"false\" | \"true\" | \"mixed\"",
          "description": "Indicates the current \"pressed\" state of toggle buttons.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-readonly",
          "value": "Booleanish",
          "description": "Indicates that the element is not editable, but is otherwise operable.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-relevant",
          "value": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-required",
          "value": "Booleanish",
          "description": "Indicates that user input is required on the element before a form may be submitted.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-roledescription",
          "value": "string",
          "description": "Defines a human-readable, author-localized description for the role of an element.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-rowcount",
          "value": "number",
          "description": "Defines the total number of rows in a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-rowindex",
          "value": "number",
          "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-rowspan",
          "value": "number",
          "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-selected",
          "value": "Booleanish",
          "description": "Indicates the current \"selected\" state of various widgets.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-setsize",
          "value": "number",
          "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-sort",
          "value": "\"ascending\" | \"descending\" | \"none\" | \"other\"",
          "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuemax",
          "value": "number",
          "description": "Defines the maximum allowed value for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuemin",
          "value": "number",
          "description": "Defines the minimum allowed value for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuenow",
          "value": "number",
          "description": "Defines the current value for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "aria-valuetext",
          "value": "string",
          "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dangerouslySetInnerHTML",
          "value": "{ __html: string; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCopy",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCopyCapture",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCut",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCutCapture",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPaste",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPasteCapture",
          "value": "ClipboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionEnd",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionEndCapture",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionStart",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionStartCapture",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionUpdate",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCompositionUpdateCapture",
          "value": "CompositionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onFocus",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onFocusCapture",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onBlur",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onBlurCapture",
          "value": "FocusEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onChange",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onChangeCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onBeforeInput",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onBeforeInputCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onInput",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onInputCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onReset",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onResetCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSubmit",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSubmitCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onInvalid",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onInvalidCapture",
          "value": "FormEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoad",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onError",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onErrorCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onKeyDown",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onKeyDownCapture",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onKeyPress",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Deprecated"
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onKeyPressCapture",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Deprecated"
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onKeyUp",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onKeyUpCapture",
          "value": "KeyboardEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAbort",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAbortCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlay",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlayCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlayThrough",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onCanPlayThroughCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDurationChange",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDurationChangeCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onEmptied",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onEmptiedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onEncrypted",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onEncryptedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onEnded",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onEndedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedData",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedDataCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedMetadata",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadedMetadataCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadStart",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLoadStartCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPause",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPauseCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPlay",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPlayCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPlaying",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPlayingCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onProgress",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onProgressCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onRateChange",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onRateChangeCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSeeked",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSeekedCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSeeking",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSeekingCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onStalled",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onStalledCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSuspend",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSuspendCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTimeUpdate",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTimeUpdateCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onVolumeChange",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onVolumeChangeCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onWaiting",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onWaitingCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAuxClick",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAuxClickCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onClick",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onClickCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onContextMenu",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onContextMenuCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDoubleClick",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDoubleClickCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDrag",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragEnd",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragEndCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragEnter",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragEnterCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragExit",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragExitCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragLeave",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragLeaveCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragOver",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragOverCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragStart",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDragStartCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDrop",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onDropCapture",
          "value": "DragEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseDown",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseDownCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseEnter",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseLeave",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseMove",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseMoveCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOut",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOutCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOver",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseOverCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseUp",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onMouseUpCapture",
          "value": "MouseEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSelect",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onSelectCapture",
          "value": "ReactEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchCancel",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchCancelCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchEnd",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchEndCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchMove",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchMoveCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchStart",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTouchStartCapture",
          "value": "TouchEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerDown",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerDownCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerMove",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerMoveCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerUp",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerUpCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerCancel",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerCancelCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerEnter",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerEnterCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerLeave",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerLeaveCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOver",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOverCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOut",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onPointerOutCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onGotPointerCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onGotPointerCaptureCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLostPointerCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onLostPointerCaptureCapture",
          "value": "PointerEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onScroll",
          "value": "UIEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onScrollCapture",
          "value": "UIEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onWheel",
          "value": "WheelEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onWheelCapture",
          "value": "WheelEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationStart",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationStartCapture",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationEnd",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationEndCapture",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationIteration",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onAnimationIterationCapture",
          "value": "AnimationEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTransitionEnd",
          "value": "TransitionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onTransitionEndCapture",
          "value": "TransitionEventHandler<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ref",
          "value": "LegacyRef<HTMLAnchorElement>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "syntaxKind": "PropertySignature",
          "name": "key",
          "value": "Key",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface UnstyledLinkProps extends LinkLikeComponentProps {}"
    }
  },
  "VideoThumbnailProps": {
    "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx": {
      "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
      "name": "VideoThumbnailProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "thumbnailUrl",
          "value": "string",
          "description": "URL source for thumbnail image."
        },
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "videoLength",
          "value": "number",
          "description": "Length of video in seconds.",
          "isOptional": true,
          "defaultValue": "0"
        },
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "videoProgress",
          "value": "number",
          "description": "Video progress in seconds. Displays a progress bar at the bottom of the thumbnail. Only renders when videoLength is also set.",
          "isOptional": true,
          "defaultValue": "0"
        },
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showVideoProgress",
          "value": "boolean",
          "description": "Indicate whether to allow video progress to be displayed",
          "isOptional": true,
          "defaultValue": "false"
        },
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Custom ARIA label for play button.",
          "isOptional": true,
          "defaultValue": "'Play video of length {human readable duration}'"
        },
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback on click or keypress of thumbnail. Use to trigger render of the video player in your chosen format, for example within a modal or fullscreen container."
        },
        {
          "filePath": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBeforeStartPlaying",
          "value": "() => void",
          "description": "Callback on mouse enter, focus, or touch start of thumbnail. Use to trigger video preload.",
          "isOptional": true
        }
      ],
      "value": "export interface VideoThumbnailProps {\n  /** URL source for thumbnail image. */\n  thumbnailUrl: string;\n  /**\n   * Length of video in seconds.\n   * @default 0\n   */\n  videoLength?: number;\n  /**\n   * Video progress in seconds. Displays a progress bar at the bottom of the thumbnail. Only renders when videoLength is also set.\n   * @default 0\n   */\n  videoProgress?: number;\n  /**\n   * Indicate whether to allow video progress to be displayed\n   * @default false\n   */\n  showVideoProgress?: boolean;\n  /** Custom ARIA label for play button.\n   * @default 'Play video of length {human readable duration}'\n   */\n  accessibilityLabel?: string;\n  /** Callback on click or keypress of thumbnail. Use to trigger render of the video player in your chosen format, for example within a modal or fullscreen container. */\n  onClick(): void;\n  /** Callback on mouse enter, focus, or touch start of thumbnail. Use to trigger video preload. */\n  onBeforeStartPlaying?(): void;\n}"
    }
  },
  "ComboboxTextFieldType": {
    "polaris-react/src/utilities/combobox/context.tsx": {
      "filePath": "polaris-react/src/utilities/combobox/context.tsx",
      "name": "ComboboxTextFieldType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activeOptionId",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "listboxId",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "expanded",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "setTextFieldLabelId",
          "value": "(id: string) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "setTextFieldFocused",
          "value": "(value: boolean) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTextFieldFocus",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTextFieldBlur",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTextFieldChange",
          "value": "(value: string) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ComboboxTextFieldType {\n  // Value for the TextField aria-activedescendant. (also on list context when not in combobox)\n  activeOptionId?: string;\n  // Value for the Combobox aria-owns and TextField aria-control\n  listboxId?: string;\n  // Value for aria-expanded on TextField\n  expanded?: boolean;\n  // Sets the value for the Listbox aria-labelledby\n  setTextFieldLabelId?(id: string): void;\n  // Sets a boolean to enable/disable keyboard control for the Listbox\n  setTextFieldFocused?(value: boolean): void;\n  // Callback fired when TextField is focused\n  onTextFieldFocus?(): void;\n  // Callback fired when TextField is blurred\n  onTextFieldBlur?(): void;\n  // Callback fired when TextField value changes\n  onTextFieldChange?(value: string): void;\n}"
    }
  },
  "ComboboxListboxType": {
    "polaris-react/src/utilities/combobox/context.tsx": {
      "filePath": "polaris-react/src/utilities/combobox/context.tsx",
      "name": "ComboboxListboxType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "textFieldLabelId",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "textFieldFocused",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "listboxId",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "willLoadMoreOptions",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "setActiveOptionId",
          "value": "(id: string) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "setListboxId",
          "value": "(id: string) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onOptionSelected",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyToBottom",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ComboboxListboxType {\n  // Value of the Texfields ID for listbox aria-labelledby\n  textFieldLabelId?: string;\n  // Enables/disables keyboard control\n  textFieldFocused?: boolean;\n  // Unique ID to set on the listbox. Used to set the Combobox aria-owns and TextField aria-controls attributes.\n  listboxId?: string;\n  // Whethor or not more options are available to lazy load. Use the hasMoreResults boolean provided by the GraphQL API of the paginated data. */\n  willLoadMoreOptions?: boolean;\n  // Sets the value for the TextField aria-activedescendant attribute.\n  setActiveOptionId?(id: string): void;\n  // Callback to set a generated listbox ID.\n  setListboxId?(id: string): void;\n  // Callback fired when an option is selected.\n  onOptionSelected?(): void;\n  // Callback fired when keyboard user navigates to the last item. Use to lazy load when listbox option data is paginated.\n  onKeyToBottom?(): void;\n}"
    }
  },
  "ComboboxListboxOptionType": {
    "polaris-react/src/utilities/combobox/context.tsx": {
      "filePath": "polaris-react/src/utilities/combobox/context.tsx",
      "name": "ComboboxListboxOptionType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/combobox/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ComboboxListboxOptionType {\n  // Whether the option should visually support multiple selection\n  allowMultiple?: boolean;\n}"
    }
  },
  "FocusManagerContextType": {
    "polaris-react/src/utilities/focus-manager/context.tsx": {
      "filePath": "polaris-react/src/utilities/focus-manager/context.tsx",
      "name": "FocusManagerContextType",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/focus-manager/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "trapFocusList",
          "value": "string[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/focus-manager/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "add",
          "value": "(id: string) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/utilities/focus-manager/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "remove",
          "value": "(id: string) => boolean",
          "description": ""
        }
      ],
      "value": "export interface FocusManagerContextType {\n  trapFocusList: string[];\n  add: (id: string) => void;\n  remove: (id: string) => boolean;\n}"
    }
  },
  "PortalsManager": {
    "polaris-react/src/utilities/portals/context.tsx": {
      "filePath": "polaris-react/src/utilities/portals/context.tsx",
      "name": "PortalsManager",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/utilities/portals/context.tsx",
          "syntaxKind": "PropertySignature",
          "name": "container",
          "value": "HTMLDivElement",
          "description": ""
        }
      ],
      "value": "export interface PortalsManager {\n  container: PortalsContainerElement;\n}"
    }
  },
  "ItemProps": {
    "polaris-react/src/components/ActionList/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/ActionList/components/Item/Item.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ItemProps",
      "value": "ActionListItemDescriptor",
      "description": ""
    },
    "polaris-react/src/components/ButtonGroup/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/ButtonGroup/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ButtonGroup/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "button",
          "value": "React.ReactElement",
          "description": ""
        }
      ],
      "value": "export interface ItemProps {\n  button: React.ReactElement;\n}"
    },
    "polaris-react/src/components/Connected/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Connected/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Connected/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "position",
          "value": "ItemPosition",
          "description": "Position of the item"
        },
        {
          "filePath": "polaris-react/src/components/Connected/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Item content",
          "isOptional": true
        }
      ],
      "value": "export interface ItemProps {\n  /** Position of the item */\n  position: ItemPosition;\n  /** Item content */\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/FormLayout/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/FormLayout/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/FormLayout/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ItemProps {\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/List/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/List/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/List/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Content to display inside the item",
          "isOptional": true
        }
      ],
      "value": "export interface ItemProps {\n  /** Content to display inside the item */\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "exactMatch",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "new",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subNavigationItems",
          "value": "SubNavigationItem[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryAction",
          "value": "SecondaryAction",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Use secondaryActions instead."
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryActions",
          "value": "SecondaryActions",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "displayActionsOnHover",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onToggleExpandedState",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "expanded",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "shouldResizeIcon",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "truncateText",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "matches",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "matchPaths",
          "value": "string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "excludePaths",
          "value": "string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ItemProps extends ItemURLDetails {\n  icon?: IconProps['source'];\n  badge?: ReactNode;\n  label: string;\n  disabled?: boolean;\n  accessibilityLabel?: string;\n  selected?: boolean;\n  exactMatch?: boolean;\n  new?: boolean;\n  subNavigationItems?: SubNavigationItem[];\n  /** @deprecated Use secondaryActions instead. */\n  secondaryAction?: SecondaryAction;\n  secondaryActions?: SecondaryActions;\n  displayActionsOnHover?: boolean;\n  onClick?(): void;\n  onToggleExpandedState?(): void;\n  expanded?: boolean;\n  shouldResizeIcon?: boolean;\n  truncateText?: boolean;\n}"
    },
    "polaris-react/src/components/Stack/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Stack/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Stack/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Elements to display inside item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Stack/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fill",
          "value": "boolean",
          "description": "Fill the remaining horizontal space in the stack with the item",
          "isOptional": true
        }
      ],
      "value": "export interface ItemProps {\n  /** Elements to display inside item */\n  children?: React.ReactNode;\n  /** Fill the remaining horizontal space in the stack with the item  */\n  fill?: boolean;\n  /**\n   * @default false\n   */\n}"
    },
    "polaris-react/src/components/Tabs/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "panelID",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Item/Item.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ItemProps {\n  id: string;\n  focused: boolean;\n  panelID?: string;\n  children?: React.ReactNode;\n  url?: string;\n  accessibilityLabel?: string;\n  onClick?(): void;\n}"
    },
    "polaris-react/src/components/Filters/components/ConnectedFilterControl/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/components/Item/Item.tsx",
      "name": "ItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface ItemProps {\n  children?: React.ReactNode;\n}"
    }
  },
  "SectionProps": {
    "polaris-react/src/components/ActionList/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/ActionList/components/Section/Section.tsx",
      "name": "SectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionList/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "section",
          "value": "ActionListSection",
          "description": "Section of action items"
        },
        {
          "filePath": "polaris-react/src/components/ActionList/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasMultipleSections",
          "value": "boolean",
          "description": "Should there be multiple sections"
        },
        {
          "filePath": "polaris-react/src/components/ActionList/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionRole",
          "value": "string",
          "description": "Defines a specific role attribute for each action in the list",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionList/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onActionAnyItem",
          "value": "() => void",
          "description": "Callback when any item is clicked or keypressed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionList/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isFirst",
          "value": "boolean",
          "description": "Whether it is the first in a group of sections",
          "isOptional": true
        }
      ],
      "value": "export interface SectionProps {\n  /** Section of action items */\n  section: ActionListSection;\n  /** Should there be multiple sections */\n  hasMultipleSections: boolean;\n  /** Defines a specific role attribute for each action in the list */\n  actionRole?: 'option' | 'menuitem' | string;\n  /** Callback when any item is clicked or keypressed */\n  onActionAnyItem?: ActionListItemDescriptor['onAction'];\n  /** Whether it is the first in a group of sections */\n  isFirst?: boolean;\n}"
    },
    "polaris-react/src/components/Layout/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/Layout/components/Section/Section.tsx",
      "name": "SectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Layout/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondary",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "oneHalf",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "oneThird",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SectionProps {\n  children?: React.ReactNode;\n  secondary?: boolean;\n  fullWidth?: boolean;\n  oneHalf?: boolean;\n  oneThird?: boolean;\n}"
    },
    "polaris-react/src/components/Listbox/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/Listbox/components/Section/Section.tsx",
      "name": "SectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "divider",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "ReactNode",
          "description": ""
        }
      ],
      "value": "interface SectionProps {\n  divider?: boolean;\n  children?: ReactNode;\n  title: ReactNode;\n}"
    },
    "polaris-react/src/components/Modal/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/Modal/components/Section/Section.tsx",
      "name": "SectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Modal/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subdued",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SectionProps {\n  children?: React.ReactNode;\n  flush?: boolean;\n  subdued?: boolean;\n  titleHidden?: boolean;\n}"
    },
    "polaris-react/src/components/Navigation/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
      "name": "SectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "ItemProps[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fill",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rollup",
          "value": "{ after: number; view: string; hide: string; activePath: string; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "{ icon: any; accessibilityLabel: string; onClick(): void; tooltip?: TooltipProps; }",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "separator",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SectionProps {\n  items: ItemProps[];\n  icon?: IconProps['source'];\n  title?: string;\n  fill?: boolean;\n  rollup?: {\n    after: number;\n    view: string;\n    hide: string;\n    activePath: string;\n  };\n  action?: {\n    icon: IconProps['source'];\n    accessibilityLabel: string;\n    onClick(): void;\n    tooltip?: TooltipProps;\n  };\n  separator?: boolean;\n}"
    },
    "polaris-react/src/components/Popover/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/Section/Section.tsx",
      "name": "SectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SectionProps {\n  children?: React.ReactNode;\n}"
    }
  },
  "MeasuredActions": {
    "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx": {
      "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
      "name": "MeasuredActions",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showable",
          "value": "MenuActionDescriptor[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/Actions/Actions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rolledUp",
          "value": "(MenuActionDescriptor | MenuGroupDescriptor)[]",
          "description": ""
        }
      ],
      "value": "interface MeasuredActions {\n  showable: MenuActionDescriptor[];\n  rolledUp: (MenuActionDescriptor | MenuGroupDescriptor)[];\n}"
    }
  },
  "MenuGroupProps": {
    "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx": {
      "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
      "name": "MenuGroupProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden menu description for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Whether or not the menu is open",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(openActions: () => void) => void",
          "description": "Callback when the menu is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onOpen",
          "value": "(title: string) => void",
          "description": "Callback for opening the MenuGroup by title"
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "(title: string) => void",
          "description": "Callback for closing the MenuGroup by title"
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "MethodSignature",
          "name": "getOffsetWidth",
          "value": "(width: number) => void",
          "description": "Callback for getting the offsetWidth of the MenuGroup",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sections",
          "value": "readonly ActionListSection[]",
          "description": "Collection of sectioned action items",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Menu group title"
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "ActionListItemDescriptor[]",
          "description": "List of actions"
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "details",
          "value": "React.ReactNode",
          "description": "Action details",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables action button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": "Zero-indexed numerical position. Overrides the group's order in the menu.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onActionAnyItem",
          "value": "() => void",
          "description": "Callback when any action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/MenuGroup/MenuGroup.tsx",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ status: \"new\"; content: string; }",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface MenuGroupProps extends MenuGroupDescriptor {\n  /** Visually hidden menu description for screen readers */\n  accessibilityLabel?: string;\n  /** Whether or not the menu is open */\n  active?: boolean;\n  /** Callback when the menu is clicked */\n  onClick?(openActions: () => void): void;\n  /** Callback for opening the MenuGroup by title */\n  onOpen(title: string): void;\n  /** Callback for closing the MenuGroup by title */\n  onClose(title: string): void;\n  /** Callback for getting the offsetWidth of the MenuGroup */\n  getOffsetWidth?(width: number): void;\n  /** Collection of sectioned action items */\n  sections?: readonly ActionListSection[];\n}"
    }
  },
  "RollupActionsProps": {
    "polaris-react/src/components/ActionMenu/components/RollupActions/RollupActions.tsx": {
      "filePath": "polaris-react/src/components/ActionMenu/components/RollupActions/RollupActions.tsx",
      "name": "RollupActionsProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/RollupActions/RollupActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Accessibilty label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/RollupActions/RollupActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "items",
          "value": "ActionListItemDescriptor[]",
          "description": "Collection of actions for the list",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/RollupActions/RollupActions.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sections",
          "value": "ActionListSection[]",
          "description": "Collection of sectioned action items",
          "isOptional": true
        }
      ],
      "value": "export interface RollupActionsProps {\n  /** Accessibilty label */\n  accessibilityLabel?: string;\n  /** Collection of actions for the list */\n  items?: ActionListItemDescriptor[];\n  /** Collection of sectioned action items */\n  sections?: ActionListSection[];\n}"
    }
  },
  "SecondaryAction": {
    "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx": {
      "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
      "name": "SecondaryAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "getOffsetWidth",
          "value": "(width: number) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "string | string[]",
          "description": "The content to display inside the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primary",
          "value": "boolean",
          "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Indicates a dangerous or potentially negative action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "size",
          "value": "\"medium\" | \"large\" | \"slim\"",
          "description": "Changes the size of the button, giving it more or less padding",
          "isOptional": true,
          "defaultValue": "'medium'"
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "textAlign",
          "value": "\"start\" | \"end\" | \"center\" | \"left\" | \"right\"",
          "description": "Changes the inner text alignment of the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "outline",
          "value": "boolean",
          "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "Allows the button to grow to the width of its container",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disclosure",
          "value": "boolean | \"up\" | \"down\" | \"select\"",
          "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "plain",
          "value": "boolean",
          "description": "Renders a button that looks like a link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "monochrome",
          "value": "boolean",
          "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "removeUnderline",
          "value": "boolean",
          "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display to the left of the button content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "connectedDisclosure",
          "value": "ConnectedDisclosure",
          "description": "Disclosure button connected right of the button. Toggles a popover action list.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "dataPrimaryLink",
          "value": "boolean",
          "description": "Indicates whether or not the button is the primary navigation link when rendered inside of an `IndexTable.Row`",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the href attribute of a link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "download",
          "value": "string | boolean",
          "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "submit",
          "value": "boolean",
          "description": "Allows the button to submit a form",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables the button, disallowing merchant interaction",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Replaces button text with a spinner while a background action is being performed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pressed",
          "value": "boolean",
          "description": "Sets the button in a pressed state",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "A valid WAI-ARIA role to define the semantic value of this element",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaControls",
          "value": "string",
          "description": "Id of the element the button controls",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaExpanded",
          "value": "boolean",
          "description": "Tells screen reader the controlled element is expanded",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaDescribedBy",
          "value": "string",
          "description": "Indicates the ID of the element that describes the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ariaChecked",
          "value": "\"false\" | \"true\"",
          "description": "Indicates the current checked state of the button when acting as a toggle or switch",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "Callback when clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when button becomes focussed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus leaves button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyPress",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keypress event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyUp",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keyup event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onKeyDown",
          "value": "(event: React.KeyboardEvent<HTMLButtonElement>) => void",
          "description": "Callback when a keydown event is registered on the button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ActionMenu/components/SecondaryAction/SecondaryAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onPointerDown",
          "value": "() => void",
          "description": "Callback when pointerdown event is being triggered",
          "isOptional": true
        }
      ],
      "value": "interface SecondaryAction extends ButtonProps {\n  helpText?: React.ReactNode;\n  onAction?(): void;\n  getOffsetWidth?(width: number): void;\n}"
    },
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "name": "SecondaryAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltip",
          "value": "TooltipProps",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface SecondaryAction {\n  accessibilityLabel: string;\n  icon: IconProps['source'];\n  url?: string;\n  onClick?(): void;\n  tooltip?: TooltipProps;\n}"
    }
  },
  "MappedOption": {
    "polaris-react/src/components/Autocomplete/components/MappedOption/MappedOption.tsx": {
      "filePath": "polaris-react/src/components/Autocomplete/components/MappedOption/MappedOption.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "MappedOption",
      "value": "ArrayElement<OptionDescriptor[]> & {\n  selected: boolean;\n  singleSelection: boolean;\n}",
      "description": ""
    }
  },
  "MappedAction": {
    "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx": {
      "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
      "name": "MappedAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "wrapOverflow",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ status: \"new\"; content: string; }",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Badge component"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Additional hint text to display with item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Source of the icon"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "image",
          "value": "string",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Image source"
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "React.ReactNode",
          "description": "Prefix source",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "React.ReactNode",
          "description": "Suffix source",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "ellipsis",
          "value": "boolean",
          "description": "Add an ellipsis suffix to action content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Whether the action is active or not",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "Defines a role for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Autocomplete/components/MappedAction/MappedAction.tsx",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Destructive action",
          "isOptional": true
        }
      ],
      "value": "interface MappedAction extends ActionListItemDescriptor {\n  wrapOverflow?: boolean;\n}"
    }
  },
  "PipProps": {
    "polaris-react/src/components/Badge/components/Pip/Pip.tsx": {
      "filePath": "polaris-react/src/components/Badge/components/Pip/Pip.tsx",
      "name": "PipProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Badge/components/Pip/Pip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "status",
          "value": "Status",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Badge/components/Pip/Pip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "progress",
          "value": "Progress",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Badge/components/Pip/Pip.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabelOverride",
          "value": "string",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PipProps {\n  status?: Status;\n  progress?: Progress;\n  accessibilityLabelOverride?: string;\n}"
    }
  },
  "BulkActionButtonProps": {
    "polaris-react/src/components/BulkActions/components/BulkActionButton/BulkActionButton.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/components/BulkActionButton/BulkActionButton.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "BulkActionButtonProps",
      "value": "{\n  disclosure?: boolean;\n  indicator?: boolean;\n  handleMeasurement?(width: number): void;\n  showContentInButton?: boolean;\n} & DisableableAction",
      "description": ""
    }
  },
  "BulkActionsMenuProps": {
    "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx": {
      "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
      "name": "BulkActionsMenuProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isNewBadgeInBadgeActions",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Menu group title"
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "ActionListItemDescriptor[]",
          "description": "List of actions"
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Icon to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "details",
          "value": "React.ReactNode",
          "description": "Action details",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disables action button",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": "Zero-indexed numerical position. Overrides the group's order in the menu.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "onActionAnyItem",
          "value": "() => void",
          "description": "Callback when any action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(openActions: () => void) => void",
          "description": "Callback when the menu is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/BulkActions/components/BulkActionMenu/BulkActionMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ status: \"new\"; content: string; }",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface BulkActionsMenuProps extends MenuGroupDescriptor {\n  isNewBadgeInBadgeActions: boolean;\n}"
    }
  },
  "CardHeaderProps": {
    "polaris-react/src/components/Card/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/Card/components/Header/Header.tsx",
      "name": "CardHeaderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Card/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "DisableableAction[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CardHeaderProps {\n  title?: React.ReactNode;\n  actions?: DisableableAction[];\n  children?: React.ReactNode;\n}"
    }
  },
  "CardSectionProps": {
    "polaris-react/src/components/Card/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
      "name": "CardSectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subdued",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideOnPrint",
          "value": "boolean",
          "description": "Allow the card to be hidden when printing",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "ComplexAction[]",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CardSectionProps {\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  subdued?: boolean;\n  flush?: boolean;\n  fullWidth?: boolean;\n  /** Allow the card to be hidden when printing */\n  hideOnPrint?: boolean;\n  actions?: ComplexAction[];\n}"
    }
  },
  "CardSubsectionProps": {
    "polaris-react/src/components/Card/components/Subsection/Subsection.tsx": {
      "filePath": "polaris-react/src/components/Card/components/Subsection/Subsection.tsx",
      "name": "CardSubsectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Card/components/Subsection/Subsection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CardSubsectionProps {\n  children?: React.ReactNode;\n}"
    }
  },
  "SlidableProps": {
    "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
      "name": "SlidableProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "draggerX",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "PropertySignature",
          "name": "draggerY",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(position: Position) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDraggerHeight",
          "value": "(height: number) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SlidableProps {\n  draggerX?: number;\n  draggerY?: number;\n  onChange(position: Position): void;\n  onDraggerHeight?(height: number): void;\n}"
    }
  },
  "HuePickerProps": {
    "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx",
      "name": "HuePickerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hue",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/HuePicker/HuePicker.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(hue: number) => void",
          "description": ""
        }
      ],
      "value": "export interface HuePickerProps {\n  hue: number;\n  onChange(hue: number): void;\n}"
    }
  },
  "AlphaPickerProps": {
    "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx": {
      "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
      "name": "AlphaPickerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "color",
          "value": "HSBColor",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
          "syntaxKind": "PropertySignature",
          "name": "alpha",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/ColorPicker/components/AlphaPicker/AlphaPicker.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(hue: number) => void",
          "description": ""
        }
      ],
      "value": "export interface AlphaPickerProps {\n  color: HSBColor;\n  alpha: number;\n  onChange(hue: number): void;\n}"
    }
  },
  "ItemPosition": {
    "polaris-react/src/components/Connected/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Connected/components/Item/Item.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "ItemPosition",
      "value": "'left' | 'right' | 'primary'",
      "description": ""
    }
  },
  "CellProps": {
    "polaris-react/src/components/DataTable/components/Cell/Cell.tsx": {
      "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
      "name": "CellProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contentType",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "nthColumn",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "firstColumn",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "truncate",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "header",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "total",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "totalInFooter",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sorted",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortable",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sortDirection",
          "value": "SortDirection",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "defaultSortDirection",
          "value": "SortDirection",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlign",
          "value": "VerticalAlign",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onSort",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "colSpan",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "setRef",
          "value": "(ref: HTMLTableCellElement) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "stickyHeadingCell",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "stickyCellWidth",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hovered",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "handleFocus",
          "value": "FocusEventHandler<Element>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "inFixedNthColumn",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hasFixedNthColumn",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixedCellVisible",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "firstColumnMinWidth",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "style",
          "value": "React.CSSProperties",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DataTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lastFixedFirstColumn",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CellProps {\n  content?: React.ReactNode;\n  contentType?: string;\n  nthColumn?: boolean;\n  firstColumn?: boolean;\n  truncate?: boolean;\n  header?: boolean;\n  total?: boolean;\n  totalInFooter?: boolean;\n  sorted?: boolean;\n  sortable?: boolean;\n  sortDirection?: SortDirection;\n  defaultSortDirection?: SortDirection;\n  verticalAlign?: VerticalAlign;\n  onSort?(): void;\n  colSpan?: number;\n  setRef?: (ref: HTMLTableCellElement | null) => void;\n  stickyHeadingCell?: boolean;\n  stickyCellWidth?: number;\n  hovered?: boolean;\n  handleFocus?: FocusEventHandler;\n  inFixedNthColumn?: boolean;\n  hasFixedNthColumn?: boolean;\n  fixedCellVisible?: boolean;\n  firstColumnMinWidth?: string;\n  style?: React.CSSProperties;\n  lastFixedFirstColumn?: boolean;\n}"
    },
    "polaris-react/src/components/Grid/components/Cell/Cell.tsx": {
      "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
      "name": "CellProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "area",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "column",
          "value": "Cell",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "columnSpan",
          "value": "Columns",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "row",
          "value": "Cell",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CellProps {\n  area?: string;\n  column?: Cell;\n  columnSpan?: Columns;\n  row?: Cell;\n  children?: React.ReactNode;\n}"
    },
    "polaris-react/src/components/IndexTable/components/Cell/Cell.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/components/Cell/Cell.tsx",
      "name": "CellProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "className",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Cell/Cell.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CellProps {\n  children?: ReactNode;\n  className?: string;\n  flush?: boolean;\n}"
    }
  },
  "DayProps": {
    "polaris-react/src/components/DatePicker/components/Day/Day.tsx": {
      "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
      "name": "DayProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "day",
          "value": "Date",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "inRange",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "inHoveringRange",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "lastDayOfMonth",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isLastSelectedDay",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isFirstSelectedDay",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "isHoveringRight",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rangeIsDifferent",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "weekday",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selectedAccessibilityLabelPrefix",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(day: Date) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onHover",
          "value": "(day?: Date) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Day/Day.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "(day: Date) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface DayProps {\n  focused?: boolean;\n  day?: Date;\n  selected?: boolean;\n  inRange?: boolean;\n  inHoveringRange?: boolean;\n  disabled?: boolean;\n  lastDayOfMonth?: any;\n  isLastSelectedDay?: boolean;\n  isFirstSelectedDay?: boolean;\n  isHoveringRight?: boolean;\n  rangeIsDifferent?: boolean;\n  weekday?: string;\n  selectedAccessibilityLabelPrefix?: string;\n  onClick?(day: Date): void;\n  onHover?(day?: Date): void;\n  onFocus?(day: Date): void;\n}"
    }
  },
  "WeekdayProps": {
    "polaris-react/src/components/DatePicker/components/Weekday/Weekday.tsx": {
      "filePath": "polaris-react/src/components/DatePicker/components/Weekday/Weekday.tsx",
      "name": "WeekdayProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Weekday/Weekday.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Weekday/Weekday.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Weekday/Weekday.tsx",
          "syntaxKind": "PropertySignature",
          "name": "current",
          "value": "boolean",
          "description": ""
        }
      ],
      "value": "export interface WeekdayProps {\n  label: string;\n  title: string;\n  current: boolean;\n}"
    }
  },
  "FileUploadProps": {
    "polaris-react/src/components/DropZone/components/FileUpload/FileUpload.tsx": {
      "filePath": "polaris-react/src/components/DropZone/components/FileUpload/FileUpload.tsx",
      "name": "FileUploadProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DropZone/components/FileUpload/FileUpload.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionTitle",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DropZone/components/FileUpload/FileUpload.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionHint",
          "value": "string",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface FileUploadProps {\n  actionTitle?: string;\n  actionHint?: string;\n}"
    }
  },
  "PopoverableAction": {
    "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx": {
      "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
      "name": "PopoverableAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "popoverOpen",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "popoverContent",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "key",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays"
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place"
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        }
      ],
      "value": "interface PopoverableAction extends DisableableAction {\n  popoverOpen: boolean;\n  popoverContent: React.ReactNode;\n  key: string;\n  content: string;\n  onAction(): void;\n}"
    }
  },
  "ConnectedFilterControlProps": {
    "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx": {
      "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
      "name": "ConnectedFilterControlProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rightPopoverableActions",
          "value": "PopoverableAction[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "rightAction",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "auxiliary",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "forceShowMorefiltersButton",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "syntaxKind": "PropertySignature",
          "name": "queryFieldHidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface ConnectedFilterControlProps {\n  children: React.ReactNode;\n  rightPopoverableActions?: PopoverableAction[] | null;\n  rightAction?: React.ReactNode;\n  auxiliary?: React.ReactNode;\n  disabled?: boolean;\n  forceShowMorefiltersButton?: boolean;\n  queryFieldHidden?: boolean;\n}"
    }
  },
  "ComputedProperty": {
    "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx": {
      "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
      "name": "ComputedProperty",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Filters/components/ConnectedFilterControl/ConnectedFilterControl.tsx",
          "name": "[key: string]",
          "value": "number"
        }
      ],
      "value": "interface ComputedProperty {\n  [key: string]: number;\n}"
    }
  },
  "MonthProps": {
    "polaris-react/src/components/DatePicker/components/Month/Month.tsx": {
      "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
      "name": "MonthProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focusedDate",
          "value": "Date",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "Range",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hoverDate",
          "value": "Date",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "month",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "year",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableDatesBefore",
          "value": "Date",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableDatesAfter",
          "value": "Date",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disableSpecificDates",
          "value": "Date[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowRange",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "weekStartsOn",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabelPrefixes",
          "value": "[string, string]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(date: Range) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onHover",
          "value": "(hoverEnd: Date) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/DatePicker/components/Month/Month.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "(date: Date) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface MonthProps {\n  focusedDate?: Date;\n  selected?: Range;\n  hoverDate?: Date;\n  month: number;\n  year: number;\n  disableDatesBefore?: Date;\n  disableDatesAfter?: Date;\n  disableSpecificDates?: Date[];\n  allowRange?: boolean;\n  weekStartsOn: number;\n  accessibilityLabelPrefixes: [string | undefined, string];\n  onChange?(date: Range): void;\n  onHover?(hoverEnd: Date): void;\n  onFocus?(date: Date): void;\n}"
    }
  },
  "GroupProps": {
    "polaris-react/src/components/FormLayout/components/Group/Group.tsx": {
      "filePath": "polaris-react/src/components/FormLayout/components/Group/Group.tsx",
      "name": "GroupProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/FormLayout/components/Group/Group.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/FormLayout/components/Group/Group.tsx",
          "syntaxKind": "PropertySignature",
          "name": "condensed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/FormLayout/components/Group/Group.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/FormLayout/components/Group/Group.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface GroupProps {\n  children?: React.ReactNode;\n  condensed?: boolean;\n  title?: string;\n  helpText?: React.ReactNode;\n}"
    }
  },
  "AnimationType": {
    "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx": {
      "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "AnimationType",
      "value": "'fade'",
      "description": ""
    }
  },
  "CSSAnimationProps": {
    "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx": {
      "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
      "name": "CSSAnimationProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "in",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "className",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "type",
          "value": "\"fade\"",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/CSSAnimation/CSSAnimation.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface CSSAnimationProps {\n  in: boolean;\n  className: string;\n  type: AnimationType;\n  children?: React.ReactNode;\n}"
    }
  },
  "ToastManagerProps": {
    "polaris-react/src/components/Frame/components/ToastManager/ToastManager.tsx": {
      "filePath": "polaris-react/src/components/Frame/components/ToastManager/ToastManager.tsx",
      "name": "ToastManagerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Frame/components/ToastManager/ToastManager.tsx",
          "syntaxKind": "PropertySignature",
          "name": "toastMessages",
          "value": "ToastPropsWithID[]",
          "description": ""
        }
      ],
      "value": "export interface ToastManagerProps {\n  toastMessages: ToastPropsWithID[];\n}"
    }
  },
  "Cell": {
    "polaris-react/src/components/Grid/components/Cell/Cell.tsx": {
      "filePath": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "Cell",
      "value": "{\n  [Breakpoint in Breakpoints]?: string;\n}",
      "description": ""
    }
  },
  "CheckboxWrapperProps": {
    "polaris-react/src/components/IndexTable/components/Checkbox/Checkbox.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/components/Checkbox/Checkbox.tsx",
      "name": "CheckboxWrapperProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Checkbox/Checkbox.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": ""
        }
      ],
      "value": "interface CheckboxWrapperProps {\n  children: ReactNode;\n}"
    }
  },
  "RowStatus": {
    "polaris-react/src/components/IndexTable/components/Row/Row.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "RowStatus",
      "value": "'success' | 'subdued'",
      "description": ""
    }
  },
  "TableRowElementType": {
    "polaris-react/src/components/IndexTable/components/Row/Row.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "TableRowElementType",
      "value": "HTMLTableRowElement & HTMLLIElement",
      "description": ""
    }
  },
  "RowProps": {
    "polaris-react/src/components/IndexTable/components/Row/Row.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
      "name": "RowProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "position",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subdued",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "status",
          "value": "RowStatus",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onNavigation",
          "value": "(id: string) => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/Row/Row.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface RowProps {\n  children: React.ReactNode;\n  id: string;\n  selected?: boolean;\n  position: number;\n  subdued?: boolean;\n  status?: RowStatus;\n  disabled?: boolean;\n  onNavigation?(id: string): void;\n  onClick?(): void;\n}"
    }
  },
  "ScrollContainerProps": {
    "polaris-react/src/components/IndexTable/components/ScrollContainer/ScrollContainer.tsx": {
      "filePath": "polaris-react/src/components/IndexTable/components/ScrollContainer/ScrollContainer.tsx",
      "name": "ScrollContainerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/IndexTable/components/ScrollContainer/ScrollContainer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/ScrollContainer/ScrollContainer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "scrollableContainerRef",
          "value": "React.RefObject<HTMLDivElement>",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/IndexTable/components/ScrollContainer/ScrollContainer.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onScroll",
          "value": "(canScrollLeft: boolean, canScrollRight: boolean) => void",
          "description": ""
        }
      ],
      "value": "export interface ScrollContainerProps {\n  children: React.ReactNode;\n  scrollableContainerRef: React.RefObject<HTMLDivElement>;\n  onScroll(canScrollLeft: boolean, canScrollRight: boolean): void;\n}"
    }
  },
  "AnnotatedSectionProps": {
    "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx": {
      "filePath": "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx",
      "name": "AnnotatedSectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "description",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface AnnotatedSectionProps {\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  id?: string;\n}"
    }
  },
  "LegacyCardSectionProps": {
    "polaris-react/src/components/LegacyCard/components/Section/Section.tsx": {
      "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
      "name": "LegacyCardSectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subdued",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "flush",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideOnPrint",
          "value": "boolean",
          "description": "Allow the card to be hidden when printing",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "ComplexAction[]",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface LegacyCardSectionProps {\n  title?: React.ReactNode;\n  children?: React.ReactNode;\n  subdued?: boolean;\n  flush?: boolean;\n  fullWidth?: boolean;\n  /** Allow the card to be hidden when printing */\n  hideOnPrint?: boolean;\n  actions?: ComplexAction[];\n}"
    }
  },
  "LegacyCardHeaderProps": {
    "polaris-react/src/components/LegacyCard/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
      "name": "LegacyCardHeaderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "DisableableAction[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface LegacyCardHeaderProps {\n  title?: React.ReactNode;\n  actions?: DisableableAction[];\n  children?: React.ReactNode;\n}"
    }
  },
  "LegacyCardSubsectionProps": {
    "polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx": {
      "filePath": "polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx",
      "name": "LegacyCardSubsectionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface LegacyCardSubsectionProps {\n  children?: React.ReactNode;\n}"
    }
  },
  "LegacyItemProps": {
    "polaris-react/src/components/LegacyStack/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/LegacyStack/components/Item/Item.tsx",
      "name": "LegacyItemProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/LegacyStack/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "Elements to display inside item",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/LegacyStack/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fill",
          "value": "boolean",
          "description": "Fill the remaining horizontal space in the stack with the item",
          "isOptional": true
        }
      ],
      "value": "export interface LegacyItemProps {\n  /** Elements to display inside item */\n  children?: React.ReactNode;\n  /** Fill the remaining horizontal space in the stack with the item  */\n  fill?: boolean;\n  /**\n   * @default false\n   */\n}"
    }
  },
  "ActionProps": {
    "polaris-react/src/components/Listbox/components/Action/Action.tsx": {
      "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
      "name": "ActionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
          "syntaxKind": "PropertySignature",
          "name": "divider",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface ActionProps extends OptionProps {\n  icon?: IconProps['source'];\n}"
    }
  },
  "HeaderProps": {
    "polaris-react/src/components/Listbox/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/Listbox/components/Header/Header.tsx",
      "name": "HeaderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "ReactNode",
          "description": ""
        }
      ],
      "value": "interface HeaderProps {\n  children: ReactNode;\n}"
    },
    "polaris-react/src/components/Modal/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/Modal/components/Header/Header.tsx",
      "name": "HeaderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Modal/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "closing",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Header/Header.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface HeaderProps {\n  id: string;\n  titleHidden: boolean;\n  closing: boolean;\n  children?: React.ReactNode;\n  onClose(): void;\n}"
    },
    "polaris-react/src/components/Page/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
      "name": "HeaderProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": "Visually hide the title",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "any",
          "description": "Primary page-level action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pagination",
          "value": "PaginationProps",
          "description": "Page-level pagination",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "breadcrumb",
          "value": "LinkAction | CallbackAction",
          "description": "Breadcrumb link",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryActions",
          "value": "any",
          "description": "Collection of secondary page-level actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actionGroups",
          "value": "MenuGroupDescriptor[]",
          "description": "Collection of page-level groups of secondary actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "additionalNavigation",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true,
          "deprecationMessage": "Additional navigation markup"
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "additionalMetadata",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onActionRollup",
          "value": "(hasRolledUp: boolean) => void",
          "description": "Callback that returns true when secondary actions are rolled up into action groups, and false when not",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Page title, in large type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subtitle",
          "value": "string",
          "description": "Page subtitle, in regular type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleMetadata",
          "value": "React.ReactNode",
          "description": "Important and non-interactive status information shown immediately after the title.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "compactTitle",
          "value": "boolean",
          "description": "Removes spacing between title and subtitle",
          "isOptional": true
        }
      ],
      "value": "export interface HeaderProps extends TitleProps {\n  /** Visually hide the title */\n  titleHidden?: boolean;\n  /** Primary page-level action */\n  primaryAction?: PrimaryAction | React.ReactNode;\n  /** Page-level pagination */\n  pagination?: PaginationProps;\n  /** Breadcrumb link */\n  breadcrumb?: BreadcrumbsProps['breadcrumb'];\n  /** Collection of secondary page-level actions */\n  secondaryActions?: MenuActionDescriptor[] | React.ReactNode;\n  /** Collection of page-level groups of secondary actions */\n  actionGroups?: MenuGroupDescriptor[];\n  /** @deprecated Additional navigation markup */\n  additionalNavigation?: React.ReactNode;\n  // Additional meta data\n  additionalMetadata?: React.ReactNode | string;\n  /** Callback that returns true when secondary actions are rolled up into action groups, and false when not */\n  onActionRollup?(hasRolledUp: boolean): void;\n}"
    }
  },
  "OptionProps": {
    "polaris-react/src/components/Listbox/components/Option/Option.tsx": {
      "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
      "name": "OptionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "any",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "divider",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface OptionProps {\n  // Unique item value\n  value: string;\n  // Visually hidden text for screen readers\n  accessibilityLabel?: string;\n  // Children. When a string, children are rendered in a styled TextOption\n  children?: string | React.ReactNode;\n  // Option is selected\n  selected?: boolean;\n  // Option is disabled\n  disabled?: boolean;\n  // Adds a border-bottom to the Option\n  divider?: boolean;\n}"
    },
    "polaris-react/src/components/OptionList/components/Option/Option.tsx": {
      "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
      "name": "OptionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "section",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "index",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "media",
          "value": "React.ReactElement<IconProps | ThumbnailProps | AvatarProps>",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "select",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "allowMultiple",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "verticalAlign",
          "value": "Alignment",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "PropertySignature",
          "name": "role",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/OptionList/components/Option/Option.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(section: number, option: number) => void",
          "description": ""
        }
      ],
      "value": "export interface OptionProps {\n  id: string;\n  label: React.ReactNode;\n  value: string;\n  section: number;\n  index: number;\n  media?: React.ReactElement<IconProps | AvatarProps | ThumbnailProps>;\n  disabled?: boolean;\n  active?: boolean;\n  select?: boolean;\n  allowMultiple?: boolean;\n  verticalAlign?: Alignment;\n  role?: string;\n  onClick(section: number, option: number): void;\n}"
    }
  },
  "TextOptionProps": {
    "polaris-react/src/components/Listbox/components/TextOption/TextOption.tsx": {
      "filePath": "polaris-react/src/components/Listbox/components/TextOption/TextOption.tsx",
      "name": "TextOptionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Listbox/components/TextOption/TextOption.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/TextOption/TextOption.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Listbox/components/TextOption/TextOption.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface TextOptionProps {\n  children: React.ReactNode;\n  // Whether the option is selected\n  selected?: boolean;\n  // Whether the option is disabled\n  disabled?: boolean;\n}"
    }
  },
  "CloseButtonProps": {
    "polaris-react/src/components/Modal/components/CloseButton/CloseButton.tsx": {
      "filePath": "polaris-react/src/components/Modal/components/CloseButton/CloseButton.tsx",
      "name": "CloseButtonProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Modal/components/CloseButton/CloseButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "pressed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/CloseButton/CloseButton.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleHidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/CloseButton/CloseButton.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface CloseButtonProps {\n  pressed?: boolean;\n  titleHidden?: boolean;\n  onClick(): void;\n}"
    }
  },
  "CSSTransitionProps": {
    "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx": {
      "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "CSSTransitionProps",
      "value": "React.ComponentProps<typeof CSSTransition>",
      "description": ""
    }
  },
  "DialogProps": {
    "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx": {
      "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
      "name": "DialogProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelledBy",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "instant",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "limitHeight",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "large",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "small",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onEntered",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onExited",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "in",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullScreen",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Dialog/Dialog.tsx",
          "syntaxKind": "PropertySignature",
          "name": "setClosing",
          "value": "Dispatch<SetStateAction<boolean>>",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface DialogProps {\n  labelledBy?: string;\n  instant?: boolean;\n  children?: React.ReactNode;\n  limitHeight?: boolean;\n  large?: boolean;\n  small?: boolean;\n  onClose(): void;\n  onEntered?(): void;\n  onExited?(): void;\n  in?: boolean;\n  fullScreen?: boolean;\n  setClosing?: Dispatch<SetStateAction<boolean>>;\n}"
    }
  },
  "FooterProps": {
    "polaris-react/src/components/Modal/components/Footer/Footer.tsx": {
      "filePath": "polaris-react/src/components/Modal/components/Footer/Footer.tsx",
      "name": "FooterProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Modal/components/Footer/Footer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primaryAction",
          "value": "ComplexAction",
          "description": "Primary action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Footer/Footer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "secondaryActions",
          "value": "ComplexAction[]",
          "description": "Collection of secondary actions",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Modal/components/Footer/Footer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside modal",
          "isOptional": true
        }
      ],
      "value": "export interface FooterProps {\n  /** Primary action */\n  primaryAction?: ComplexAction;\n  /** Collection of secondary actions */\n  secondaryActions?: ComplexAction[];\n  /** The content to display inside modal */\n  children?: React.ReactNode;\n}"
    }
  },
  "ItemURLDetails": {
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "name": "ItemURLDetails",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "matches",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "exactMatch",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "matchPaths",
          "value": "string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "excludePaths",
          "value": "string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface ItemURLDetails {\n  url?: string;\n  matches?: boolean;\n  exactMatch?: boolean;\n  matchPaths?: string[];\n  excludePaths?: string[];\n  external?: boolean;\n}"
    }
  },
  "SubNavigationItem": {
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "name": "SubNavigationItem",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "new",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "matches",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "exactMatch",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "matchPaths",
          "value": "string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "excludePaths",
          "value": "string[]",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface SubNavigationItem extends ItemURLDetails {\n  url: string;\n  label: string;\n  disabled?: boolean;\n  new?: boolean;\n  onClick?(): void;\n}"
    }
  },
  "SecondaryActions": {
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "SecondaryActions",
      "value": "[SecondaryAction] | [SecondaryAction, SecondaryAction]",
      "description": ""
    }
  },
  "MatchState": {
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "MatchState",
      "value": "enum MatchState {\n  MatchForced,\n  MatchUrl,\n  MatchPaths,\n  Excluded,\n  NoMatch,\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "name": "MatchForced",
          "value": 0
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "name": "MatchUrl",
          "value": 1
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "name": "MatchPaths",
          "value": 2
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "name": "Excluded",
          "value": 3
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "name": "NoMatch",
          "value": 4
        }
      ]
    }
  },
  "ItemSecondaryActionProps": {
    "polaris-react/src/components/Navigation/components/Item/Item.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
      "name": "ItemSecondaryActionProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabIndex",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "() => void",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tooltip",
          "value": "TooltipProps",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface ItemSecondaryActionProps extends SecondaryAction {\n  tabIndex: number;\n  disabled?: boolean;\n}"
    }
  },
  "PrimaryAction": {
    "polaris-react/src/components/Page/components/Header/Header.tsx": {
      "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
      "name": "PrimaryAction",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "primary",
          "value": "boolean",
          "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "destructive",
          "value": "boolean",
          "description": "Destructive action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "A unique identifier for the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "content",
          "value": "string",
          "description": "Content the action displays",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "Visually hidden text for screen readers",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "A destination to link to, rendered in the action",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "external",
          "value": "boolean",
          "description": "Forces url to open in a new tab",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onAction",
          "value": "() => void",
          "description": "Callback when an action takes place",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onMouseEnter",
          "value": "() => void",
          "description": "Callback when mouse enter",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onTouchStart",
          "value": "() => void",
          "description": "Callback when element is touched",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Whether or not the action is disabled",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "loading",
          "value": "boolean",
          "description": "Should a spinner be displayed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "icon",
          "value": "any",
          "description": "Source of the icon",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/Header.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "React.ReactNode",
          "description": "Text content to render in a tooltip",
          "isOptional": true
        }
      ],
      "value": "interface PrimaryAction\n  extends DestructableAction,\n    DisableableAction,\n    LoadableAction,\n    IconableAction,\n    TooltipAction {\n  /** Provides extra visual weight and identifies the primary action in a set of buttons */\n  primary?: boolean;\n}"
    }
  },
  "PaneProps": {
    "polaris-react/src/components/Popover/components/Pane/Pane.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
      "name": "PaneProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixed",
          "value": "boolean",
          "description": "Fix the pane to the top of the popover",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "Automatically wrap children in padded sections",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The pane content",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
          "syntaxKind": "PropertySignature",
          "name": "height",
          "value": "string",
          "description": "Sets a fixed height and max-height on the Scrollable",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onScrolledToBottom",
          "value": "() => void",
          "description": "Callback when the bottom of the popover is reached by mouse or keyboard",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/Pane/Pane.tsx",
          "syntaxKind": "PropertySignature",
          "name": "captureOverscroll",
          "value": "boolean",
          "description": "Prevents page scrolling when the end of the scrollable Popover content is reached",
          "isOptional": true,
          "defaultValue": "false"
        }
      ],
      "value": "export interface PaneProps {\n  /** Fix the pane to the top of the popover */\n  fixed?: boolean;\n  /** Automatically wrap children in padded sections */\n  sectioned?: boolean;\n  /** The pane content */\n  children?: React.ReactNode;\n  /** Sets a fixed height and max-height on the Scrollable */\n  height?: string;\n  /** Callback when the bottom of the popover is reached by mouse or keyboard  */\n  onScrolledToBottom?(): void;\n  /**\n   * Prevents page scrolling when the end of the scrollable Popover content is reached\n   * @default false\n   */\n  captureOverscroll?: boolean;\n}"
    }
  },
  "PopoverCloseSource": {
    "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "PopoverCloseSource",
      "value": "export enum PopoverCloseSource {\n  Click,\n  EscapeKeypress,\n  FocusOut,\n  ScrollOut,\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "Click",
          "value": 0
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "EscapeKeypress",
          "value": 1
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "FocusOut",
          "value": 2
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "name": "ScrollOut",
          "value": 3
        }
      ]
    }
  },
  "PopoverAutofocusTarget": {
    "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "PopoverAutofocusTarget",
      "value": "'none' | 'first-node' | 'container'",
      "description": ""
    }
  },
  "PopoverOverlayProps": {
    "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx": {
      "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
      "name": "PopoverOverlayProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullWidth",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fullHeight",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fluidContent",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredAlignment",
          "value": "PreferredAlignment",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndexOverride",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "HTMLElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferInputActivator",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "sectioned",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "fixed",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hideOnPrint",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "(source: PopoverCloseSource) => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "autofocusTarget",
          "value": "PopoverAutofocusTarget",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preventCloseOnChildOverlayClick",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "captureOverscroll",
          "value": "boolean",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PopoverOverlayProps {\n  children?: React.ReactNode;\n  fullWidth?: boolean;\n  fullHeight?: boolean;\n  fluidContent?: boolean;\n  preferredPosition?: PositionedOverlayProps['preferredPosition'];\n  preferredAlignment?: PositionedOverlayProps['preferredAlignment'];\n  active: boolean;\n  id: string;\n  zIndexOverride?: number;\n  activator: HTMLElement;\n  preferInputActivator?: PositionedOverlayProps['preferInputActivator'];\n  sectioned?: boolean;\n  fixed?: boolean;\n  hideOnPrint?: boolean;\n  onClose(source: PopoverCloseSource): void;\n  autofocusTarget?: PopoverAutofocusTarget;\n  preventCloseOnChildOverlayClick?: boolean;\n  captureOverscroll?: boolean;\n}"
    }
  },
  "PolarisContainerProps": {
    "polaris-react/src/components/PortalsManager/components/PortalsContainer/PortalsContainer.tsx": {
      "filePath": "polaris-react/src/components/PortalsManager/components/PortalsContainer/PortalsContainer.tsx",
      "name": "PolarisContainerProps",
      "description": "",
      "members": [],
      "value": "export interface PolarisContainerProps {}"
    }
  },
  "DualThumbProps": {
    "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx": {
      "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
      "name": "DualThumbProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "DualValue",
          "description": "Initial value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "number",
          "description": "Minimum possible value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "number",
          "description": "Maximum possible value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "number",
          "description": "Increment value for range input changes"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "ReactNode",
          "description": "Label for the range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "output",
          "value": "boolean",
          "description": "Provide a tooltip while sliding, indicating the current value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "ReactNode",
          "description": "Additional text to aid in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "ReactNode",
          "description": "Element to display before the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "ReactNode",
          "description": "Element to display after the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: RangeSliderValue, id: string) => void",
          "description": "Callback when the range input is changed"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when range input is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        }
      ],
      "value": "export interface DualThumbProps extends RangeSliderProps {\n  value: DualValue;\n  id: string;\n  min: number;\n  max: number;\n  step: number;\n}"
    }
  },
  "KeyHandlers": {
    "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx": {
      "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
      "name": "KeyHandlers",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "name": "[key: string]",
          "value": "() => void"
        }
      ],
      "value": "interface KeyHandlers {\n  [key: string]: () => void;\n}"
    }
  },
  "Control": {
    "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx": {
      "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
      "syntaxKind": "EnumDeclaration",
      "name": "Control",
      "value": "enum Control {\n  Lower,\n  Upper,\n}",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "name": "Lower",
          "value": 0
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/DualThumb/DualThumb.tsx",
          "name": "Upper",
          "value": 1
        }
      ]
    }
  },
  "SingleThumbProps": {
    "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx": {
      "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
      "name": "SingleThumbProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "number",
          "description": "Initial value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "ID for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "min",
          "value": "number",
          "description": "Minimum possible value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "max",
          "value": "number",
          "description": "Maximum possible value for range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "step",
          "value": "number",
          "description": "Increment value for range input changes"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "label",
          "value": "ReactNode",
          "description": "Label for the range input"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelAction",
          "value": "Action",
          "description": "Adds an action to the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "labelHidden",
          "value": "boolean",
          "description": "Visually hide the label",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "output",
          "value": "boolean",
          "description": "Provide a tooltip while sliding, indicating the current value",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "helpText",
          "value": "ReactNode",
          "description": "Additional text to aid in use",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "error",
          "value": "any",
          "description": "Display an error message",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disabled",
          "value": "boolean",
          "description": "Disable input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "prefix",
          "value": "ReactNode",
          "description": "Element to display before the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "PropertySignature",
          "name": "suffix",
          "value": "ReactNode",
          "description": "Element to display after the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: RangeSliderValue, id: string) => void",
          "description": "Callback when the range input is changed"
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when range input is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/RangeSlider/components/SingleThumb/SingleThumb.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        }
      ],
      "value": "export interface SingleThumbProps extends RangeSliderProps {\n  value: number;\n  id: string;\n  min: number;\n  max: number;\n  step: number;\n}"
    }
  },
  "PanelProps": {
    "polaris-react/src/components/Tabs/components/Panel/Panel.tsx": {
      "filePath": "polaris-react/src/components/Tabs/components/Panel/Panel.tsx",
      "name": "PanelProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/components/Panel/Panel.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hidden",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Panel/Panel.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Panel/Panel.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabID",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Panel/Panel.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface PanelProps {\n  hidden?: boolean;\n  id: string;\n  tabID: string;\n  children?: React.ReactNode;\n}"
    }
  },
  "TabProps": {
    "polaris-react/src/components/Tabs/components/Tab/Tab.tsx": {
      "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
      "name": "TabProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "siblingTabHasFocus",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "panelID",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "url",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "measuring",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/Tab/Tab.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClick",
          "value": "(id: string) => void",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface TabProps {\n  id: string;\n  focused?: boolean;\n  siblingTabHasFocus?: boolean;\n  selected?: boolean;\n  panelID?: string;\n  children?: React.ReactNode;\n  url?: string;\n  measuring?: boolean;\n  accessibilityLabel?: string;\n  onClick?(id: string): void;\n}"
    }
  },
  "TabMeasurements": {
    "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx": {
      "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
      "name": "TabMeasurements",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "containerWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "disclosureWidth",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "hiddenTabWidths",
          "value": "number[]",
          "description": ""
        }
      ],
      "value": "interface TabMeasurements {\n  containerWidth: number;\n  disclosureWidth: number;\n  hiddenTabWidths: number[];\n}"
    }
  },
  "TabMeasurerProps": {
    "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx": {
      "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
      "name": "TabMeasurerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabToFocus",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "siblingTabHasFocus",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "React.ReactElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "selected",
          "value": "number",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "tabs",
          "value": "TabDescriptor[]",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tabs/components/TabMeasurer/TabMeasurer.tsx",
          "syntaxKind": "MethodSignature",
          "name": "handleMeasurement",
          "value": "(measurements: TabMeasurements) => void",
          "description": ""
        }
      ],
      "value": "export interface TabMeasurerProps {\n  tabToFocus: number;\n  siblingTabHasFocus: boolean;\n  activator: React.ReactElement;\n  selected: number;\n  tabs: TabDescriptor[];\n  handleMeasurement(measurements: TabMeasurements): void;\n}"
    }
  },
  "ResizerProps": {
    "polaris-react/src/components/TextField/components/Resizer/Resizer.tsx": {
      "filePath": "polaris-react/src/components/TextField/components/Resizer/Resizer.tsx",
      "name": "ResizerProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TextField/components/Resizer/Resizer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "contents",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Resizer/Resizer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "currentHeight",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Resizer/Resizer.tsx",
          "syntaxKind": "PropertySignature",
          "name": "minimumLines",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TextField/components/Resizer/Resizer.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onHeightChange",
          "value": "(height: number) => void",
          "description": ""
        }
      ],
      "value": "export interface ResizerProps {\n  contents?: string;\n  currentHeight?: number | null;\n  minimumLines?: number;\n  onHeightChange(height: number): void;\n}"
    }
  },
  "HandleStepFn": {
    "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx": {
      "filePath": "polaris-react/src/components/TextField/components/Spinner/Spinner.tsx",
      "syntaxKind": "TypeAliasDeclaration",
      "name": "HandleStepFn",
      "value": "(step: number) => void",
      "description": ""
    }
  },
  "TooltipOverlayProps": {
    "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx": {
      "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
      "name": "TooltipOverlayProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preventInteraction",
          "value": "boolean",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "preferredPosition",
          "value": "PreferredPosition",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activator",
          "value": "HTMLElement",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "width",
          "value": "Width",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "padding",
          "value": "Padding",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "borderRadius",
          "value": "BorderRadius",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "PropertySignature",
          "name": "zIndexOverride",
          "value": "number",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Tooltip/components/TooltipOverlay/TooltipOverlay.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface TooltipOverlayProps {\n  id: string;\n  active: boolean;\n  preventInteraction?: PositionedOverlayProps['preventInteraction'];\n  preferredPosition?: PositionedOverlayProps['preferredPosition'];\n  children?: React.ReactNode;\n  activator: HTMLElement;\n  accessibilityLabel?: string;\n  width?: Width;\n  padding?: Padding;\n  borderRadius?: BorderRadius;\n  zIndexOverride?: number;\n  onClose(): void;\n}"
    }
  },
  "SearchProps": {
    "polaris-react/src/components/TopBar/components/Search/Search.tsx": {
      "filePath": "polaris-react/src/components/TopBar/components/Search/Search.tsx",
      "name": "SearchProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/components/Search/Search.tsx",
          "syntaxKind": "PropertySignature",
          "name": "visible",
          "value": "boolean",
          "description": "Toggles whether or not the search is visible",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Search/Search.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "The content to display inside the search",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Search/Search.tsx",
          "syntaxKind": "PropertySignature",
          "name": "overlayVisible",
          "value": "boolean",
          "description": "Whether or not the search results overlay has a visible backdrop",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Search/Search.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDismiss",
          "value": "() => void",
          "description": "Callback when the search is dismissed",
          "isOptional": true
        }
      ],
      "value": "export interface SearchProps {\n  /** Toggles whether or not the search is visible */\n  visible?: boolean;\n  /** The content to display inside the search */\n  children?: React.ReactNode;\n  /** Whether or not the search results overlay has a visible backdrop */\n  overlayVisible?: boolean;\n  /** Callback when the search is dismissed */\n  onDismiss?(): void;\n}"
    }
  },
  "SearchFieldProps": {
    "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx": {
      "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
      "name": "SearchFieldProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "value",
          "value": "string",
          "description": "Initial value for the input"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "placeholder",
          "value": "string",
          "description": "Hint text to display",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "focused",
          "value": "boolean",
          "description": "Force the focus state on the input",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "active",
          "value": "boolean",
          "description": "Force a state where search is active but the text field component is not focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onChange",
          "value": "(value: string) => void",
          "description": "Callback when value is changed"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onFocus",
          "value": "() => void",
          "description": "Callback when input is focused",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onBlur",
          "value": "() => void",
          "description": "Callback when focus is removed",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onCancel",
          "value": "() => void",
          "description": "Callback when search field cancel button is clicked",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
          "syntaxKind": "PropertySignature",
          "name": "showFocusBorder",
          "value": "boolean",
          "description": "Show a border when the search field is focused",
          "isOptional": true
        }
      ],
      "value": "export interface SearchFieldProps {\n  /** Initial value for the input */\n  value: string;\n  /** Hint text to display */\n  placeholder?: string;\n  /** Force the focus state on the input */\n  focused?: boolean;\n  /** Force a state where search is active but the text field component is not focused */\n  active?: boolean;\n  /** Callback when value is changed */\n  onChange(value: string): void;\n  /** Callback when input is focused */\n  onFocus?(): void;\n  /** Callback when focus is removed */\n  onBlur?(): void;\n  /** Callback when search field cancel button is clicked */\n  onCancel?(): void;\n  /** Show a border when the search field is focused */\n  showFocusBorder?: boolean;\n}"
    }
  },
  "MenuProps": {
    "polaris-react/src/components/TopBar/components/Menu/Menu.tsx": {
      "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
      "name": "MenuProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "activatorContent",
          "value": "React.ReactNode",
          "description": "Accepts an activator component that renders inside of a button that opens the menu"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "readonly ActionListSection[]",
          "description": "An array of action objects that are rendered inside of a popover triggered by this menu"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "message",
          "value": "MessageProps",
          "description": "Accepts a message that facilitates direct, urgent communication with the merchant through the menu",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "A boolean property indicating whether the menu is currently open"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onOpen",
          "value": "() => void",
          "description": "A callback function to handle opening the menu popover"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onClose",
          "value": "{ (): void; (): void; }",
          "description": "A callback function to handle closing the menu popover"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "A string that provides the accessibility labeling",
          "isOptional": true
        }
      ],
      "value": "export interface MenuProps {\n  /** Accepts an activator component that renders inside of a button that opens the menu */\n  activatorContent: React.ReactNode;\n  /** An array of action objects that are rendered inside of a popover triggered by this menu */\n  actions: ActionListProps['sections'];\n  /** Accepts a message that facilitates direct, urgent communication with the merchant through the menu */\n  message?: MessageProps;\n  /** A boolean property indicating whether the menu is currently open */\n  open: boolean;\n  /** A callback function to handle opening the menu popover */\n  onOpen(): void;\n  /** A callback function to handle closing the menu popover */\n  onClose(): void;\n  /** A callback function to handle closing the menu popover */\n  onClose(): void;\n  /** A string that provides the accessibility labeling */\n  accessibilityLabel?: string;\n}"
    }
  },
  "UserMenuProps": {
    "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx": {
      "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
      "name": "UserMenuProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "actions",
          "value": "{ items: IconableAction[]; }[]",
          "description": "An array of action objects that are rendered inside of a popover triggered by this menu"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "message",
          "value": "MessageProps",
          "description": "Accepts a message that facilitates direct, urgent communication with the merchant through the user menu",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "name",
          "value": "string",
          "description": "A string detailing the merchant’s full name to be displayed in the user menu"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "detail",
          "value": "string",
          "description": "A string allowing further detail on the merchant’s name displayed in the user menu",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "accessibilityLabel",
          "value": "string",
          "description": "A string that provides the accessibility labeling",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "initials",
          "value": "string",
          "description": "The merchant’s initials, rendered in place of an avatar image when not provided"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "avatar",
          "value": "string",
          "description": "An avatar image representing the merchant",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": "A boolean property indicating whether the user menu is currently open"
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onToggle",
          "value": "() => void",
          "description": "A callback function to handle opening and closing the user menu"
        }
      ],
      "value": "export interface UserMenuProps {\n  /** An array of action objects that are rendered inside of a popover triggered by this menu */\n  actions: {items: IconableAction[]}[];\n  /** Accepts a message that facilitates direct, urgent communication with the merchant through the user menu */\n  message?: MenuProps['message'];\n  /** A string detailing the merchant’s full name to be displayed in the user menu */\n  name: string;\n  /** A string allowing further detail on the merchant’s name displayed in the user menu */\n  detail?: string;\n  /** A string that provides the accessibility labeling */\n  accessibilityLabel?: string;\n  /** The merchant’s initials, rendered in place of an avatar image when not provided */\n  initials: AvatarProps['initials'];\n  /** An avatar image representing the merchant */\n  avatar?: AvatarProps['source'];\n  /** A boolean property indicating whether the user menu is currently open */\n  open: boolean;\n  /** A callback function to handle opening and closing the user menu */\n  onToggle(): void;\n}"
    }
  },
  "DiscardConfirmationModalProps": {
    "polaris-react/src/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.tsx": {
      "filePath": "polaris-react/src/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.tsx",
      "name": "DiscardConfirmationModalProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.tsx",
          "syntaxKind": "PropertySignature",
          "name": "open",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onDiscard",
          "value": "() => void",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.tsx",
          "syntaxKind": "MethodSignature",
          "name": "onCancel",
          "value": "() => void",
          "description": ""
        }
      ],
      "value": "export interface DiscardConfirmationModalProps {\n  open: boolean;\n  onDiscard(): void;\n  onCancel(): void;\n}"
    }
  },
  "SecondaryProps": {
    "polaris-react/src/components/Navigation/components/Item/components/Secondary/Secondary.tsx": {
      "filePath": "polaris-react/src/components/Navigation/components/Item/components/Secondary/Secondary.tsx",
      "name": "SecondaryProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/components/Secondary/Secondary.tsx",
          "syntaxKind": "PropertySignature",
          "name": "expanded",
          "value": "boolean",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/components/Secondary/Secondary.tsx",
          "syntaxKind": "PropertySignature",
          "name": "children",
          "value": "React.ReactNode",
          "description": "",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Navigation/components/Item/components/Secondary/Secondary.tsx",
          "syntaxKind": "PropertySignature",
          "name": "id",
          "value": "string",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "interface SecondaryProps {\n  expanded: boolean;\n  children?: React.ReactNode;\n  id?: string;\n}"
    }
  },
  "MessageProps": {
    "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx": {
      "filePath": "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx",
      "name": "MessageProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx",
          "syntaxKind": "PropertySignature",
          "name": "description",
          "value": "string",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx",
          "syntaxKind": "PropertySignature",
          "name": "action",
          "value": "{ onClick(): void; content: string; }",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx",
          "syntaxKind": "PropertySignature",
          "name": "link",
          "value": "{ to: string; content: string; }",
          "description": ""
        },
        {
          "filePath": "polaris-react/src/components/TopBar/components/Menu/components/Message/Message.tsx",
          "syntaxKind": "PropertySignature",
          "name": "badge",
          "value": "{ content: string; status: Status; }",
          "description": "",
          "isOptional": true
        }
      ],
      "value": "export interface MessageProps {\n  title: string;\n  description: string;\n  action: {onClick(): void; content: string};\n  link: {to: string; content: string};\n  badge?: {content: string; status: BadgeProps['status']};\n}"
    }
  },
  "TitleProps": {
    "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx": {
      "filePath": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
      "name": "TitleProps",
      "description": "",
      "members": [
        {
          "filePath": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
          "syntaxKind": "PropertySignature",
          "name": "title",
          "value": "string",
          "description": "Page title, in large type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
          "syntaxKind": "PropertySignature",
          "name": "subtitle",
          "value": "string",
          "description": "Page subtitle, in regular type",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
          "syntaxKind": "PropertySignature",
          "name": "titleMetadata",
          "value": "React.ReactNode",
          "description": "Important and non-interactive status information shown immediately after the title.",
          "isOptional": true
        },
        {
          "filePath": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
          "syntaxKind": "PropertySignature",
          "name": "compactTitle",
          "value": "boolean",
          "description": "Removes spacing between title and subtitle",
          "isOptional": true
        }
      ],
      "value": "export interface TitleProps {\n  /** Page title, in large type */\n  title?: string;\n  /** Page subtitle, in regular type*/\n  subtitle?: string;\n  /** Important and non-interactive status information shown immediately after the title. */\n  titleMetadata?: React.ReactNode;\n  /** Removes spacing between title and subtitle */\n  compactTitle?: boolean;\n}"
    }
  }
}