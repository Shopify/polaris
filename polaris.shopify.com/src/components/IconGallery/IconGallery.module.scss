.IconGallery {
  display: flex;
}

.Filter {
  padding: 2rem;

  .TextField {
    margin-top: 1.75rem;
  }
}

.SectionHeading {
  padding: 0 3rem;
  font-size: var(--font-size-300);

  b {
    font-weight: var(--font-weight-500);
  }
}

.IconGrid {
  display: grid;
  margin-top: 20px;
  margin-bottom: 3rem;
  flex: 1;
  gap: 2px;
  padding: 0 0 0 2px;

  /*
  This is a bit ugly, but the point is to avoid grid reflow
  when the sidebar appears/disappears. If the grid reflows,
  the user has to reorient themselves in the grid. With this
  solution, the number of items in the grid stays the same
  at any resolution.
  */
  grid-template-columns: repeat(9, 1fr);

  @media screen and (max-width: 2400px) {
    grid-template-columns: repeat(8, 1fr);
  }
  @media screen and (max-width: 2200px) {
    grid-template-columns: repeat(7, 1fr);
  }
  @media screen and (max-width: 2000px) {
    grid-template-columns: repeat(6, 1fr);
  }
  @media screen and (max-width: 1800px) {
    grid-template-columns: repeat(5, 1fr);
  }
  @media screen and (max-width: 1600px) {
    grid-template-columns: repeat(4, 1fr);
  }
  @media screen and (max-width: 1400px) {
    grid-template-columns: repeat(3, 1fr);
  }
  @media screen and (max-width: 1200px) {
    grid-template-columns: repeat(2, 1fr);
  }
  @media screen and (max-width: 1000px) {
    grid-template-columns: repeat(1, 1fr);
  }
}

.Icon {
  transition: all 0.2s ease;

  button {
    appearance: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    gap: 10px;
    cursor: pointer;
    background: #ffffff;
    padding-top: 5px;
    aspect-ratio: 5 / 4;
    background: #fafafa;
    border-radius: var(--border-radius-200);
    transition: background-color 0.05s linear;

    &:hover {
      background: #ededed;
    }
  }
}

.Preview {
  display: flex;
  justify-content: center;
  padding: 3rem 0;
  animation: icon-in 0.25s 0.05s ease both;
}

.IconMeta {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-bottom: 3rem;

  p {
    max-width: 60%;
    text-align: center;
  }
}

.Sidebar {
  width: 28rem;
  animation: sidebar-enter 0.3s cubic-bezier(0.22, 1, 0.36, 1) both;
}

.SidebarInner {
  animation: sidebar-inner-enter 0.3s 0.3s linear both;
  padding: 2rem;
}

.Tabs {
  display: flex;
  margin-bottom: 1rem;
  box-shadow: inset 0 -1px #dddddd;
}

.Tab {
  position: relative;
  padding: 1.25rem 1rem;
  flex: 1;
  cursor: pointer;
  background: transparent;
  transition: background-color 0.1s linear;
  color: var(--text-subdued);

  &[aria-selected="true"] {
    color: black;

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      display: block;
      width: 100%;
      height: 3px;
      border-radius: var(--border-radius-300) var(--border-radius-300) 0 0;
      background: var(--primary);
    }
  }

  &:hover {
    color: black;
  }
}

@keyframes sidebar-enter {
  0% {
    width: 0;
  }

  100% {
    width: 28rem;
  }
}

@keyframes sidebar-inner-enter {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
