@import '../../styles/mixins.scss';

.UnparsablePropsWarning {
  p {
    margin-bottom: 1rem;
  }
  pre {
    font-family: var(--font-family-mono);
    white-space: pre-line;
  }
}

.InterfaceList {
  --props-table-border-color: rgba(0, 0, 0, 0.075);
  @include dark-mode {
    --props-table-border-color: rgba(255, 255, 255, 0.085);
  }
  border-radius: var(--border-radius-400);
  font-size: var(--font-size-100);
  display: block;
  transform-origin: 50% 0;
  border: 1px solid var(--props-table-border-color);
  overflow: hidden;

  .InterfaceList {
    margin-top: 0.75rem;
    margin-bottom: 0.25rem;
    background: rgba(0, 0, 0, 0.01);
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.033);
    @include dark-mode {
      background: rgba(255, 255, 255, 0.005);
    }
  }

  .InterfaceListHeader {
    width: 100%;
    text-align: left;
    color: var(--code-keyword);
    font-family: var(--font-family-mono);
    padding: 0.5em 1em;
    background: rgba(0, 0, 0, 0.035);
    @include dark-mode {
      background: rgba(255, 255, 255, 0.05);
    }
  }

  .Description {
    display: block;
    font-size: var(--font-size-50);
  }

  .RawInterfaceValue {
    padding: 0.666em 1em;
  }

  .Row {
    display: block;
    padding: 0.75em 1em;
    border-bottom: 1px solid var(--props-table-border-color);

    &:last-child {
      border-bottom: none;
    }
  }

  .Key {
    display: flex;
    gap: 0.6rem;
  }

  .ExpandableType {
    background: transparent;

    &[aria-expanded='false'] {
      border-bottom: 1px dashed var(--border-color);
    }
  }

  .MemberName {
    font-weight: var(--font-weight-500);
    color: var(--text-strong);
    flex-shrink: 0;
  }

  .Value {
    word-break: break-word;
  }

  .ValueText {
    font-family: var(--font-family-mono);
  }
}

.SyntaxString {
  color: var(--code-string);
}

.SyntaxBoolean {
  color: var(--code-boolean);
}

.SyntaxType {
  color: var(--code-keyword);
}

.SyntaxNumber {
  color: var(--code-number);
}

// .SyntaxKeyword {
//   color: var(--code-keyword);
// }
