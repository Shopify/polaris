@import '../../styles/variables.scss';
@import '../../styles/mixins.scss';

$breakpointNav: $breakpointTablet;

.Header {
  position: sticky;
  top: 0;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 1.5rem;
  height: var(--header-height);
  user-select: none;
  background: var(--surface);
  z-index: 10;
}

.NavAndContent {
  display: flex;
  overflow-wrap: anywhere;
}

.PageContent {
  display: flex;
  flex-direction: column;
  flex: 1;

  > * {
    width: 100%;
  }
}

.Nav {
  position: sticky;
  top: var(--header-height);
  height: calc(100vh - var(--header-height));
  min-width: 18rem;
  max-width: 18rem;
  background: var(--surface-subdued);
  border-radius: 0 var(--border-radius-600) var(--border-radius-600) 0;
  padding: 1rem 4px 1.5rem 6px;
  user-select: none;
  @include custom-scrollbars;
  overscroll-behavior: contain;
  overflow: scroll;

  @media screen and (max-width: $breakpointNav) {
    padding-top: 4.75rem;
  }

  .newSection {
    margin-top: 1.25rem;
  }

  a {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: pre;
    overflow: hidden;
    text-overflow: ellipsis;
    color: var(--text);

    &:hover {
      color: var(--text-strong);
    }
  }

  > ul {
    display: flex;
    flex-direction: column;

    > li {
      .NavItem {
        font-size: var(--font-size-400);
        letter-spacing: var(--letter-spacing-100);
        color: var(--text-strong);

        + ul > li:first-child {
          padding-top: 0.125rem;
        }

        + ul > li:last-child {
          padding-bottom: 1rem;
        }

        > a {
          padding: 0.033rem 0;
          color: var(--text-strong);

          @media screen and (max-width: $breakpointNav) {
            padding: 0.4rem 0;
            font-size: var(--font-size-400);
          }
        }

        &.isCurrent > a {
          color: var(--primary);
        }
      }

      > ul > li {
        > .NavItem {
          font-size: var(--font-size-200);
          letter-spacing: var(--letter-spacing-300);
          padding-left: 2.25rem;

          > a {
            color: var(--text-strong);
          }

          &.isCurrent > a {
            color: var(--primary);
          }
        }

        > ul > li {
          > .NavItem {
            font-size: var(--font-size-200);
            letter-spacing: var(--letter-spacing-300);
            padding-left: 2.75rem;

            > a {
              color: var(--text);
            }

            &.isCurrent > a {
              color: var(--primary);
            }
          }
        }
      }

      > ul > li > ul > li {
        > .NavItem {
          font-size: var(--font-size-200);
          letter-spacing: var(--letter-spacing-300);
          padding-left: 3rem;

          > a {
            color: var(--text);
            white-space: normal;
          }

          &.isCurrent > a {
            color: var(--primary);
          }
        }
      }
    }
  }

  @media screen and (max-width: $breakpointNav) {
    display: none;

    &.isVisible {
      display: block;
      position: fixed;
      top: 0;
      z-index: 11;
      box-shadow: 0 0 100px rgba(0, 0, 0, 0.33);
      height: 100vh;
      border-radius: 0;
    }
  }
}

.NavItem {
  display: flex;
  position: relative;
  justify-content: space-between;
  align-items: center;
  padding: 0.025rem 0.75rem 0.025rem 1.5rem;
  border-radius: var(--border-radius-500);
  transition: box-shadow 0.2s linear;

  &:hover {
    background: var(--surface);
  }

  &.isCurrent {
    background: var(--surface);
    font-weight: var(--font-weight-500);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.033), 0 2px 50px rgba(0, 0, 0, 0.033);

    &:before {
      content: '';
      display: block;
      position: absolute;
      top: 4px;
      bottom: 4px;
      left: 4px;
      width: 4px;
      background: var(--primary);
      border-radius: var(--border-radius-400);
      animation: fade-in 0.1s ease-out both;

      @keyframes fade-in {
        from {
          transform: scale(0.8);
          opacity: 0;
        }
        to {
          transform: scale(1);
          opacity: 1;
        }
      }
    }
  }

  a {
    flex: 1;
  }

  .Toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    border-radius: 100%;
    background-color: transparent;
    background-image: url(/images/PlusMinor.svg);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 12px 12px;
    opacity: 0.66;

    @media screen and (max-width: $breakpointNav) {
      width: 36px;
      height: 36px;
    }

    &:hover {
      opacity: 1;
      background-color: var(--surface-subdued);
    }

    &[aria-expanded='true'] {
      background-image: url(/images/MinusMinor.svg);
    }
  }
}

.NavToggle {
  min-width: 24px;
  max-width: 24px;
  height: 24px;
  margin-right: 1rem;
  background-color: transparent;

  svg {
    transform: scale(0.8);

    @include dark-mode {
      fill: white;
    }
  }

  @media screen and (min-width: $breakpointNav) {
    display: none;
  }

  @media screen and (max-width: $breakpointMobile) {
    margin-right: auto;
  }
}

.CloseButton {
  display: none;

  @media screen and (max-width: $breakpointNav) {
    display: block;
    position: absolute;
    top: 20px;
    right: 20px;
    width: 36px;
    height: 36px;
    background-color: transparent;
    border-radius: var(--border-radius-round);

    svg {
      transform: scale(0.5);
    }
  }

  @include dark-mode {
    fill: white;
  }
}

.Logo {
  display: flex;
  align-items: center;
  color: inherit;
  gap: 0.5rem;
  margin-left: 0.25rem;
  font-weight: var(--font-weight-500);
  font-size: var(--font-size-200);
  color: var(--text-strong);
  margin-right: auto;

  img {
    opacity: 0.8;
  }

  p {
    margin: 0;
  }

  span {
    transform: translate3d(0, -1px, 0);
  }

  @media screen and (max-width: $breakpointMobile) {
    display: none;
  }
}

.SkipToContentLink {
  top: 2px;
  right: 2px;
  left: 2px;
  height: calc(var(--header-height) - 4px);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-500);
  background-color: var(--surface);
  color: var(--text-strong);
  font-weight: var(--font-weight-500);
  z-index: 1;
  position: absolute;
  transform: translateY(-115%);

  &:focus {
    transform: translateY(0%);
  }
}

.DarkModeToggle {
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  width: 2.25rem;
  height: 2.25rem;
  border-radius: var(--border-radius-round);
}

.LightModeIcon {
  animation: slide-up 0.3s;
}

.DarkModeIcon {
  animation: slide-down 0.3s;
}
