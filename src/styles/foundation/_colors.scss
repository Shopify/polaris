// stylelint-disable-next-line scss/partial-no-import
@import '../polaris-tokens/colors.color-map';

///
/// Color data
///
/// Shopify color palette, extended specifically for polaris-react.
///
/// @type map
$color-palette-data: $polaris-colors;

// Add state colors to the palette
$color-palette-data: map-extend(
  $color-palette-data,
  (
    'state': (
      'hover': rgba(223, 227, 232, 0.3),
      'focused': rgba(223, 227, 232, 0.3),
      'active': rgba(179, 188, 245, 0.1),
      'selected': rgba(179, 188, 245, 0.15),
      'subdued': rgba(249, 250, 251, 1),
      'disabled': rgba(249, 250, 251, 1),
      'hover-destructive': rgba(251, 234, 229, 0.4),
      'focused-destructive': rgba(251, 234, 229, 0.4),
      'active-destructive': rgba(220, 56, 37, 0.03),
    ),
  )
);

///
/// Color palette for Windows high-contrast mode
/// See https://bit.ly/2vN9aGO
///
/// @type map

$ms-high-contrast-color-data: (
  'text': windowText,
  'disabled-text': grayText,
  'selected-text': highlightText,
  'selected-text-background': highlight,
  'button-text': buttonText,
  'button-text-background': buttonFace,
  'background': window,
);

///
/// Returns the color value for Windows high contrast mode
///
/// @param {String} $color - The name of the high-contrast color.
/// @return {Color} The color value.

@function ms-high-contrast-color($color) {
  $fetched-color: map-get($ms-high-contrast-color-data, $color);

  @if $fetched-color {
    @return $fetched-color;
  } @else {
    @error "Color `#{$color}` not found.\a Make sure argument is a string.\a GOOD: ms-high-contrast-color('selected-text').\a BAD: ms-high-contrast-color(selected-text).\a\a Available options: #{available-names($ms-high-contrast-color-data)}";
  }
}
