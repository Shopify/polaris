@mixin high-contrast-button-outline($outline: 2px dotted) {
  @media (-ms-high-contrast: active) {
    outline: $outline;
  }
}

@mixin button-base {
  $min-height: control-height();
  $vertical-padding: ($min-height - line-height(body) - rem(2px)) / 2;

  @include recolor-icon(color('ink', 'lighter'));
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: $min-height;
  min-width: $min-height;
  margin: 0;
  padding: $vertical-padding spacing();
  background: var(
    --p-neutral-action,
    linear-gradient(to bottom, color('white'), color('sky', 'lighter'))
  );
  border: var(--p-none, border(dark));
  box-shadow: var(--p-none, shadow(faint));
  border-radius: var(--p-border-radius-base, border-radius());
  line-height: 1;
  color: var(--p-text-on-surface, color('ink'));
  text-align: center;
  cursor: pointer;
  user-select: none;
  text-decoration: none;
  transition-property: background, border, box-shadow;
  transition-duration: duration();
  transition-timing-function: easing();
  -webkit-tap-highlight-color: transparent;

  &:hover {
    background: var(
      --p-neutral-action-hovered,
      linear-gradient(to bottom, color('sky', 'lighter'), color('sky', 'light'))
    );
    border-color: var(--p-none, color('sky', 'dark'));
  }

  &:focus {
    border-color: var(--p-transparent, color('indigo'));
    outline: 0;
    box-shadow: var(--p-none, 0 0 0 1px color('indigo'));

    @include focus-ring;
    @include high-contrast-button-outline;
  }

  &:active {
    // Same color gradient is necessary for background transitions
    background: var(
      --p-neutral-action-pressed,
      linear-gradient(to bottom, color('sky', 'light'), color('sky', 'light'))
    );
    border-color: var(--p-none, color('sky', 'dark'));
    box-shadow: var(
      --p-none,
      0 0 0 0 transparent,
      inset 0 1px 1px 0 rgba(color('ink', 'lighter'), 0.1),
      inset 0 1px 4px 0 rgba(color('ink', 'lighter'), 0.2)
    );

    &::after {
      border: none;
    }
  }
}

@mixin base-button-disabled {
  @include recolor-icon(color('ink', 'lightest'));
  transition: none;
  background: var(
    --p-neutral-action-disabled,
    linear-gradient(to bottom, color('sky', 'light'), color('sky', 'light'))
  );
  color: var(--p-text-disabled-on-surface, color('ink', 'lightest'));
}

@mixin button-filled($button-color, $focus-color, $outline-color: null) {
  $border-color: darken($button-color, 10%);
  $active-color: darken($button-color, 15%);
  background: var(
    --p-button-color,
    linear-gradient(
      to bottom,
      lighten($button-color, 2%),
      darken($button-color, 2%)
    )
  );
  border-color: var(--p-transparent, $border-color);
  box-shadow: var(
    --p-none,
    inset 0 1px 0 0 lighten($button-color, 3%),
    shadow(faint),
    0 0 0 0 transparent
  );
  color: var(--p-text-on-branded, color('white'));

  &:hover {
    background: var(
      --p-button-color-hover,
      linear-gradient(to bottom, $button-color, darken($button-color, 5%))
    );
    border-color: var(--p-transparent, $border-color);
    color: var(--p-text-on-branded, color('white'));
    text-decoration: none;
  }

  &:focus {
    border-color: var(--p-transparent, $focus-color);
    box-shadow: var(
      --p-none,
      inset 0 1px 0 0 lighten($button-color, 5%),
      shadow(faint),
      0 0 0 1px $focus-color
    );
  }

  &:active {
    background: var(
      --p-button-color-active,
      linear-gradient(to bottom, $border-color, $border-color)
    );
    border-color: var(--p-transparent, $active-color);
    box-shadow: var(
      --p-none,
      inset 0 0 0 0 transparent,
      shadow(faint),
      0 0 1px 0 $active-color
    );
  }
}

@mixin button-filled-disabled($button-color) {
  @include recolor-icon(color('white'));
  // Transition gradient to gradient to avoid flicker
  background: var(
    --p-button-color-disabled,
    linear-gradient(
      to bottom,
      lighten($button-color, 25%),
      lighten($button-color, 25%)
    )
  );
  border-color: var(--p-transparent, lighten($button-color, 20%));
  box-shadow: none;
  color: var(--p-text-on-branded, color('white'));
}

@mixin button-outline($outline-color) {
  background: transparent;
  border-color: rgba($outline-color, 0.4);
  box-shadow: none;
  color: darken($outline-color, 20%);

  &:hover {
    background: rgba($outline-color, 0.05);
    border-color: rgba($outline-color, 0.4);
  }

  &:focus {
    border-color: rgba($outline-color, 0.8);
    box-shadow: 0 0 0 1px rgba($outline-color, 0.8);
  }

  &:active {
    background: rgba($outline-color, 0.1);
    box-shadow: none;
  }
}

@mixin button-outline-disabled($outline-color) {
  background: transparent;
  border-color: rgba($outline-color, 0.25);
  box-shadow: none;
  color: color('ink', 'lightest');

  @include recolor-icon(color('ink', 'lightest'));
}

@mixin button-full-width {
  display: flex;
  width: 100%;
}

@function plain-button-background() {
  @return rgba(color('ink'), 0.1);
}

@mixin plain-button-backdrop() {
  padding: 2px 5px;
  margin: -2px -5px;
  background: plain-button-background();
  border-radius: border-radius();
  transition: opacity duration() easing();
}

@mixin unstyled-button() {
  appearance: none;
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  font-size: inherit;
  line-height: inherit;
  cursor: pointer;

  &:focus {
    outline: none;
  }
}
