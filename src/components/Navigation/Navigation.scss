@import '../../styles/common';
@import './variables';

// Base Navigation styles
$active-indicator-width: rem(3px);
$nav-max-width: rem(360px);

.Navigation {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  width: mobile-nav-width();
  min-width: layout-width(nav);
  max-width: $nav-max-width;
  height: 100%;
  min-height: 100%;
  background-color: var(--p-background);
  -webkit-overflow-scrolling: touch;
  border-right: border('divider');

  @include safe-area-for(padding-bottom, 0, bottom);

  &:focus {
    outline: none;
  }

  @include breakpoint-after(nav-min-window-corrected()) {
    max-width: layout-width(nav);
    @include safe-area-for(max-width, layout-width(nav), left);
  }
}

.UserMenu {
  flex: 0 0 auto;
}

.ContextControl {
  min-height: top-bar-height();

  @include breakpoint-after(nav-min-window-corrected()) {
    display: none;
  }
}

.PrimaryNavigation {
  display: flex;
  overflow: auto;
  flex: 1 1 auto;
  flex-direction: column;
  align-items: stretch;
  max-width: 100%;

  &:focus {
    outline: none;
  }

  @include breakpoint-after(nav-min-window-corrected()) {
    padding-top: rem(12px);
  }
}

.LogoContainer {
  display: none;
  @include breakpoint-before(nav-min-window-corrected()) {
    display: flex;
    flex: 0 0 top-bar-height();
    align-items: center;
    height: top-bar-height();
    padding: 0 spacing(tight) 0 spacing(base);
    @include safe-area-for(flex-basis, top-bar-height(), left);
    @include safe-area-for(padding-left, spacing(), left);
  }
}

.Logo,
.LogoLink {
  display: block;
}

// Item styles
$disabled-fade: 0.6;

.Item {
  @include nav-item-attributes;
  position: relative;
}

.Item-selected {
  font-weight: 600;
  color: var(--p-text-primary);
  background-color: var(--p-background-selected);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: -1 * spacing(tight);
    height: 100%;
    width: $active-indicator-width;
    background-color: var(--p-action-primary);
    border-top-right-radius: var(--p-border-radius-base);
    border-bottom-right-radius: var(--p-border-radius-base);
  }

  @include high-contrast-outline;

  @include focus-ring;

  &:hover,
  &.keyFocused {
    background-color: var(--p-background-hovered);
    color: var(--p-text-primary-hovered);
  }

  .keyFocused {
    @include focus-ring($style: 'focused');
  }

  &:active,
  &:active:hover {
    @include no-focus-ring;
    color: var(--p-text-primary);
    background-color: var(--p-background-pressed);
  }
}

.Item-disabled {
  color: var(--p-text-disabled);
  pointer-events: none;
  opacity: $disabled-fade;

  .Icon {
    // Re-apply another layer of opacity fade,
    // as the new filled icons have a stronger visual presence
    // than the old outlined ones.
    opacity: $disabled-fade;
  }
}

.Badge {
  margin-left: spacing(tight);
  display: inline-flex;
  margin-top: spacing(tight);

  @include breakpoint-after(nav-min-window-corrected()) {
    margin-top: spacing(extra-tight);
  }
}

.Icon {
  @include nav-item-icon-attributes;
}

.ListItem {
  @include nav-list-item-attributes;

  &:not(:first-child) {
    .Item {
      border-top: 1px solid var(--p-background);
    }
  }
}

.ListItem-hasAction .Item {
  max-width: calc(
    100% - #{nav(icon-size) + spacing() * 2 + spacing(extra-tight)}
  );
}

.ItemWrapper {
  display: flex;
  flex-wrap: nowrap;
  width: 100%;
}

.Text {
  @include nav-item-text-attributes;
}

.SecondaryAction {
  @include recolor-icon(var(--p-icon));
  display: flex;
  align-items: center;
  height: nav(mobile-height);
  margin-right: spacing(extra-tight);
  padding: spacing(extra-tight) spacing();
  border-radius: var(--p-border-radius-base);

  @include breakpoint-after(nav-min-window-corrected()) {
    height: nav(desktop-height);
  }

  &:hover,
  &:focus,
  &:active {
    @include recolor-icon(
      var(--p-icon-hovered),
      var(--p-override-transparent),
      $filter-color: filter('action')
    );
    background: var(--p-background-hovered);

    @media (-ms-high-contrast: active) {
      @include recolor-icon(
        $fill-color: color('white'),
        $filter-color: filter('white')
      );
    }
  }

  @include focus-ring;

  &:focus {
    @include focus-ring($style: 'focused');
  }

  &:active {
    @include no-focus-ring;
    @include recolor-icon(var(--p-icon-pressed));
    background: var(--p-background-pressed);
  }

  &:focus,
  &:active {
    outline: none;
  }
}

// Secondary styles
$secondary-item-font-size: rem(15px);
.SecondaryNavigation {
  flex-basis: 100%;
  margin-left: 0;
  overflow-x: visible;

  &.isExpanded {
    margin-bottom: spacing(tight);
  }

  .List {
    @include unstyled-list;
  }

  .Item {
    font-size: $secondary-item-font-size;
    font-weight: 500;
    line-height: nav(item-line-height);
    color: var(--p-text-subdued);
    padding-left: nav(icon-size) + spacing(extra-loose) - spacing(extra-tight);

    &:hover {
      color: var(--p-text-subdued);
    }

    // stylelint-disable-next-line selector-max-class
    &.keyFocused {
      @include focus-ring($style: 'focused');
      color: var(--p-text);
    }

    // stylelint-disable-next-line selector-max-specificity
    &:active,
    &:active:hover {
      @include no-focus-ring;
    }

    &:active {
      color: var(--p-text-primary);
    }

    @include breakpoint-after(nav-min-window-corrected()) {
      font-size: $item-font-size-small;
      line-height: rem(28px);
    }
  }

  .Text {
    margin-top: rem(6px);
    margin-bottom: rem(6px);
    line-height: rem(20px);
  }

  .Item-selected {
    color: var(--p-text-primary);
    @include focus-ring;

    &:hover {
      color: var(--p-text-primary-hovered);
    }
    // stylelint-disable-next-line selector-max-class
    &.keyFocused {
      color: var(--p-text-primary);
    }
    &:active {
      color: var(--p-text-primary);
      @include no-focus-ring;
    }
  }
  .Item-disabled {
    font-weight: 500;
    color: var(--p-text-disabled);
  }
}

.SecondaryNavigation-noIcon {
  margin-left: spacing();
}

// Section styles
.Section {
  @include unstyled-list;
  flex: 0 0 auto;
  padding: spacing() 0;
  padding-top: 0;
  @include safe-area-for(padding-left, 0, left);

  + .Section {
    padding-top: spacing(extra-tight);
    padding-bottom: spacing();
  }
}

.Section-fill {
  flex: 1 0 auto;
}

.Section-withSeparator {
  border-top: border('divider');
}

.SectionHeading {
  @include text-style-subheading;
  display: flex;
  align-items: center;
  min-height: nav(desktop-nav-height);
  padding-left: spacing();

  .Text {
    font-size: font-size(subheading);
    color: var(--p-text-subdued);

    @include when-typography-not-condensed {
      font-size: font-size(subheading, large-screen);
    }
  }

  .Action {
    @include unstyled-button;
    @include recolor-icon(var(--p-icon));
    display: flex;
    align-items: center;
    height: nav(mobile-nav-height);
    margin-right: spacing(extra-tight);
    padding: spacing(extra-tight) spacing();
    border-radius: var(--p-border-radius-base);

    @include breakpoint-after(nav-min-window-corrected()) {
      height: nav(desktop-nav-height);
    }

    @include focus-ring;

    &:hover,
    &:focus {
      background: var(--p-background-hovered);
      @include recolor-icon(
        var(--p-icon-hovered),
        var(--p-override-transparent)
      );

      @media (-ms-high-contrast: active) {
        @include recolor-icon(
          $fill-color: color('white'),
          $filter-color: filter('white')
        );
      }
    }

    &:hover {
      @include recolor-icon($filter-color: filter('action'));
    }

    &:focus {
      @include focus-ring($style: 'focused');
    }

    // stylelint-disable-next-line selector-max-specificity
    &:focus:hover {
      @include recolor-icon(var(--p-icon-hovered));
    }

    // stylelint-disable-next-line selector-max-specificity
    &:active,
    &:active:hover {
      @include recolor-icon(var(--p-icon-pressed));
      background: var(--p-background-pressed);
      @include no-focus-ring;
    }

    &:focus,
    &:active {
      outline: none;
    }
  }
}

.RollupToggle {
  @include text-emphasis-normal;
  @include text-emphasis-subdued;

  &:hover {
    @include recolor-icon(
      var(--p-action-primary),
      null,
      $filter-color: filter('action')
    );
    color: var(--p-text-primary);
  }

  &:focus {
    outline: none;
    @include focus-ring($style: 'focused');
  }
}

.List {
  @include unstyled-list;
}

.Indicator {
  position: relative;
  display: inline-block;
  height: rem(10px);
  width: rem(10px);
}

.SecondaryNavigation-noIcon .Item {
  padding-left: spacing(tight) + spacing(extra-tight);
}
