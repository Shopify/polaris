@import '../../styles/common';

.Icon {
  display: block;
  height: rem(20px);
  width: rem(20px);
  max-height: 100%;
  max-width: 100%;
  margin: auto;
}

.hasBackdrop {
  position: relative;
  display: flex;
  align-items: center;
  margin: spacing(extra-tight);

  &::before {
    content: '';
    position: absolute;
    top: -1 * spacing(extra-tight);
    bottom: -1 * spacing(extra-tight);
    left: -1 * spacing(extra-tight);
    right: -1 * spacing(extra-tight);
    border-radius: 50%;
  }
}

.isColored {
  color: var(--p-surface, color('white'));
}

.colorWhite {
  @include color-icon('white');
  color: transparent;

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-subdued));
  }
}

.colorBlack {
  @include color-icon('black');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorSkyLighter {
  @include color-icon('sky', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-subdued));
  }
}

.colorSkyLight {
  @include color-icon('sky', 'light');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-subdued));
  }
}

.colorSky {
  @include color-icon('sky');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-subdued));
  }
}

.colorSkyDark {
  @include color-icon('sky', 'dark');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-subdued));
  }
}

.colorInkLightest {
  @include color-icon('ink', 'lightest');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorInkLighter {
  @include color-icon('ink', 'lighter');

  &::before {
    background-color: var(--p-surface, color('sky'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorInkLight {
  @include color-icon('ink', 'light');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorInk {
  @include color-icon('ink');

  &::before {
    background-color: var(--p-surface, color('sky'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorBlueLighter {
  @include color-icon('blue', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorBlueLight {
  @include color-icon('blue', 'light');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorBlue {
  @include color-icon('blue');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorBlueDark {
  @include color-icon('blue', 'dark');

  &::before {
    background-color: var(--p-surface-highlight, color('blue', 'light'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorBlueDarker {
  @include color-icon('blue', 'darker');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon));
  }
}

.colorIndigoLighter {
  @include color-icon('indigo', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-action-primary));
  }
}

.colorIndigoLight {
  @include color-icon('indigo', 'light');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-action-primary));
  }
}

.colorIndigo {
  @include color-icon('indigo');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-action-primary));
  }
}

.colorIndigoDark {
  @include color-icon('indigo', 'dark');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-action-primary));
  }
}

.colorIndigoDarker {
  @include color-icon('indigo', 'darker');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-action-primary));
  }
}

.colorTealLighter {
  @include color-icon('teal', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-highlight));
  }
}

.colorTealLight {
  @include color-icon('teal', 'light');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-highlight));
  }
}

.colorTeal {
  @include color-icon('teal');

  &::before {
    background-color: var(--p-surface-highlight, color('white'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-highlight));
  }
}

.colorTealDark {
  @include color-icon('teal', 'dark');

  &::before {
    background-color: var(--p-surface-highlight, color('teal', 'light'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-highlight));
  }
}

.colorTealDarker {
  @include color-icon('teal', 'darker');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-highlight));
  }
}

.colorGreenLighter {
  @include color-icon('green', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-success));
  }
}

.colorGreen {
  @include color-icon('green');

  &::before {
    background-color: var(--p-surface-success, color('green', 'lighter'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-success));
  }
}

.colorGreenDark {
  @include color-icon('green', 'dark');

  &::before {
    background-color: var(--p-surface-success, color('green', 'light'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-success));
  }
}

.colorYellowLighter {
  @include color-icon('yellow', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-warning));
  }
}

.colorYellow {
  @include color-icon('yellow');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-warning));
  }
}

.colorYellowDark {
  @include color-icon('yellow', 'dark');

  &::before {
    background-color: var(--p-surface-warning, color('yellow', 'light'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-warning));
  }
}

.colorOrange {
  @include color-icon('orange');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-warning));
  }
}

.colorOrangeDark {
  @include color-icon('orange', 'dark');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-warning));
  }
}

.colorRedLighter {
  @include color-icon('red', 'lighter');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-critical));
  }
}

.colorRed {
  @include color-icon('red');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-critical));
  }
}

.colorRedDark {
  @include color-icon('red', 'dark');

  &::before {
    background-color: var(--p-surface-critical, color('red', 'light'));
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-critical));
  }
}

.colorPurple {
  @include color-icon('purple');

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-highlight));
  }
}

// New design language color styles

.colorBase {
  @include recolor-icon(var(--p-icon));
}

.colorSubdued {
  @include recolor-icon(var(--p-icon-subdued));
}

.colorCritical {
  @include recolor-icon(var(--p-icon-critical));
}

.colorWarning {
  @include recolor-icon(var(--p-icon-warning));
}

.colorHighlight {
  @include recolor-icon(var(--p-icon-highlight));
}

.colorSuccess {
  @include recolor-icon(var(--p-icon-success));
}

.colorPrimary {
  @include recolor-icon(var(--p-action-primary));
}

.Svg,
.Img {
  position: relative;
  display: block;
  width: 100%;
  max-width: 100%;
  max-height: 100%;
}

.Placeholder {
  padding-bottom: 100%;
  background: currentColor;
}
