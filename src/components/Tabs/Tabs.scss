@import '../../styles/common';

$item-min-height: rem(16px);
$item-min-width: rem(50px);
$item-vertical-padding: $item-min-height / 2;
$underline-height: border-width(thicker);
$focus-state-box-shadow-color: rgba(0, 0, 0, 0.8);

.Tabs {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  list-style: none;
}

.Wrapper {
  border-bottom: border('divider');
  padding: 0 spacing(tight);
}

.fitted {
  flex-wrap: nowrap;

  .TabContainer {
    flex: 1 1 100%;
  }

  .Title {
    width: 100%;
    padding: spacing(tight) spacing();
  }
}

.fillSpace {
  .TabContainer {
    flex: 1 1 auto;
  }
}

.TabContainer {
  display: flex;
  margin: 0;
  padding: 0;
}

.Tab {
  @include unstyled-link;
  @include unstyled-button;
  @include text-style-body;
  @include text-emphasis-subdued;
  color: var(--p-text);
  position: relative;
  justify-content: center;
  width: 100%;
  min-width: 100%; // IE11 fix for overflowing flex items from parent container
  margin-top: 1px;
  margin-bottom: -1px;
  padding: spacing(tight) spacing(extra-tight);
  outline: none;
  text-align: center;
  white-space: nowrap;
  text-decoration: none;
  cursor: pointer;

  &:hover {
    text-decoration: none;

    .Title {
      @include text-emphasis-normal;
      background-color: transparent;
      // stylelint-disable-next-line selector-max-specificity
      &::before {
        background-color: var(--p-border-hovered);
      }
    }
  }

  &:active {
    .Title {
      background-color: transparent;
      // stylelint-disable-next-line selector-max-specificity
      &::before {
        background: var(--p-surface-primary-selected-pressed);
      }
    }
  }

  &:focus {
    .Title {
      @include text-emphasis-normal;
    }

    &:not(:active) {
      // stylelint-disable-next-line selector-max-specificity
      .Title {
        @include focus-ring($style: 'focused');
      }
    }
  }
}

.Tab-selected {
  @include text-emphasis-normal;
  &:focus .Title {
    @include high-contrast-outline($border-width: border-width(thicker));
    // stylelint-disable-next-line  selector-max-specificity
    &::before {
      background: var(--p-action-primary);
    }
  }

  .Title {
    @include high-contrast-outline($border-width: border-width(thicker));
    color: var(--p-text);

    &::before {
      background: var(--p-action-primary);
    }
  }
}

.Title {
  @include focus-ring;
  border-radius: var(--p-border-radius-base);
  display: block;
  padding: spacing(tight) spacing();
  min-width: $item-min-width;
  color: var(--p-text-subdued);

  &::before {
    content: '';
    position: absolute;
    bottom: -1 * spacing(tight);
    left: 0;
    right: 0;
    height: $underline-height;
    border-top-left-radius: var(--p-border-radius-base);
    border-top-right-radius: var(--p-border-radius-base);
  }
}

.titleWithIcon {
  display: flex;
}

.Panel {
  display: block;

  &:focus {
    outline: none;
  }
}

.Panel-hidden {
  display: none;
}

.List {
  list-style: none;
  margin: 0;
  padding: spacing(tight);
}

.Item {
  @include unstyled-link;
  @include unstyled-button;
  @include focus-ring;
  display: block;
  width: 100%;
  min-height: $item-min-height;
  padding: $item-vertical-padding spacing();
  text-align: left;
  cursor: pointer;
  border-radius: var(--p-border-radius-base);

  &::-moz-focus-inner {
    border: none;
  }

  &:hover {
    background-color: var(--p-surface-hovered);
  }

  &:active {
    background-color: var(--p-surface-primary-selected-pressed);
  }

  // stylelint-disable-next-line selector-max-specificity
  &:focus:not(:active) {
    @include focus-ring($style: 'focused');
  }
}

.DisclosureTab {
  display: none;
}

.DisclosureTab-visible {
  display: flex;
}

.DisclosureActivator {
  @include focus-ring;
  height: 100%;
  background-color: transparent;
  cursor: pointer;
  border: none;
  outline: none;
  margin: 1px 1px -1px 0;

  &:hover,
  &:focus {
    @include recolor-icon(var(--p-icon));
  }

  &:focus .Title {
    @include focus-ring($style: 'focused');
  }

  // stylelint-disable-next-line selector-max-specificity
  &:hover .Title::before {
    background-color: var(--p-border-hovered);
  }
}

.TabMeasurer {
  display: flex;
  visibility: hidden;
  height: 0;
}
