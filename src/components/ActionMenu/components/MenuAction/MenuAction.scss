@import '../../../../styles/common';
@import '../../variables';

$difference-between-touch-area-and-backdrop: control-height() -
  control-slim-height();

.MenuAction {
  @include unstyled-button;
  @include text-style-body;
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: 0 $menu-action-padding-x;
  min-height: control-height();
  text-decoration: none;
  color: var(--p-text, color('ink', 'light'));

  // Start - Delete below me when rolling out global theming
  &:hover,
  &:active {
    color: color('ink');

    .IconWrapper {
      @include recolor-icon(color('ink'), color('white'));
    }
  }

  &:focus,
  &:active {
    &::after {
      background: plain-button-background();
    }
  }

  &::after {
    content: '';
    position: absolute;
    top: 0.5 * $difference-between-touch-area-and-backdrop;
    right: spacing(extra-tight);
    left: spacing(extra-tight);
    display: block;
    height: control-slim-height();
    border-radius: border-radius();
    background: transparent;
    will-change: background;
    transition-property: background;
    transition-duration: duration();
    transition-timing-function: easing();
  }

  &.disabled {
    color: color('ink', 'lightest');
    cursor: default;
    pointer-events: none;

    .IconWrapper {
      @include recolor-icon(color('ink', 'lightest'));
    }
  }
  // End - Delete after me when rolling out global theming

  &.globalTheming {
    @include focus-ring;
    border-radius: var(--p-border-radius-base);

    &:hover {
      background: var(--p-action-secondary-hovered);
    }

    &:focus {
      background-color: transparent;
    }

    // stylelint-disable-next-line selector-max-specificity
    &:focus:not(:active) {
      @include focus-ring($style: 'focused');
    }

    &:active {
      background: var(--p-action-secondary-pressed);
    }

    &.disabled {
      color: var(--p-text-disabled);
      cursor: default;
      pointer-events: none;

      // stylelint-disable-next-line selector-max-specificity
      .IconWrapper {
        @include recolor-icon(var(--p-icon-disabled));
      }
    }

    .IconWrapper {
      @include recolor-icon(--p-icon);
    }

    // Start - overrides than can be deleted during global theming rollout
    &:hover,
    &:active {
      color: var(--p-text);

      // stylelint-disable-next-line selector-max-specificity
      .IconWrapper {
        @include recolor-icon(var(--p-icon));
      }
    }

    &:focus,
    &:active {
      // stylelint-disable-next-line selector-max-specificity
      &::after {
        background: transparent;
      }
    }

    &::after {
      height: auto;
    }
    // End - overrides than can be deleted during global theming rollout
  }
}

.ContentWrapper {
  display: flex;
  align-items: center;
}

.IconWrapper {
  @include recolor-icon(
    var(--p-icon, color('ink', 'lighter')),
    var(--p-override-transparent, color('white'))
  );
  display: inline-block;

  &:first-child {
    margin-right: spacing(extra-tight);
  }

  &:last-child {
    margin-left: spacing(extra-tight);

    // This compensates for the disclosure icon, which is substantially
    // inset within the viewbox (and makes it look like there is too much
    // spacing on the right of the button)
    margin-right: -3px;
  }

  &.disabled {
    @include recolor-icon(var(--p-icon-disabled, color('ink', 'lightest')));
  }
}
