@import '../../styles/common';

$image-size: rem(20px);
$item-min-height: rem(40px);
$item-vertical-padding: ($item-min-height - line-height(body)) / 2;

.ActionList {
  list-style: none;
  margin: 0;
  padding: spacing(tight) 0;
}

.Section-withoutTitle:not(:first-child) {
  border-top: border('divider');
  margin-top: spacing(tight);
  padding-top: spacing(tight);
}

.Actions {
  list-style: none;
  margin: 0;
  border-top: border('divider');
  padding: 0 spacing(tight);

  // stylelint-disable-next-line selector-max-class
  .Title + & {
    padding-top: spacing(tight);
  }
}

.ActionList,
.Section:first-child {
  // stylelint-disable-next-line selector-max-class, selector-max-combinators, selector-max-specificity
  > .Section-withoutTitle .Actions {
    border-top: none;
  }
}

.Title {
  @include text-style-subheading;
  padding: (spacing(tight) * 1.5) spacing();
}

.Item {
  @include unstyled-button;
  @include unstyled-link;
  @include focus-ring;
  display: block;
  width: 100%;
  min-height: $item-min-height;
  text-align: left;
  cursor: pointer;
  padding: $item-vertical-padding spacing(tight);
  border-radius: var(--p-border-radius-base);
  border: 1px solid transparent;

  &:hover {
    background-color: var(--p-surface-hovered);
    text-decoration: none;

    @include high-contrast-outline($border-width: border-width(thicker));
  }

  &.active {
    @include recolor-icon(var(--p-interactive));
    background-color: var(--p-surface-selected);

    &::before {
      @include list-selected-indicator;
    }
  }

  &:active {
    @include recolor-icon(var(--p-interactive));
    background-color: var(--p-surface-pressed);
  }

  &:focus:not(:active) {
    @include focus-ring($style: 'focused');
    @include high-contrast-outline($border-width: border-width(thicker));
  }

  &.destructive {
    @include recolor-icon(var(--p-icon-critical));
    color: var(--p-interactive-critical);

    &:hover {
      background-color: var(--p-surface-critical-subdued-hovered);
    }

    // stylelint-disable-next-line selector-max-class
    &:active,
    &.active {
      background-color: var(--p-surface-critical-subdued-pressed);
    }
  }

  &.disabled {
    background-image: none;
    color: var(--p-text-disabled);

    // stylelint-disable-next-line selector-max-class
    .Prefix,
    .Suffix {
      @include recolor-icon(var(--p-icon-disabled));
    }
  }
}

.Content {
  display: flex;
  align-items: center;
}

.Prefix {
  @include recolor-icon(var(--p-icon));
  display: flex;
  flex: 0 0 auto;
  justify-content: center;
  align-items: center;
  height: $image-size;
  width: $image-size;
  border-radius: border-radius();

  // We need the negative margin to ensure that the image does not set
  // the minimum height of the action item.
  margin: (-0.5 * $image-size) spacing() (-0.5 * $image-size) 0;
  background-size: cover;
  background-position: center center;
}

.Suffix {
  @include recolor-icon(var(--p-icon));
  margin-left: spacing();
}

.Text {
  @include layout-flex-fix;
  flex: 1 1 auto;
}
