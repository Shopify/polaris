@import '../../styles/common';

$icon-size: rem(20px);

.Breadcrumb {
  @include text-style-body;
  @include text-emphasis-subdued;
  @include unstyled-button;
  position: relative;
  display: flex;
  align-items: center;
  min-height: control-height();
  color: var(--p-text-subdued);
  text-decoration: none;
  margin: 0;
  padding: spacing(extra-tight) / 2;
  border-radius: var(--p-border-radius-base);
  border: 1px solid var(--p-border-neutral-subdued);
  @include focus-ring($border-width: rem(1px));

  &:hover {
    background-color: var(--p-surface-hovered);
  }

  &:active {
    background-color: var(--p-surface-pressed);

    .ContentWrapper {
      background: var(--p-override-transparent);
    }
  }

  &:hover,
  &:active {
    color: var(--p-text);
    text-decoration: none;

    .Icon {
      @include recolor-icon(var(--p-icon-pressed));
    }
  }
  // stylelint-disable selector-max-specificity
  &:focus {
    outline: none;
    .ContentWrapper {
      background: var(--p-override-transparent);
    }
  }

  &:focus:not(:active) {
    @include focus-ring($style: 'focused');
  }
  // stylelint-enable selector-max-specificity
}

.ContentWrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin-left: 0;
  background: transparent;
  height: control-slim-height();
  width: control-slim-height();
  border-radius: var(--p-border-radius-wide);
  will-change: background;
  transition: background duration() easing();
}

.Content {
  @include truncate;
  position: relative;
}

.Icon {
  @include recolor-icon(var(--p-icon));
  width: $icon-size;
  height: $icon-size;
  margin: (-0.5 * $icon-size) 0 (-0.5 * $icon-size) rem(-8px);
  margin: 0;
}
