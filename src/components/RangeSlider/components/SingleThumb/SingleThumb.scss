@import '../../../../styles/common';
@import '../../RangeSlider';

$stacking-order: (
  input: 10,
  output: 20,
);

.SingleThumb {
  display: flex;
  align-items: center;

  &.disabled {
    opacity: 0.8;
  }
}

.InputWrapper {
  position: relative;
  display: flex;
  align-items: center;
  flex: 1 1 auto;
  height: $range-thumb-size;

  input {
    padding: spacing(base-tight) 0;
    background-color: transparent;
    cursor: pointer;
  }

  &::after {
    @include track-dashed;
  }
}

.disabled {
  input {
    cursor: not-allowed;
  }
}

.Prefix {
  flex: 0 0 auto;
  margin-right: spacing(tight);
}

.Suffix {
  flex: 0 0 auto;
  margin-left: spacing(tight);
}

.Input {
  --progress-lower: #{var(--p-interactive)};
  --progress-upper: #{var(--p-override-transparent)};
  // create-react-app v2 leverages postcss-preset-env to transpile modern CSS
  // into something kinda supported by older browsers. Unfortunately its
  // custom properties transpiler has a bug that means it doesn't like multiple
  // custom properties inside a linear gradient (but one is OK). Define the
  // gradient color scheme here instead of inline in the below linear-gradient
  // so that we only use one custom-property in the linear-gradient.
  // See https://github.com/Shopify/polaris-react/issues/441 and
  // https://github.com/postcss/postcss-custom-properties/issues/150
  --gradient-colors: var(--progress-lower, transparent) 0%,
    var(--progress-lower, transparent) var(--Polaris-RangeSlider-progress, 0%),
    var(--progress-upper, transparent) var(--Polaris-RangeSlider-progress, 100%),
    var(--progress-upper, transparent) 100%;

  @mixin rangeSliderThumbPosition($size) {
    margin-top: calc(-1 * (#{$size} - #{$range-track-height}) / 2);
  }

  &::-ms-tooltip {
    display: none;
  }

  @include unstyled-input;
  position: relative;
  z-index: z-index('input', $stacking-order);
  flex: 1 1 auto;

  @include range-track-selectors {
    cursor: pointer;
    width: 100%;
    height: $range-track-height;
    background-image: linear-gradient(to right, var(--gradient-colors));
    border: none;
    border-radius: $range-track-height;
  }

  @include range-thumb-selectors {
    // stylelint-disable-next-line value-no-vendor-prefix
    cursor: -webkit-grab;
    width: $range-thumb-size;
    height: $range-thumb-size;
    border: 1px solid transparent;
    border-radius: 50%;
    background: linear-gradient(var(--p-interactive), var(--p-interactive));
    box-shadow: 0 0 0 0 var(--p-focused);
    appearance: none;
    transition: box-shadow duration(fast) var(--p-ease);
    transition-property: border-color, box-shadow, transform;
    transition-duration: duration();
    transition-timing-function: easing();

    @include rangeSliderThumbPosition($range-thumb-size);

    &:hover {
      background: linear-gradient(var(--p-interactive), var(--p-interactive));
    }
  }

  &::-ms-thumb {
    margin-top: 0;
    transform: translateY($range-thumb-size / 5) scale(0.4);
  }

  &::-webkit-slider-thumb {
    margin-top: -($range-thumb-size - $range-track-height) / 2;
  }

  &:active {
    @include range-thumb-selectors {
      transform: scale(var(--p-range-slider-thumb-scale));
    }
  }

  &:focus {
    @include range-thumb-selectors {
      border-color: var(--p-surface);
      box-shadow: 0 0 0 rem(2px) var(--p-focused);
    }
  }

  .error & {
    --progress-lower: #{var(--p-action-critical)};

    @include range-track-selectors {
      background-color: var(--p-override-none);
    }

    @include range-thumb-selectors {
      border-color: var(--p-action-critical);
      background: var(--p-action-critical);
    }
  }

  .disabled & {
    @include range-track-selectors {
      cursor: auto;
      background-image: none;
      background-color: var(--p-border-disabled);
    }

    @include range-thumb-selectors {
      cursor: not-allowed;
      border-color: var(--p-border-disabled);
      background: var(--p-border-disabled);
    }
  }
}

/// Output value indicator
$range-output-size: rem(32px);
$range-output-translate-x: calc(
  -50% + var(--Polaris-RangeSlider-output-factor) * #{$range-thumb-size}
);

$range-output-spacing: rem(16px);

.Output {
  position: absolute;
  z-index: z-index('output', $stacking-order);
  bottom: $range-thumb-size;
  left: var(--Polaris-RangeSlider-progress);
  transform: translateX($range-output-translate-x);
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition-property: opacity, visibility, bottom;
  transition-duration: duration();
  transition-timing-function: easing();

  .Input:hover + &,
  .Input:focus + & {
    opacity: var(--p-override-zero);
  }

  .Input:active + & {
    $range-thumb-size-difference: var(--p-range-slider-thumb-size-active) -
      var(--p-range-slider-thumb-size-base);
    opacity: 1;
    visibility: visible;
    bottom: calc(#{$range-thumb-size} + #{$range-thumb-size-difference});
  }
}

.OutputBubble {
  position: relative;
  display: flex;
  box-shadow: var(--p-popover-shadow);
  padding: 0 spacing(tight);
  min-width: $range-output-size;
  height: $range-output-size;
  background-color: var(--p-surface);
  border-radius: border-radius();
  transition-property: transform;
  transition-duration: duration();
  transition-timing-function: easing();

  // stylelint-disable selector-max-specificity, selector-max-combinators, selector-max-class
  .Input:hover + .Output &,
  .Input:active + .Output &,
  .Input:focus + .Output & {
    transform: translateY(-$range-output-spacing);

    @include page-content-when-not-partially-condensed {
      transform: translateY(-($range-output-spacing / 2));
    }
  }
  @include high-contrast-outline;
  // stylelint-enable selector-max-specificity, selector-max-combinators, selector-max-class
}

.OutputText {
  @include text-style-subheading;
  display: block;
  flex: 1 1 auto;
  margin: auto;
  text-align: center;
  color: var(--p-text);
}
