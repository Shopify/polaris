@import '../../../../styles/common';
@import '../../RangeSlider';

$stacking-order: (
  input: 10,
  output: 20,
);

$range-wrapper: rem(28px);

$range-thumb-border-error: rem(2px) solid color('red');

$range-thumb-shadow: var(
  --p-override-none,
  (0 0 0 rem(1px) rgba(black, 0.2), shadow(faint))
);
$range-thumb-shadow-hover: var(
  --p-override-none,
  (0 0 0 rem(1px) rgba(black, 0.4), shadow(faint))
);
$range-thumb-shadow-error: var(--p-override-none, 0 0 0 rem(1px) color('red'));
$range-thumb-shadow-focus: var(
  --p-override-none,
  0 0 0 rem(1px) color('indigo')
);

.Wrapper {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
}

.TrackWrapper {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: $range-wrapper;
  cursor: pointer;

  &.disabled {
    opacity: 0.8;
    cursor: not-allowed;
  }
}

.Track {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: $range-track-height;
  border-radius: $range-thumb-size;

  --unselected-range: #{var(--p-override-transparent, color('sky', 'dark'))};
  --selected-range: #{var(--p-interactive, color('indigo'))};
  --gradient-colors: var(--unselected-range, transparent) 0%,
    var(--unselected-range, transparent)
      var(--Polaris-RangeSlider-progress-lower),
    var(--selected-range, transparent) var(--Polaris-RangeSlider-progress-lower),
    var(--selected-range, transparent) var(--Polaris-RangeSlider-progress-upper),
    var(--unselected-range, transparent)
      var(--Polaris-RangeSlider-progress-upper),
    var(--unselected-range, transparent) 100%;
  background-image: linear-gradient(to right, var(--gradient-colors));

  .error & {
    --selected-range: #{var(--p-action-critical, color('red'))};
    --gradient-colors: var(--unselected-range, transparent) 0%,
      var(--unselected-range, transparent)
        var(--Polaris-RangeSlider-progress-lower),
      var(--selected-range, transparent)
        var(--Polaris-RangeSlider-progress-lower),
      var(--selected-range, transparent)
        var(--Polaris-RangeSlider-progress-upper),
      var(--unselected-range, transparent)
        var(--Polaris-RangeSlider-progress-upper),
      var(--unselected-range, transparent) 100%;
    background-image: linear-gradient(to right, var(--gradient-colors));
  }

  .disabled & {
    background: var(--p-border-disabled, color('sky', 'dark')) none;
  }
}

.Track--dashed {
  @include track-dashed;
}

.Thumbs {
  position: absolute;
  z-index: z-index('input', $stacking-order);
  padding: 0;
  width: $range-thumb-size;
  height: $range-thumb-size;
  border-radius: 50%;
  border: border-width() solid var(--p-interactive, color('sky', 'lighter'));
  box-shadow: $range-thumb-shadow;
  background: linear-gradient(
    var(--p-interactive, color('sky', 'lighter')),
    var(--p-interactive, color('sky', 'light'))
  );
  -webkit-tap-highlight-color: transparent;

  // stylelint-disable-next-line value-no-vendor-prefix
  cursor: -webkit-grab;
  transition: transform var(--p-duration-1-5-0, duration())
    var(--p-ease, easing());

  &.disabled {
    cursor: not-allowed;
    border-color: var(--p-border-disabled, color('sky', 'dark'));
    background: var(--p-border-disabled, color('white'));
  }

  &:hover {
    box-shadow: $range-thumb-shadow-hover;
  }

  &:active {
    transform: scale(var(--p-range-slider-thumb-scale, 1));
  }

  &:focus {
    outline: 0;
    border-color: var(--p-override-transparent, color('indigo'));
    box-shadow: var(--p-override-none, $range-thumb-shadow-focus);

    @media (-ms-high-contrast: active) {
      outline: 1px solid ms-high-contrast-color('text');
    }
  }

  .error & {
    border-color: var(--p-action-critical, color('red'));
    background: linear-gradient(
      var(--p-action-critical, color('sky', 'lighter')),
      var(--p-action-critical, color('sky', 'light'))
    );
    box-shadow: $range-thumb-shadow-error;
  }
}

$range-output-size: rem(32px);
$range-output-spacing: rem(16px);

.Prefix {
  flex: 0 0 auto;
  margin-right: spacing(tight);
}

.Suffix {
  flex: 0 0 auto;
  margin-left: spacing(tight);
}

.Output {
  position: absolute;
  z-index: z-index('output', $stacking-order);
  bottom: var(--p-range-slider-thumb-size-active, $range-thumb-size);
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition-property: opacity, visibility, bottom;
  transition-duration: var(--p-duration-1-5-0, duration());
  transition-timing-function: var(--p-ease, easing());
  transform: translateX(calc(-50% + #{$range-thumb-size / 2}));

  .Thumbs:hover + &,
  .Thumbs:focus + & {
    opacity: var(--p-override-zero, 1);
    visibility: var(--p-override-none, visible);
  }

  .Thumbs:active + & {
    $range-thumb-size-difference: var(
        --p-range-slider-thumb-size-active,
        $range-thumb-size
      ) - var(--p-range-slider-thumb-size-base, $range-thumb-size);
    opacity: 1;
    visibility: visible;
    bottom: calc(
      #{var(--p-range-slider-thumb-size-active, $range-thumb-size)} + #{$range-thumb-size-difference}
    );
  }
}

.OutputBubble {
  position: relative;
  display: flex;
  padding: 0 spacing(tight);
  min-width: $range-output-size;
  height: $range-output-size;
  background-color: var(--p-surface, color('ink'));
  box-shadow: var(--p-popover-shadow, --p-override-none);
  border-radius: border-radius();
  transition-property: transform;
  transition-duration: var(--p-duration-1-5-0, duration());
  transition-timing-function: var(--p-ease, easing());

  // stylelint-disable selector-max-specificity, selector-max-combinators, selector-max-class
  .Thumbs:hover + .Output &,
  .Thumbs:active + .Output &,
  .Thumbs:focus + .Output & {
    transform: translateY(-$range-output-spacing);

    @include page-content-when-not-partially-condensed {
      transform: translateY(-($range-output-spacing / 2));
    }
  }
  // stylelint-enable selector-max-specificity, selector-max-combinators, selector-max-class
}

.OutputText {
  @include text-style-subheading;
  display: block;
  flex: 1 1 auto;
  margin: auto;
  text-align: center;
  color: var(--p-text, color('white'));
}
