@import '../../styles/common';

$height: rem(20px);
$small-height: rem(18px);
$extra-small-height: rem(16px);
$horizontal-padding: spacing(tight);
$vertical-padding: rem(3px);

$pip-size: rem(10px);
$pip-spacing: ($height - $pip-size) / 2;

@mixin pip-color($color) {
  .Pip {
    color: $color;
  }
}

.Badge {
  @include pip-color(var(--p-icon, color('ink', 'lightest')));
  display: inline-flex;
  align-items: center;
  padding: $vertical-padding $horizontal-padding;
  background-color: var(--p-surface-neutral, color('sky'));
  border: border-width(thick) solid var(--p-surface, color('white'));
  border-radius: $height;
  font-size: rem(13px);
  line-height: $extra-small-height;
  color: var(--p-text, color('ink', 'light'));
  font-weight: var(--p-badge-font-weight, 400);

  @media print {
    border: solid rem(0.1px) var(--p-border, color('ink', 'light'));
    border-radius: $height;
  }
}

.sizeSmall {
  font-size: font-size(caption, large-screen);
  line-height: $small-height;
}

.statusSuccess {
  @include pip-color(var(--p-icon-success, color('green', 'dark')));
  background-color: var(--p-surface-success, color('green', 'light'));
  color: var(--p-text, color('green', 'text'));
}

.statusInfo {
  @include pip-color(var(--p-icon-highlight, color('blue', 'dark')));
  background-color: var(--p-surface-highlight, color('blue', 'light'));
  color: var(--p-text, color('blue', 'text'));
}

.statusAttention {
  @include pip-color(color('yellow', 'dark'));
  background-color: color('yellow', 'light');
  color: var(--p-text, color('yellow', 'text'));
}

.statusWarning {
  @include pip-color(var(--p-icon-warning, color('orange', 'dark')));
  background-color: var(--p-surface-warning, color('orange', 'light'));
  color: var(--p-text, color('orange', 'text'));
}

.statusCritical {
  @include pip-color(var(--p-icon-critical, color('red', 'dark')));
  background-color: var(--p-surface-critical, color('red', 'light'));
  color: var(--p-text, color('red', 'text'));
}

.statusNew {
  background-color: var(--p-surface-neutral, color('sky'));
  color: var(--p-text, color('ink'));
  font-weight: 500;
  border: none;
}

.Pip {
  height: $pip-size;
  width: $pip-size;
  margin: 0 spacing(extra-tight) 0 ($pip-spacing - $horizontal-padding);
  border: border-width(thick) solid currentColor;
  border-radius: 50%;
  flex-shrink: 0;
}

.progressIncomplete {
  .Pip {
    background: transparent;
  }
}

.progressPartiallyComplete {
  .Pip {
    background: linear-gradient(
      to top,
      currentColor,
      currentColor 50%,
      transparent 50%,
      transparent
    );

    @media print {
      position: relative;
      overflow: hidden;

      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 50%;
        transform: translateY(100%);
        box-shadow: 0 0 0 $pip-size currentColor inset;
      }
    }
  }
}

.progressComplete {
  .Pip {
    background: linear-gradient(
      to top,
      currentColor,
      currentColor 50%,
      currentColor 50%
    );

    @media print {
      box-shadow: 0 0 0 $pip-size currentColor inset;
    }
  }
}

.withinFilter {
  border-radius: var(--p-border-radius-base, $height);
}
