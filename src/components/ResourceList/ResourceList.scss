@import './variables';

@mixin disabled-pointer-events {
  pointer-events: none;
}

@mixin resource-list-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.FiltersWrapper {
  padding: resource-list(header-padding-small)
    resource-list(header-padding-small) spacing();

  @include breakpoint-after(resource-list(breakpoint-small)) {
    padding: spacing();
  }

  + .ResourceList {
    border-top: border();
  }
}

.HeaderOuterWrapper {
  position: relative;
  background-color: color('white');
  z-index: resource-list(header-outer-wrapper-stacking-order);

  + .ResourceList {
    border-top: border();
  }
}

.HeaderWrapper-disabled {
  @include disabled-pointer-events;
}

.HeaderWrapper-overlay {
  @include resource-list-overlay;
  z-index: resource-list(header-overlay-stacking-order);
  background-color: resource-list(overlay-background);
}

.FiltersWrapper + .HeaderOuterWrapper {
  margin-top: -1 * spacing();
}

.HeaderWrapper {
  position: relative;
  display: flex;
  align-items: flex-start;
  width: 100%;
  min-height: resource-list(header-min-height);
  padding: resource-list(header-vertical-padding)
    resource-list(header-padding-small);
  background-color: color('white');

  @include breakpoint-after(resource-list(breakpoint-small)) {
    flex-direction: row;
    padding: resource-list(header-vertical-padding) spacing();
    // stylelint-disable-next-line selector-max-combinators, selector-max-class, selector-max-specificity
    &:not(.HeaderWrapper-hasFilters).HeaderWrapper-hasHeadings.HeaderWrapper-hasSort {
      min-height: resource-list(header-min-height) * 2;
    }
  }
}

.HeaderWrapper-inSelectMode {
  &.HeaderWrapper-hasHeadings {
    // stylelint-disable-next-line selector-max-class
    .Sorter {
      opacity: 0;
      pointer-events: none;
    }
    // stylelint-disable-next-line selector-max-class
    .CheckableButtonWrapper {
      opacity: 0;
      pointer-events: none;
    }
  }

  &.HeaderWrapper-hasHeadings.HeaderWrapper-hasFilters {
    // stylelint-disable-next-line selector-max-class, selector-max-specificity
    .ColumnHeaders {
      display: none;
    }
  }
}
.HeaderWrapper-isSticky {
  box-shadow: shadow();
}

.HeaderContentWrapper {
  position: absolute;
  z-index: resource-list(content-wrapper-stacking-order);
  right: resource-list(header-padding-small);
  left: resource-list(header-padding-small);
  display: flex;
  min-height: resource-list(header-content-min-height);
  opacity: 1;
  transition: opacity easing() duration();

  .HeaderWrapper-inSelectMode:not(.HeaderWrapper-hasHeadings) & {
    opacity: 0;
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    right: spacing();
    left: spacing();
    align-self: flex-start;
  }
}

.ItemCountTextWrapper {
  white-space: nowrap;
  text-overflow: ellipsis;
  flex: 1;
  padding-left: spacing(extra-tight);
  align-self: center;

  .HeaderWrapper-hasSort & {
    display: none;
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    // stylelint-disable-next-line selector-max-specificity
    .HeaderWrapper-hasSort &,
    .HeaderWrapper-hasFilters:not(.HeaderWrapper-hasSelect):not(.HeaderWrapper-hasHeadings)
      & {
      display: block;
    }

    .HeaderWrapper-hasSelect & {
      display: none;
    }

    :not(.HeaderWrapper-hasFilters).HeaderWrapper-hasHeadings & {
      display: block;
      order: -1;
      flex: 0 1 40%;
      margin-bottom: spacing();
    }
  }
}

.BulkActionsWrapper {
  position: relative;
  z-index: resource-list(bulk-actions-wrapper-stacking-order);
  width: 100%;

  @include breakpoint-after(resource-list(breakpoint-small)) {
    flex: 0 1 auto;
    align-self: flex-start;
  }
}

.CheckableButtonWrapper {
  display: none;

  @include breakpoint-after(resource-list(breakpoint-small)) {
    flex: 1 1 auto;
    display: block;

    .HeaderWrapper-hasHeadings & {
      flex: 0 0 auto;
    }
  }
}

.ColumnHeaders {
  display: none;

  @include breakpoint-after(resource-list(breakpoint-small)) {
    display: flex;
    flex: 1 1 auto;
    align-items: center;
  }
}

.SelectButtonWrapper {
  @include breakpoint-after(resource-list(breakpoint-small)) {
    display: none;
  }
}

.Sorter {
  flex: 0 1 auto;

  .HeaderWrapper-hasSelect & {
    flex: 1 1 auto;
    margin-right: spacing();
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    display: none;
    margin-right: 0;

    &.Sorter-alwaysVisible {
      flex: 0 0 auto;
      margin-right: 0;
      display: block;
    }

    .HeaderWrapper-hasHeadings & {
      order: -1;
      flex: 0 1 60%;
      margin-bottom: spacing();
    }
  }
}

.EmptySearchResultWrapper {
  padding-top: 60px;
  padding-bottom: 60px;

  @media screen and (max-height: 600px) {
    padding-top: 32px;
    padding-bottom: 32px;
  }
}

.ResourceListWrapper {
  position: relative;
}

.ResourceList {
  position: relative;
  z-index: resource-list(list-stacking-order);
  margin: 0;
  padding: 0;
  list-style: none;
}

.selectable {
  width: calc(100% + #{resource-list-item(translate-offset)});
  transform: translateX(-1 * resource-list-item(translate-offset));
  transition: transform easing() duration();
  margin-right: -1 * resource-list-item(translate-offset);

  &.selectMode {
    transform: translateX(0);
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    width: 100%;
    transform: translateX(0);
    margin-right: 0;
  }
}

.ItemWrapper {
  position: relative;
  z-index: resource-list(list-stacking-order);
  max-width: 100%;
  overflow: hidden;

  + .ItemWrapper {
    border-top: border();
  }
}

.SpinnerContainer {
  @include resource-list-overlay;
  z-index: resource-list(spinner-stacking-order);
  display: flex;
  justify-content: center;
}

.LoadingOverlay {
  @include resource-list-overlay;
  z-index: resource-list(overlay-stacking-order);
  display: flex;
  justify-content: center;
  background-color: resource-list(overlay-background);
}

.DisabledPointerEvents {
  @include disabled-pointer-events;
}

.disableTextSelection {
  user-select: none;
}
