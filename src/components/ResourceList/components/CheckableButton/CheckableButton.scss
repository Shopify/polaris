@import '../../../../styles/common';
@import '../../variables';

$button-vertical-padding: (
    resource-list(button-min-height) - line-height(body) - rem(2px)
  ) / 2;
$control-size: rem(16px);
$chekbox-label-margin: rem(20px);

.CheckableButton {
  @include text-style-button;
  display: flex;
  align-items: center;
  min-height: resource-list(button-min-height);
  min-width: resource-list(button-min-height);
  margin: 0;
  padding: $button-vertical-padding spacing();
  line-height: 1;
  cursor: pointer;
  user-select: none;
  text-decoration: none;
  text-align: left;
  background: transparent;
  border: var(--p-override-none, border(dark));
  border-radius: var(--p-border-radius-base, border-radius());
  width: 100%;
  box-shadow: var(--p-override-none, shadow(faint));

  [data-buttongroup-segmented='true'] & {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: none;
  }

  &.newDesignLanguage {
    @include recolor-icon(var(--p-icon-on-interactive));
    background: var(--p-action-secondary);
    color: var(--p-text);

    &:hover {
      background: var(--p-action-secondary-hovered);
    }

    &:active {
      background: var(--p-action-secondary-pressed);
    }
    // stylelint-disable-next-line selector-max-class
    &.CheckableButton-selectMode {
      font-weight: 500;
    }

    @media (-ms-high-contrast: active) {
      border: border-width(base) solid;
    }
  }

  &.CheckableButton-measuring {
    font-size: font-size(button);
    font-weight: 700;

    // simulates measuring with an additional digit (e.g. 00 instead of 0)
    &::before {
      content: '';
      display: inline-block;
      width: font-size(button);
    }
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    flex: 0 1 auto;
  }

  &:focus {
    outline: none;
  }

  &.CheckableButton-plain {
    border: border(transparent);
    border-radius: border-radius();
    box-shadow: none;
    background: transparent;
    // stylelint-disable-next-line selector-max-class
    &.newDesignLanguage {
      border: none;
    }

    &:hover {
      background: transparent;
    }
  }

  &.CheckableButton-selectMode {
    @include text-emphasis-subdued;
    font-weight: 600;
  }

  &.CheckableButton-selected {
    color: var(--p-text, color('indigo'));

    @include breakpoint-after(resource-list(breakpoint-small)) {
      border-color: color('sky', 'dark');
    }
  }
}

.Checkbox {
  pointer-events: none;
  height: $control-size;
  width: $control-size;
  margin-left: (-1 * (spacing(tight) + rem(1px))); // 1px accounts for border

  .newDesignLanguage & {
    height: var(--p-choice-size);
    width: var(--p-choice-size);
    margin-left: calc(-1 * #{spacing(tight)} - var(--p-control-border-width));
  }
}

.Label {
  margin-left: $chekbox-label-margin;
  flex: 1;
  white-space: nowrap;
  overflow: hidden;
  max-width: 100%;
  text-overflow: ellipsis;
  // padding to fix the bottom of letters being cutoff by overflow: hidden
  padding: rem(1px) 0;
  .newDesignLanguage & {
    margin-left: calc(#{$chekbox-label-margin} - var(--p-control-border-width));
  }
}
