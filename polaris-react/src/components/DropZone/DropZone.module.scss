@import '../../styles/common';

$dropzone-border-style: dashed;
$dropzone-min-height-large: 120px;
$dropzone-min-height-medium: 100px;
$dropzone-min-height-small: 50px;

$dropzone-stacking-order: (
  outline: 29,
  overlay: 30,
);

@mixin reset-after {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 1;
  transform: scale(1);
  border: var(--p-border-width-025) $dropzone-border-style transparent;
}

@mixin set-border-radius {
  border-radius: var(--p-border-radius-200);
}

.DropZone {
  // stylelint-disable -- Polaris component custom properties
  --pc-drop-zone-outline: 29;
  --pc-drop-zone-overlay: 30;
  // stylelint-enable
  position: relative;
  display: flex;
  justify-content: center;
  background-color: var(--p-color-input-bg-surface);
  border-radius: var(--p-border-radius-200);

  &::after {
    content: '';
    position: absolute;
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    z-index: var(--pc-drop-zone-outline);
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    border: var(--p-border-width-0165) $dropzone-border-style transparent;
    border-radius: var(--p-border-radius-200);
    pointer-events: none;
  }

  &:not(.focused) {
    &::after {
      @include reset-after;
    }
  }

  &:hover {
    outline: var(--p-border-width-025) solid transparent;
  }
}

.hasOutline {
  padding: var(--p-space-025);

  &:not(.isDisabled) {
    &::after {
      border-width: var(--p-border-width-0165);
      border-color: var(--p-color-input-border);
    }

    &:hover {
      cursor: pointer;
      background-color: var(--p-color-input-bg-surface-hover);

      // stylelint-disable-next-line selector-max-specificity -- generated by polaris-migrator DO NOT COPY
      &::after {
        border-color: var(--p-color-input-border-hover);
      }
    }
  }
}

.isDragging {
  &:not(.isDisabled) {
    background-color: var(--p-color-bg-surface-hover);
  }
}

.isDisabled {
  cursor: not-allowed;
  background-color: var(--p-color-bg-surface-disabled);
  color: var(--p-color-text-disabled);

  &::after {
    border-color: var(--p-color-border-disabled);
  }
}

.sizeLarge {
  min-height: $dropzone-min-height-large;
}

.sizeMedium {
  min-height: $dropzone-min-height-medium;
  align-items: center;
}

.sizeSmall {
  padding: 0;
  align-items: center;
  min-height: $dropzone-min-height-small;
}

.measuring {
  visibility: hidden;
  min-height: 0;
}

.Container {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include focus-ring($size: 'wide', $border-width: var(--p-border-width-025));
  flex: 1;
}

.Overlay {
  @include set-border-radius;
  position: absolute;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: var(--pc-drop-zone-overlay);
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--p-space-400);
  border: var(--p-border-width-025) solid var(--p-color-input-border-active);
  text-align: center;
  color: var(--p-color-text);
  background-color: var(--p-color-input-bg-surface-active);
  pointer-events: none;

  .sizeSmall & {
    padding: 0;
  }
}

.hasError > .Overlay {
  border-color: var(--p-color-border-critical-secondary);
  color: var(--p-color-text-critical);
  border-style: $dropzone-border-style;
  border-width: var(--p-border-width-0165);
  background-color: var(--p-color-bg-surface-critical);
}

.focused {
  &:not(.isDisabled) {
    .Container {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      @include focus-ring($size: 'wide', $style: 'focused');
    }
  }
}
