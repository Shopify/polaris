@import '../../styles/common';

// stylelint-disable polaris/conventions/polaris/custom-property-allowed-list -- Polaris component custom properties
.Choice {
  /*
    Explicitly not using -p-space-0 because we need to set the unit so it'll
    work in a calc().
    We specify 0rem here because our bundle process uses postcss-pxtorem.
    This forceable converts 0px to 0 which is invalid for calcs but leaves rems alone.
    See https://github.com/cuth/postcss-pxtorem/blob/122649015322214f8e9d1ac852eb11c0791b634b/index.js#L52
  */
  // stylelint-disable-next-line length-zero-no-unit -- see above
  --pc-choice-space-0: 0rem;
  // Set responsive variables for bleed, used in padding and negative margin
  @include responsive-props(
    'choice',
    'bleed-block-start',
    '--pc-choice-bleed-block-start'
  );
  @include responsive-props(
    'choice',
    'bleed-block-end',
    '--pc-choice-bleed-block-end'
  );
  @include responsive-props(
    'choice',
    'bleed-inline-start',
    '--pc-choice-bleed-inline-start'
  );
  @include responsive-props(
    'choice',
    'bleed-inline-end',
    '--pc-choice-bleed-inline-end'
  );
  @include responsive-props('choice', 'fill', '--pc-choice-fill');
  display: inline-flex;
  align-items: center;
  justify-content: flex-start;
  cursor: pointer;
  padding-block-start: calc(
    var(--pc-choice-bleed-block-start, var(--pc-choice-space-0)) +
      var(--p-space-100)
  );
  padding-block-end: calc(
    var(--pc-choice-bleed-block-end, var(--pc-choice-space-0)) +
      var(--p-space-100)
  );
  padding-inline-start: var(
    --pc-choice-bleed-inline-start,
    var(--pc-choice-space-0)
  );
  padding-inline-end: var(
    --pc-choice-bleed-inline-end,
    var(--pc-choice-space-0)
  );
  margin-block-start: calc(
    -1 * var(--pc-choice-bleed-block-start, var(--pc-choice-space-0))
  );
  margin-block-end: calc(
    -1 * var(--pc-choice-bleed-block-end, var(--pc-choice-space-0))
  );
  margin-inline-start: calc(
    -1 * var(--pc-choice-bleed-inline-start, var(--pc-choice-space-0))
  );
  margin-inline-end: calc(
    -1 * var(--pc-choice-bleed-inline-end, var(--pc-choice-space-0))
  );

  /* width/height has to account for the extra padding from bleed */
  inline-size: calc(
    var(--pc-choice-fill, auto) +
      var(--pc-choice-bleed-inline-start, var(--pc-choice-space-0)) +
      var(--pc-choice-bleed-inline-end, var(--pc-choice-space-0))
  );
  block-size: calc(
    var(--pc-choice-fill, auto) +
      var(--pc-choice-bleed-block-start, var(--pc-choice-space-0)) +
      var(--pc-choice-bleed-block-end, var(--pc-choice-space-0))
  );
}

.labelHidden {
  /* When there's no label, there's no extra padding */
  padding-block-start: var(
    --pc-choice-bleed-block-start,
    var(--pc-choice-space-0)
  );
  padding-block-end: var(--pc-choice-bleed-block-end, var(--pc-choice-space-0));

  > .Label {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    @include visually-hidden;
  }

  .Control {
    margin-top: 0;
    margin-right: 0;
  }
}

.disabled {
  cursor: default;

  > .Label {
    color: var(--p-color-text-disabled);

    &:hover {
      cursor: default;
    }

    @media (-ms-high-contrast: active) {
      color: grayText;
    }
  }
}

.toneMagic > .Label {
  color: var(--p-color-text-magic);
}

.disabled + .Descriptions {
  // the <Text/> component in the HelpText markup in Choice.tsx is set to `undefined` when the disabled prop is true
  // Which tells it to inherit whatever color we specify here.
  color: var(--p-color-text-disabled);
}

.Control {
  // stylelint-disable-next-line -- Polaris component custom properties
  --pc-choice-size: 18px;

  @media #{$p-breakpoints-md-down} {
    // stylelint-disable-next-line -- Polaris component custom properties
    --pc-choice-size: 20px;
  }
  display: flex;
  flex: 0 0 auto;
  align-items: stretch;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  width: var(--pc-choice-size);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  height: var(--pc-choice-size);
  margin-right: var(--p-space-200);

  > * {
    width: 100%;
  }
}

.Label {
  -webkit-tap-highlight-color: transparent;

  &:hover {
    cursor: pointer;
  }
}

.Descriptions {
  // stylelint-disable-next-line -- Polaris component custom properties
  --pc-choice-size: 18px;

  @media #{$p-breakpoints-md-down} {
    // stylelint-disable-next-line -- Polaris component custom properties
    --pc-choice-size: 20px;
  }
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  padding-left: calc(var(--p-space-200) + var(--pc-choice-size));
}

.HelpText {
  margin-bottom: var(--p-space-100);
}
