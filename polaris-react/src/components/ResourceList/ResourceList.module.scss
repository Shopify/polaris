@import '../../styles/common';
@import './variables';

$item-wrapper-loading-height: 64px;

@mixin disabled-pointer-events {
  pointer-events: none;
}

@mixin resource-list-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.FiltersWrapper {
  padding: var(--p-space-300);

  + .ResourceList {
    @include item-separator;
  }
}

.HeaderOuterWrapper {
  position: relative;
  background-color: var(--p-color-bg-surface);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(header-outer-wrapper-stacking-order);
  border-top-left-radius: var(--p-border-radius-200);
  border-top-right-radius: var(--p-border-radius-200);

  // stylelint-disable-next-line selector-max-class, selector-max-combinators -- Ssshhhhh
  + .ResourceList,
  // Bulk actions get injected into the DOM between the wrapper and resource
  // list dynamically when an item is checked, so we have to handle that case
  // here.
  + .BulkActionsWrapper + .ResourceList {
    @include item-separator;
    border-top: var(--p-border-width-025) solid var(--p-color-border);
  }
}

.HeaderWrapper-disabled {
  @include disabled-pointer-events;
}

.HeaderWrapper-overlay {
  @include resource-list-overlay;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(header-overlay-stacking-order);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  background-color: rgba(255, 255, 255, 0.5);
}

.FiltersWrapper + .HeaderOuterWrapper {
  margin-top: calc(-1 * var(--p-space-400));
}

.HeaderWrapper {
  position: relative;
  display: flex;
  width: 100%;
  background-color: var(--p-color-bg-surface);
  border-radius: var(--p-border-radius-200);
  // This container conditionally includes a Select component for sorting
  // It's 32px above md-up and 36px below
  // This hardcoded min-height is to ensure the Select has uniform padding when it's 36px high
  min-height: 52px;
  align-items: center;
  padding: var(--p-space-200) var(--p-space-300);
  // We reduce the min-height here to account for the Select shrinking to 32px at this breakpoint.
  @media #{$p-breakpoints-md-up} {
    min-height: 48px;
  }
}

.HeaderWrapper-isSticky {
  box-shadow: var(--p-shadow-100);
  border-radius: 0;
}

.HeaderContentWrapper {
  position: absolute;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(content-wrapper-stacking-order);
  right: var(--p-space-300);
  left: var(--p-space-300);
  // Regardless of the variable height of the content
  // we just want it to be center aligned.
  top: 0;
  bottom: 0;
  display: flex;
  min-height: resource-list(header-content-min-height);
  opacity: 1;
  transition: opacity var(--p-motion-ease) var(--p-motion-duration-200);
  align-items: center;

  .HeaderWrapper-inSelectMode & {
    opacity: 0;
  }
}

.SortWrapper,
.AlternateToolWrapper {
  position: relative;
  display: flex;
  flex: 1;
  align-items: center;

  .HeaderWrapper-hasSelect & {
    padding-right: var(--p-space-200);
  }

  @media #{$p-breakpoints-sm-up} {
    position: relative;
    left: auto;
    flex: 0 1 auto;
    margin-left: var(--p-space-400);

    // stylelint-disable-next-line selector-max-class -- generated by polaris-migrator DO NOT COPY
    .HeaderWrapper-hasAlternateTool.HeaderWrapper-hasSelect &,
    .HeaderWrapper-hasSort.HeaderWrapper-hasSelect & {
      padding-right: 0;
    }
  }
}

.SortWrapper {
  min-width: 0;
  max-width: 100%;

  > * {
    max-width: 100%;
  }
}

.HeaderTitleWrapper {
  white-space: nowrap;
  text-overflow: ellipsis;
  flex: 1;
  align-self: center;

  .HeaderWrapper-hasAlternateTool &,
  .HeaderWrapper-hasSort & {
    display: none;
  }

  @media #{$p-breakpoints-sm-up} {
    // stylelint-disable-next-line selector-max-class -- generated by polaris-migrator DO NOT COPY
    .HeaderWrapper-hasSelect &,
    .HeaderWrapper-hasAlternateTool.HeaderWrapper-hasSelect &,
    .HeaderWrapper-hasSort.HeaderWrapper-hasSelect & {
      display: none;
    }

    .HeaderWrapper-hasAlternateTool &,
    .HeaderWrapper-hasSort & {
      display: block;
    }
  }
}

.BulkActionsWrapper {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(bulk-actions-wrapper-stacking-order);
  position: absolute;
  left: 0;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: var(--p-space-400);
  pointer-events: none;

  @media #{$p-breakpoints-sm-up} {
    flex: 0 1 auto;
    align-self: flex-start;
  }
}

.BulkActionsWrapperSticky {
  position: fixed;
  top: auto;
  bottom: calc(var(--p-space-1000) - var(--p-space-100));
}

.SelectAllActionsWrapper {
  position: relative;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(bulk-actions-wrapper-stacking-order);
  width: 100%;

  /*
    We do not want to worry about setting the height and width explicitly.
    We want to inherits the height and width of its child (in this case the SelectAllActions component).

    We do this using flexbox because "the cross size of each flex container is the minimum size necessary to contain the flex items" as per the spec.
    https://www.w3.org/TR/css-flexbox-1/#flex-lines
  */
  display: flex;
  align-self: auto;
}

.CheckableButtonWrapper {
  display: none;

  // Checkable button has no opinion on its height, so we just fill the
  // container
  height: 100%;

  @media #{$p-breakpoints-sm-up} {
    flex: 1;
    display: block;
  }
}

.SelectButtonWrapper {
  position: relative;
  flex: none;

  @media #{$p-breakpoints-sm-up} {
    display: none;
  }
}

.EmptySearchResultWrapper {
  padding-top: var(--p-space-800);
  padding-bottom: var(--p-space-800);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @media (min-height: 37.5em) {
    padding-top: var(--p-space-1600);
    padding-bottom: var(--p-space-1600);
  }
}

.ResourceListWrapper {
  position: relative;
}

.ResourceListWrapperWithBulkActions {
  // stylelint-disable-next-line -- Polaris component custom properties
  --pc-resource-list-bulk-actions-offset: 92px;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  padding-bottom: var(--pc-resource-list-bulk-actions-offset);
}

.ResourceList {
  position: relative;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(list-stacking-order);
  margin: 0;
  padding: 0;
  list-style: none;
}

.ItemWrapper {
  position: relative;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(list-stacking-order);
  overflow: hidden;
  max-width: 100%;

  + .ItemWrapper {
    @include item-separator;
  }
}

.ItemWrapper-isLoading {
  min-height: $item-wrapper-loading-height;
}

.SpinnerContainer {
  @include resource-list-overlay;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(spinner-stacking-order);
  display: flex;
  justify-content: center;
}

.LoadingOverlay {
  @include resource-list-overlay;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  z-index: resource-list(overlay-stacking-order);
  display: flex;
  justify-content: center;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  background-color: rgba(255, 255, 255, 0.5);
}

.DisabledPointerEvents {
  @include disabled-pointer-events;
}

.disableTextSelection {
  user-select: none;
}
