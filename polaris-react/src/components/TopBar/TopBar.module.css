.TopBar {
  position: relative;
  /* stylelint-disable-next-line -- polaris custom global property */
  height: var(--pg-top-bar-height);
  box-shadow: var(--p-shadow-100);
  background-color: var(--p-color-bg-inverse);
  gap: var(--p-space-100);

  @media (--p-breakpoints-md-up) {
    gap: var(--p-space-600);

    /* TODO: Where does this 240px come from? Is it meant to be
       var(--pg-navigation-width)?
       TODO: Is the 480px meant to be var(--pg-layout-width-primary-min)? */
    grid-template-columns: minmax(240px, 1fr) minmax(auto, 480px) 1fr;
  }

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    width: 100%;
    border-bottom: var(--p-border-width-025) solid transparent;
  }
}

.Container {
  display: grid;

  /* TODO: Where does this 480px come from? Is it meant to be
     var(--pg-layout-width-primary-min)? */
  grid-template-columns: 1fr minmax(auto, 480px) 1fr;
  align-items: center;
  /* stylelint-disable -- polaris/conventions/polaris/custom-property-allowed-list -- Polaris component custom properties */
  width: calc(100vw - var(--pc-app-provider-scrollbar-width));
  /* stylelint-enable -- polaris/conventions/polaris/custom-property-allowed-list */
}

.LogoDisplayControl {
  display: none;
  @media (--p-breakpoints-md-up) {
    display: flex;
  }
}

.LogoDisplayContainer {
  display: flex;
}

.LogoContainer {
  /* stylelint-disable-next-line -- polaris custom global property */
  flex: 0 0 var(--pg-layout-width-nav-base);
  align-items: center;
  height: 100%;
  padding: 0 var(--p-space-200) 0 var(--p-space-400);
  /* stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY */
  @mixin safe-area-for flex-basis, var(--pg-layout-width-nav-base), left;
  /* stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY */
  @mixin safe-area-for padding-left, var(--p-space-400), left;

  &.hasLogoSuffix {
    gap: var(--p-space-200);
  }
}

.Logo,
.LogoLink {
  display: block;

  &:focus-visible {
    outline: var(--p-border-width-050) solid var(--p-color-border-focus);
    outline-offset: var(--p-space-150);
    border-radius: var(--p-border-radius-200);
  }
}

.ContextControl {
  display: none;
  @media (--p-breakpoints-md-up) {
    /* stylelint-disable-next-line -- polaris custom global property */
    width: var(--pg-layout-width-nav-base);
    display: block;
  }

  @media (--p-breakpoints-xl-up) {
    /* stylelint-disable-next-line -- polaris custom global property */
    width: var(--pg-layout-width-nav-base);
  }
}

.NavigationIcon {
  /* stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY */
  @mixin unstyled-button;
  position: relative;
  align-self: center;
  margin-left: calc(var(--p-space-200) + var(--p-space-050));
  margin-right: var(--p-space-200);
  padding: var(--p-space-200);
  border-radius: var(--p-border-radius-100);
  color: var(--p-color-icon-inverse);
  transition: var(--p-motion-duration-150) color var(--p-motion-ease)
    var(--p-motion-duration-50);

  &.focused:active {
    background-color: var(--p-color-bg-fill-inverse-hover);
  }

  &:hover {
    background-color: var(--p-color-bg-fill-inverse-hover);
  }

  /* This increases hit point size. */
  &::after {
    content: '';
    position: absolute;
    top: calc(-1 * var(--p-space-200));
    left: calc(-1 * var(--p-space-200));
    width: calc(100% + var(--p-space-500));
    height: calc(100% + var(--p-space-500));
  }
  @media (--p-breakpoints-md-up) {
    display: none;
  }

  .IconWrapper {
    /* stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY */
    @mixin focus-ring base, 6px;
  }

  /* stylelint-disable selector-max-specificity -- generated by polaris-migrator DO NOT COPY */
  &:focus-visible:not(:active) {
    .IconWrapper {
      /* stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY */
      @mixin focus-ring base, 0, focused;
    }
  }
  /* stylelint-enable selector-max-specificity */
}

.LeftContent {
  display: flex;
}

.Search {
  z-index: var(--p-z-index-1);
  display: flex;
  flex: 1 1 auto;
  align-items: center;
  justify-content: center;
  height: 100%;

  @media (--p-breakpoints-md-up) {
    position: relative;
  }
}

.RightContent {
  display: flex;
  justify-content: flex-end;
}

.SecondaryMenu {
  margin-left: var(--p-space-200);
}

.SecondaryMenu svg {
  fill: var(--p-color-icon-inverse);
}
