@import '../../../../styles/common';

$Backdrop-opacity: 0.88;

.Toast {
  display: inline-flex;
  max-width: 500px;
  padding: var(--p-space-2) var(--p-space-3);
  border-radius: var(--p-border-radius-1);
  background: var(--p-color-bg-inverse);
  color: var(--p-color-text-on-color);
  margin-bottom: var(--p-space-5);
  box-shadow: var(--p-shadow-xl);

  #{$se23} & {
    @include shadow-bevel(
      $boxShadow: var(--p-shadow-lg),
      $borderRadius: var(--p-border-radius-2)
    );
  }

  @media #{$p-breakpoints-sm-up} {
    padding: var(--p-space-3);
  }

  @media (forced-colors: active) {
    border: var(--p-border-width-2) solid transparent;
  }
}

.Action {
  margin-left: var(--p-space-2);
  color: var(--p-color-text-on-color);

  #{$se23} & {
    margin-left: var(--p-space-4);
  }
}

.error {
  background: var(--p-color-bg-critical-strong);
  color: var(--p-color-text-on-color);

  .CloseButton {
    color: var(--p-color-icon-on-color);

    #{$se23} & {
      color: var(--p-color-icon-on-color);
    }
  }
}

.LeadingIcon {
  margin-right: var(--p-space-2);

  #{$se23} & {
    margin-right: var(--p-space-1_5-experimental);
  }

  svg {
    fill: currentColor;
  }
}

.CloseButton {
  display: flex;
  align-self: center;
  flex-direction: column;
  justify-content: flex-start;
  padding: 0;
  border: none;
  appearance: none;
  background: transparent;
  color: var(--p-color-icon-subdued);
  cursor: pointer;
  margin-left: var(--p-space-2);

  #{$se23} & {
    color: var(--p-color-icon-inverse);
  }

  svg {
    fill: currentColor;
  }

  &:focus {
    outline: none;
  }

  &:focus,
  &:hover {
    color: var(--p-color-text-on-color);
  }
}
