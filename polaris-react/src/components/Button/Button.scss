@import '../../styles/common';

.Button {
  // stylelint-disable -- Button custom properties
  --pc-button-micro-min-height: var(--p-font-line-height-600);
  --pc-button-slim-min-height: var(--p-font-line-height-700);
  --pc-button-large-min-height: 32px;
  --pc-button-vertical-padding: calc(
    (36px - var(--p-font-line-height-500) - var(--p-space-050)) / 2
  );
  --pc-button-slim-vertical-padding: calc(
    (
        var(--pc-button-slim-min-height) - var(--p-font-line-height-500) -
          var(--p-space-050)
      ) / 2
  );
  --pc-button-spinner-size: 20px;
  --pc-button-segment: 10;
  --pc-button-focused: 20;
  --pc-button-disclosure-icon-offset: -6px;
  --pc-button-shadow: inset 0px -1px 0px #b5b5b5, inset -1px 0px 0px #e3e3e3,
    inset 1px 0px 0px #e3e3e3, inset 0px 1px 0px #e3e3e3;
  --pc-button-shadow-hover: inset 0px -1px 0px #cccccc,
    inset 1px 0px 0px #ebebeb, inset -1px 0px 0px #ebebeb,
    inset 0px 1px 0px #ebebeb;
  --pc-button-shadow-primary: inset 0px -1px 0px rgba(0, 0, 0, 0.25),
    inset 1px 0px 0px rgba(255, 255, 255, 0.25),
    inset -1px 0px 0px rgba(255, 255, 255, 0.25);
  // stylelint-enable
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include button-base;

  // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
  box-shadow: var(--pc-button-shadow);
  // stylelint-disable-next-line polaris/motion/declaration-property-unit-disallowed-list -- set transition
  transition: background-color 75ms var(--p-motion-ease-out),
    box-shadow 75ms var(--p-motion-ease-out);

  &:active {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    --pc-button-shadow: var(--p-shadow-inset-200);
    background: var(--p-color-bg-fill-active);

    .Content {
      transform: translateY(1px);
    }
  }

  // stylelint-disable selector-max-specificity -- focus styles
  &:focus:not(.variantPrimary):not(.variantTertiary):not(.variantPlain):not(.variantMonochromePlain):not(.pressed),
  &:focus-visible:not(.variantPrimary):not(.variantTertiary):not(.variantPlain):not(.variantMonochromePlain):not(.pressed) {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    box-shadow: var(--pc-button-shadow);
  }

  &:hover {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    box-shadow: var(--pc-button-shadow-hover);
  }

  &.disabled {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    @include base-button-disabled;
  }
}

.Content {
  font-size: var(--p-font-size-325);
  font-weight: var(--p-font-weight-medium);
  line-height: var(--p-font-line-height-500);
  letter-spacing: initial;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 1px;
  min-height: 1px;
  transform: translateY(0);
  // stylelint-disable-next-line polaris/motion/declaration-property-unit-disallowed-list -- set transition
  transition: transform 75ms cubic-bezier(0.19, 0.91, 0.38, 1);

  @media #{$p-breakpoints-md-up} {
    font-size: var(--p-font-size-300);
    line-height: var(--p-font-line-height-400);
  }

  .Button:not(.variantPlain):not(.variantMonochromePlain) & {
    width: 100%;
  }

  // stylelint-disable-next-line selector-max-class -- override primary button font weight
  .Button.variantPrimary & {
    font-weight: var(--p-font-weight-semibold);
  }
}

.textAlignLeft {
  justify-content: flex-start;
  text-align: left;

  .Content {
    justify-content: flex-start;
  }
}

.textAlignStart {
  justify-content: flex-start;
  text-align: start;

  .Content {
    justify-content: flex-start;
  }
}

.textAlignCenter {
  justify-content: center;
  text-align: center;
}

.textAlignRight {
  justify-content: flex-end;
  text-align: right;

  .Content {
    justify-content: flex-end;
  }
}

.textAlignEnd {
  justify-content: flex-end;
  text-align: end;

  .Content {
    justify-content: flex-end;
  }
}

.Icon {
  // This compensates for the typical icon used in buttons being
  // inset within its bounding box.
  margin-left: calc(-1 * (var(--p-space-100)));

  @media #{$p-breakpoints-md-up} {
    margin-top: calc(-1 * var(--p-space-050));
    margin-bottom: calc(-1 * var(--p-space-050));
  }

  &:last-child {
    // This compensates for the disclosure icon, which is substantially
    // inset within the viewbox
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    margin-right: var(--pc-button-disclosure-icon-offset);
    margin-left: var(--p-space-050);
  }

  // stylelint-disable-next-line selector-max-class -- necessary specificity
  .fullWidth.textAlignLeft &:last-child:not(:only-child) {
    margin-left: auto;
  }

  + *:not(.Icon) {
    margin-left: var(--p-space-050);
  }
}

.hidden {
  visibility: hidden;
}

.Spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  margin-top: calc(-1 * (var(--pc-button-spinner-size) / 2));
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  margin-left: calc(-1 * (var(--pc-button-spinner-size) / 2));
}

.toneCritical,
.variantPrimary,
.variantTertiary {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include focus-ring($border-width: 0);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  background: var(--pc-button-color);
  border-width: 0;
  border-color: transparent;
  box-shadow: var(--p-shadow-200);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  color: var(--pc-button-text);

  &:hover {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    background: var(--pc-button-color-hover);
    border-color: transparent;
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    color: var(--pc-button-text);
  }

  &:focus {
    border-color: transparent;
    box-shadow: var(--p-shadow-200);
  }

  &:active {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    background: var(--pc-button-color-active);
    border-color: transparent;
    box-shadow: var(--p-shadow-200);
  }

  &.pressed {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    color: var(--pc-button-text);
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    background: var(--pc-button-color-depressed);
    border-color: transparent;
    box-shadow: var(--p-shadow-200);

    &:hover,
    &:focus {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      background: var(--pc-button-color-depressed);
      box-shadow: var(--p-shadow-200);
    }
  }

  &.disabled {
    color: var(--p-color-text-disabled);
    box-shadow: none;
    border-color: transparent;

    svg {
      fill: var(--p-color-icon-disabled);
    }
  }
}

.variantPrimary {
  // stylelint-disable -- Button custom properties
  --pc-button-color: var(--p-color-bg-fill-brand);
  --pc-button-text: var(--p-color-text-brand-on-bg-fill);
  --pc-button-color-hover: var(--p-color-bg-fill-brand-hover);
  --pc-button-color-active: var(--p-color-bg-fill-brand-active);
  --pc-button-color-depressed: var(--p-color-bg-fill-brand-active);
  // stylelint-enable

  &::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    // stylelint-disable-next-line polaris/color/function-disallowed-list -- custom background
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.07) 80%,
      rgba(255, 255, 255, 0.15) 100%
    );
    box-shadow: var(--p-shadow-button-primary);
    /* stylelint-disable-next-line polaris/border/declaration-property-unit-disallowed-list -- custom radius */
    border-radius: 9px;
    /* stylelint-disable-next-line polaris/motion/declaration-property-unit-disallowed-list -- custom transition time */
    transition: opacity 75ms cubic-bezier(0.19, 0.91, 0.38, 1);
  }

  &:not(.disabled) {
    box-shadow: none;
  }

  &:hover {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
    --pc-button-text: var(--p-color-text-brand-on-bg-fill-hover);

    &::before {
      box-shadow: var(--p-shadow-button-primary);
    }

    svg {
      fill: var(--p-color-text-brand-on-bg-fill-hover);
    }
  }

  &:active {
    // stylelint-disable polaris/conventions/polaris/custom-property-allowed-list -- Button custom properties
    --pc-button-text: var(--p-color-text-brand-on-bg-fill-active);
    background: var(--pc-button-color-active);
    box-shadow: var(--p-shadow-button-primary-inset);
    // stylelint-enable

    &::before {
      opacity: 1;
      // stylelint-disable-next-line -- override background
      background: linear-gradient(
        180deg,
        rgba(255, 255, 255, 0.1) 0%,
        rgba(255, 255, 255, 0) 100%
      );
      box-shadow: var(--p-shadow-button-primary-inset);
    }

    svg {
      fill: var(--p-color-text-brand-on-bg-fill-active);
    }
  }

  &.disabled {
    color: var(--p-color-text-brand-on-bg-fill-disabled);
    background: var(--p-color-bg-fill-brand-disabled);
    box-shadow: none;

    &::before {
      display: none;
    }
  }

  &.toneCritical,
  &.toneSuccess {
    &::before {
      left: 0.5px;
      right: 0.5px;
      top: 0.5px;
      bottom: 0.5px;
      border-radius: inherit;
      background: none;
    }

    &:hover {
      // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
      --pc-button-text: var(--p-color-text-brand-on-bg-fill-hover);

      // stylelint-disable-next-line selector-max-specificity -- set svg fill
      svg {
        fill: var(--p-color-text-brand-on-bg-fill-hover);
      }
    }

    &:active {
      // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
      --pc-button-text: var(--p-color-text-brand-on-bg-fill-active);

      // stylelint-disable-next-line -- set opacity
      &::before {
        opacity: 0;
      }

      // stylelint-disable-next-line selector-max-specificity -- set svg fill
      svg {
        fill: var(--p-color-text-brand-on-bg-fill-active);
      }
    }
  }

  &.toneCritical {
    // stylelint-disable -- Button custom properties
    --pc-button-color: var(--p-color-bg-fill-critical);
    --pc-button-text: var(--p-color-text-critical-on-bg-fill);
    --pc-button-color-hover: var(--p-color-bg-fill-critical-hover);
    --pc-button-color-active: var(--p-color-bg-fill-critical-active);
    --pc-button-color-depressed: var(--p-color-bg-fill-critical-active);
    // stylelint-enable

    &::before {
      // adjust shine for critical and success buttons
      box-shadow: var(--p-shadow-button-primary-critical);
    }

    &:not(.disabled) {
      box-shadow: none;
    }

    svg {
      fill: var(--p-color-text-critical-on-bg-fill);
    }

    &:active {
      box-shadow: var(--p-shadow-button-primary-critical-inset);
    }

    &:hover {
      // stylelint-disable-next-line selector-max-specificity -- set box shadow
      &::before {
        box-shadow: var(--p-shadow-button-primary-critical-hover);
      }
    }

    // stylelint-disable-next-line selector-max-class -- set disabled styles
    &.disabled {
      // stylelint-disable-next-line selector-max-specificity, selector-max-class -- set display
      &::before {
        display: none;
      }

      // stylelint-disable-next-line selector-max-specificity, selector-max-class -- set svg fill
      svg {
        fill: var(--p-color-text-brand-on-bg-fill-disabled);
      }
    }
  }

  &.toneSuccess {
    // stylelint-disable -- Button custom properties
    --pc-button-color: var(--p-color-bg-fill-success);
    --pc-button-text: var(--p-color-text-success-on-bg-fill);
    --pc-button-color-hover: var(--p-color-bg-fill-success-hover);
    --pc-button-color-active: var(--p-color-bg-fill-success-active);
    --pc-button-color-depressed: var(--p-color-bg-fill-success-active);
    // stylelint-enable
    box-shadow: none;

    &::before {
      // adjust shine for critical and success buttons
      box-shadow: var(--p-shadow-button-primary-success);
    }

    &:hover {
      // stylelint-disable-next-line selector-max-specificity -- set box shadow
      &::before {
        box-shadow: var(--p-shadow-button-primary-success-hover);
      }
    }

    &:active {
      box-shadow: var(--p-shadow-button-primary-success-inset);
    }
  }

  svg {
    fill: var(--p-color-text-success-on-bg-fill);
  }
}

.toneCritical {
  // stylelint-disable -- Button custom properties
  --pc-button-color: var(--p-color-bg-fill);
  --pc-button-text: var(--p-color-text-critical);
  --pc-button-color-hover: var(--p-color-bg-fill-hover);
  --pc-button-color-active: var(--p-color-bg-fill-active);
  --pc-button-color-depressed: var(--p-color-bg-fill-active);
  // stylelint-enable

  // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
  box-shadow: var(--pc-button-shadow);

  svg {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    fill: var(--pc-button-text);
  }

  &.disabled {
    svg {
      fill: var(--p-color-text-disabled);
    }
  }

  &:focus,
  &:focus-visible {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    box-shadow: var(--pc-button-shadow);
  }
}

.variantTertiary {
  // stylelint-disable -- Button custom properties
  --pc-button-color: transparent;
  --pc-button-text: var(--p-color-text);
  --pc-button-color-hover: var(--p-color-bg-fill-transparent-hover);
  --pc-button-color-active: var(--p-color-bg-fill-transparent-active);
  --pc-button-color-depressed: var(--p-surface-selected-depressed);
  // stylelint-enable
  box-shadow: none;

  path {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    fill: var(--pc-button-text);
  }

  &:is(:hover, :focus, :active) {
    color: var(--p-color-text-emphasis-active);
    box-shadow: none;
  }

  &.disabled {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
    --pc-button-text: var(--p-color-text-disabled);
    background: transparent;
    color: var(--p-color-text-disabled);

    svg {
      fill: var(--p-color-icon-disabled);
    }
  }

  &:active {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
    --pc-button-text: var(--p-color-text);

    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    color: var(--pc-button-text);
    box-shadow: none;

    .Content {
      transform: translateY(0);
    }
  }

  &:hover {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
    --pc-button-text: var(--p-color-text);
    box-shadow: none;
  }

  &:hover,
  &:focus:not(.disabled) {
    text-decoration: none;
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    color: var(--pc-button-text);
  }

  &::before {
    display: none;
  }

  &.toneCritical {
    // stylelint-disable polaris/conventions/polaris/custom-property-allowed-list -- Button custom properties
    --pc-button-color: transparent;
    --pc-button-text: var(--p-color-text-critical);
    --pc-button-color-hover: var(--p-color-bg-fill-transparent-hover);
    --pc-button-color-active: var(--p-color-bg-fill-transparent-active);

    &:hover,
    &:active {
      --pc-button-text: var(--p-color-text-critical);
    }
    // stylelint-enable polaris/conventions/polaris/custom-property-allowed-list

    // stylelint-disable-next-line selector-max-class -- set critical styles
    &.toneCritical {
      box-shadow: none;
    }

    // stylelint-disable-next-line selector-max-class -- set disabled styles
    &.disabled {
      // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- Button custom property
      --pc-button-text: var(--p-color-text-disabled);
    }
  }

  &.iconOnly {
    margin: calc(-1 * var(--p-space-100));

    path {
      fill: var(--p-color-icon-secondary);
    }

    &:active,
    &:hover {
      // stylelint-disable-next-line selector-max-specificity -- set svg fill
      path {
        fill: var(--p-color-icon);
      }
    }

    // stylelint-disable-next-line selector-max-class -- set critical styles
    &.toneCritical {
      // stylelint-disable-next-line selector-max-class, selector-max-specificity -- set svg fill
      path {
        fill: var(--p-color-text-critical);
      }
    }

    // stylelint-disable-next-line selector-max-class -- set disabled styles
    &.disabled {
      // stylelint-disable-next-line selector-max-class, selector-max-specificity -- set svg fill
      path {
        fill: var(--p-color-icon-disabled);
      }
    }
  }
}

.disabled {
  cursor: default;
  pointer-events: none;
}

.loading {
  position: relative;

  &,
  &:hover,
  &.disabled {
    color: transparent;
  }
}

.loading.disabled svg {
  fill: var(--p-color-bg-fill-brand-disabled);
}

.variantPrimary.disabled svg {
  // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- override Spinner fill color
  fill: var(--pc-button-text);
}

// The way the designs work, we need to do lots of reaching down to
// target the content in pseudo-selectors, so we need higher specificity
// in this case.
// stylelint-disable selector-max-specificity, selector-max-class -- generated by polaris-migrator DO NOT COPY
.variantPlain,
.variantMonochromePlain {
  /* stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom vertical margin */
  margin-block: calc(-1 * var(--pc-button-vertical-padding));
  margin-inline: calc(-1 * var(--p-space-300));
  background: transparent;
  border: 0;
  box-shadow: none;
  color: var(--p-color-text-emphasis);

  svg {
    fill: var(--p-color-icon-emphasis);
  }

  > .Content {
    // stylelint-disable-next-line -- remove focus-ring mixing
    @include no-focus-ring;
    font-size: var(--p-font-size-325);
    font-weight: var(--p-font-weight-regular);
    line-height: var(--p-font-line-height-400);
  }

  &:hover,
  &:focus:not(.disabled) {
    color: var(--p-color-text-emphasis-hover);
    background: transparent;
    box-shadow: none;

    svg {
      fill: var(--p-color-icon-emphasis-hover);
    }

    &:not(.removeUnderline) {
      text-decoration: underline;
    }
  }

  &.pressed,
  &:active {
    color: var(--p-color-text-brand-on-bg-fill-active);
    background-color: transparent;
    box-shadow: none;

    > .Content {
      transform: translateY(0);
    }

    svg {
      fill: var(--p-color-text-brand-on-bg-fill-active);
    }

    @media (-ms-high-contrast: active) {
      outline: none;
    }
  }

  &:focus-visible {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    @include no-focus-ring;
    outline: none;

    @media (-ms-high-contrast: active) {
      outline: none;
    }

    > .Content {
      @media (-ms-high-contrast: active) {
        outline: var(--p-border-width-050) dotted;
      }
      outline: var(--p-border-width-050) solid var(--p-color-border-focus);
      outline-offset: var(--p-space-050);
      border-radius: var(--p-border-radius-150);
    }
  }

  &:focus-visible:not(:active) {
    > .Content {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      @include no-focus-ring;
    }
  }

  &:active:not(.iconOnly) > .Content,
  &.pressed:not(.iconOnly) > .Content {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    @include plain-button-backdrop;
    padding: unset;
    margin: unset;
  }

  &.fullWidth {
    margin-left: 0;
    margin-right: 0;
  }

  &.disabled {
    color: var(--p-color-text-disabled);
    background: none;
    box-shadow: none;

    &.loading {
      color: transparent;
    }
  }

  &.toneCritical {
    color: var(--p-color-text-critical);
    box-shadow: none;

    svg {
      fill: var(--p-color-text-critical);
    }

    &:hover,
    &:focus:not(:active):not(.pressed):not(.disabled) {
      color: var(--p-color-text-critical-hover);

      svg {
        fill: var(--p-color-text-critical-hover);
      }
    }

    &:active,
    &.pressed {
      color: var(--p-color-text-critical-active);

      svg {
        fill: var(--p-color-text-critical-active);
      }
    }

    &.disabled {
      color: var(--p-color-text-disabled);

      svg {
        fill: var(--p-color-icon-disabled);
      }
    }
  }

  &.sizeMicro {
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    margin: calc(var(--pc-button-vertical-padding) * -1)
      calc(var(--p-space-300) * -1);

    > .Content {
      font-size: var(--p-font-size-325);
    }
  }

  &.sizeSlim {
    // stylelint-disable-next-line -- custom properties
    margin: calc(var(--pc-button-vertical-padding) * -1)
      calc(var(--p-space-300) * -1);
  }

  &.sizeLarge {
    margin-block: calc(-1 * var(--p-space-200));
    margin-inline: calc(-1 * var(--p-space-500));
  }

  &.iconOnly {
    margin: 0;
    padding: 0;
    min-height: var(--p-font-line-height-500);
    min-width: var(--p-font-line-height-500);

    svg {
      fill: var(--p-color-icon-secondary);
    }

    &:hover svg {
      fill: var(--p-color-icon-hover);
    }

    &:active svg,
    &.pressed svg {
      fill: var(--p-color-icon-active);
    }

    &:focus svg {
      fill: var(--p-color-icon-hover);
    }

    &.disabled svg {
      fill: var(--p-color-icon-disabled);
    }
  }

  &.toneCritical.iconOnly {
    svg {
      fill: var(--p-color-text-critical);
    }

    &:hover svg {
      fill: var(--p-color-text-critical-hover);
    }

    &:focus:not(:active):not(.pressed):not(.disabled) svg {
      fill: var(--p-color-text-critical);
    }

    &:active svg,
    &.pressed svg {
      fill: var(--p-color-text-critical-active);
    }

    &.disabled svg {
      fill: var(--p-color-icon-disabled);
    }
  }

  .Icon {
    margin-left: 0;
    margin-right: 0;

    &:last-child {
      margin-left: var(--p-space-050);
    }
  }
}

.fullWidth {
  display: flex;
  width: 100%;
}

.iconOnly {
  padding-left: var(--p-space-150);
  padding-right: var(--p-space-150);

  @media #{$p-breakpoints-md-up} {
    padding-left: var(--p-space-100);
    padding-right: var(--p-space-100);
  }

  &.sizeLarge {
    padding-left: var(--p-space-200);
    padding-right: var(--p-space-200);

    @media #{$p-breakpoints-md-up} {
      padding-left: var(--p-space-150);
      padding-right: var(--p-space-150);
    }
  }

  &.sizeSlim {
    padding-left: var(--p-space-100);
    padding-right: var(--p-space-100);
  }

  .Icon:first-child {
    margin-left: 0;
  }

  .Icon:last-child {
    margin-right: calc(-1 * var(--p-space-100));
  }

  .Icon:only-child {
    margin-right: 0;
  }
}

.sizeMicro {
  border-radius: var(--p-border-radius-200);
  padding: var(--p-space-100) var(--p-space-200);
  // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
  min-height: var(--pc-button-micro-min-height);

  .Content {
    font-size: var(--p-font-size-325);
    font-weight: var(--p-font-weight-medium);
    line-height: var(--p-font-line-height-500);
  }

  @media #{$p-breakpoints-md-up} {
    padding: var(--p-space-100) var(--p-space-200);
    // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
    min-height: var(--pc-button-micro-min-height);

    .Content {
      font-size: var(--p-font-size-300);
      line-height: var(--p-font-line-height-400);
    }
  }
}

.sizeSlim {
  // stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom property
  min-height: var(--pc-button-slim-min-height);
  padding: var(--p-space-150) var(--p-space-300);

  &.iconOnly {
    padding-left: var(--p-space-150);
    padding-right: var(--p-space-150);

    @media #{$p-breakpoints-md-up} {
      padding-left: var(--p-space-100);
      padding-right: var(--p-space-100);
    }
  }
}

.sizeLarge {
  /* stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom height */
  min-height: var(--pc-button-large-min-height);
  /* stylelint-disable-next-line polaris/conventions/polaris/custom-property-allowed-list -- custom height */
  min-width: var(--pc-button-large-min-height);
  padding-block: var(--p-space-200);
  padding-inline: var(--p-space-300);

  .Content {
    font-size: var(--p-font-size-325);
    font-weight: var(--p-font-weight-medium);
    line-height: var(--p-font-line-height-500);
    letter-spacing: initial;

    @media #{$p-breakpoints-md-up} {
      line-height: var(--p-font-line-height-400);
    }
  }
}

.Button.variantMonochromePlain {
  color: currentColor;

  svg {
    fill: currentColor;
  }

  &:hover,
  &:focus,
  &:active {
    color: currentColor;

    svg {
      fill: currentColor;
    }
  }

  // Prevents the loading spinner from overlapping the button’s text, while retaining its width.
  &.loading .Text {
    visibility: hidden;
  }

  &.disabled {
    color: var(--p-color-text-disabled);
  }

  .Text:not(.removeUnderline) {
    text-decoration: underline;
  }
}

[data-buttongroup-variant='segmented'] {
  .Button,
  .Button::after {
    border-radius: 0;
  }

  .Button.pressed {
    // stylelint-disable-next-line -- required for styling specificicty
    clip-path: none !important;
  }

  /* stylelint-disable selector-max-combinators -- necessary nesting depth */
  > :first-child .Button,
  > :first-child .Button::before,
  > :first-child .Button::after {
    border-radius: 0;
    border-top-left-radius: var(--p-border-radius-200);
    border-bottom-left-radius: var(--p-border-radius-200);
  }

  > :last-child .Button,
  > :last-child .Button::before,
  > :last-child .Button::after {
    border-radius: 0;
    border-top-right-radius: var(--p-border-radius-200);
    border-bottom-right-radius: var(--p-border-radius-200);
  }

  > :last-child:first-child .Button,
  > :last-child:first-child .Button::after {
    border-radius: var(--p-border-radius-200);
  }
  // Primary segmented button groups need the negative margin-left applied directly on the button element. They have inset shine via shadow bevels that cause the appearance of double borders when composed in a segmented ButtonGroup, which flattens the joint between them and ruins the illusion of dimension.
  > :not(:first-child) .Button.variantPrimary {
    margin-left: calc(-1 * var(--p-space-025));
  }
}

[data-buttongroup-connected-top='true'] {
  > :first-child .Button,
  > :first-child .Button::before,
  > :first-child .Button::after {
    border-top-left-radius: 0;
  }

  > :last-child .Button,
  > :last-child .Button::before,
  > :last-child .Button::after {
    border-top-right-radius: 0;
  }
}

[data-buttongroup-full-width='true'] {
  .Button {
    display: flex;
    width: 100%;
  }
}
// stylelint-enable selector-max-specificity
