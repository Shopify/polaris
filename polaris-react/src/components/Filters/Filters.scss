@import '../../styles/common';

.Container {
  position: relative;
  z-index: var(--p-z-index-1);
  border-bottom: var(--p-border-width-025) solid var(--p-color-border-secondary);
  border-top-left-radius: var(--p-border-radius-200);
  border-top-right-radius: var(--p-border-radius-200);
  background: var(--p-color-bg-surface);
}

.ContainerUplift {
  background: none;
}

@media #{$p-breakpoints-sm-down} {
  .Container {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    height: 57px;

    &.ContainerUplift {
      height: unset;
    }
  }
}

.SearchField {
  flex: 1;
}

.FiltersWrapper {
  border-bottom: var(--p-border-width-025) solid var(--p-color-border-secondary);
  height: 53px;
  overflow: hidden;

  @media #{$p-breakpoints-sm-down} {
    background: var(--p-color-bg-surface);
  }

  @media #{$p-breakpoints-md-up} {
    height: auto;
    overflow: visible;
  }
}

.hideQueryField .FiltersWrapper {
  display: flex;
  align-items: center;
}

.FiltersInner {
  overflow: auto;
  white-space: nowrap;
  padding: var(--p-space-300) var(--p-space-400) var(--p-space-500);
}

.hideQueryField .FiltersInner {
  flex: 1;
  padding: var(--p-space-300);
}

@media #{$p-breakpoints-md-up} {
  .FiltersInner {
    overflow: visible;
    flex-wrap: wrap;
    gap: var(--p-space-200);
    // stylelint-disable-next-line -- No 6px space token
    padding: 0.375rem var(--p-space-200);
  }

  .hideQueryField .FiltersInner {
    flex: 1;
    // stylelint-disable-next-line -- No 6px space token
    padding: 0.375rem var(--p-space-200);
  }
}

.AddFilter {
  background: var(--p-color-bg-surface);
  border-radius: var(--p-border-radius-200);
  border: var(--p-color-border) dashed var(--p-border-width-025);
  padding: 0 var(--p-space-200) 0 var(--p-space-300);
  height: 28px;
  cursor: pointer;
  color: var(--p-color-text);
  display: flex;
  align-items: center;
  justify-content: center;
  outline: inherit;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include focus-ring($border-width: var(--p-border-width-025));

  path {
    fill: var(--p-color-icon);
  }

  @media #{$p-breakpoints-md-up} {
    font-size: var(--p-font-size-300);
    line-height: var(--p-font-line-height-400);
    height: 24px;
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    padding: 0 0.375rem 0 var(--p-space-200);
  }

  &:hover,
  &:focus {
    background: transparent;
    border-color: var(--p-color-border-hover);

    path {
      fill: var(--p-color-icon-hover);
    }
  }

  &:hover {
    border-style: solid;
  }

  &:focus {
    outline-offset: var(--p-border-width-050);
  }

  &:active {
    background: var(--p-color-bg-surface-tertiary);
    border-color: var(--p-color-border-hover);
  }

  &[aria-disabled='true'] {
    background: var(--p-color-bg-fill-disabled);
    border-color: transparent;
    color: var(--p-color-text-disabled);
    cursor: default;

    path {
      fill: var(--p-color-icon-disabled);
    }
  }

  &:focus-visible:not(:active) {
    // stylelint-disable-next-line -- no way to set focus ring without mixin currently
    @include focus-ring($style: 'focused');
  }

  &::after {
    border-radius: var(--p-border-radius-200);
  }

  span {
    margin-right: var(--p-space-050);

    @media #{$p-breakpoints-md-up} {
      margin-right: var(--p-space-025);
    }
  }

  svg {
    width: var(--p-space-500);

    @media #{$p-breakpoints-md-up} {
      width: var(--p-space-400);
    }
  }
}

@media #{$p-breakpoints-md-down} {
  .FiltersWrapperWithAddButton {
    position: relative;

    .FiltersInner {
      padding: var(--p-space-200);
      padding-right: 0;
    }
  }

  .AddFilterActivatorMultiple {
    position: sticky;
    z-index: var(--p-z-index-1);
    top: 0;
    right: 0;
    display: flex;
    padding: var(--p-space-100) var(--p-space-400) var(--p-space-100) 0;
    background: var(--p-color-bg-surface);
    margin-left: var(--p-space-200);

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -12px;
      width: 12px;
      height: 100%;
      pointer-events: none;
      // stylelint-disable -- needed to create the fade effect
      background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0) 0%,
        var(--p-color-bg-surface) 70%,
        var(--p-color-bg-surface) 100%
      );
      // stylelint-enable
    }

    .AddFilter {
      padding: var(--p-space-300) var(--p-space-200);

      // stylelint-disable-next-line selector-max-combinators -- required to hide the text of the button
      span {
        display: none;
      }
    }
  }
}

.FiltersStickyArea {
  position: relative;
  display: flex;
  gap: var(--p-space-100);
  flex-wrap: nowrap;
  align-items: center;
  justify-content: flex-start;

  @media #{$p-breakpoints-md-up} {
    flex-wrap: wrap;
  }
}

.ClearAll {
  margin-left: var(--p-space-200);

  span {
    font-size: var(--p-font-size-300);
    font-weight: var(--p-font-weight-medium);
  }
}

@media #{$p-breakpoints-md-down} {
  .ClearAll {
    margin-left: 0;
    padding-right: var(--p-space-400);

    span {
      font-size: var(--p-font-size-350);
      font-weight: var(--p-font-weight-medium);
    }
  }

  .MultiplePinnedFilterClearAll {
    transform: translateX(-8px);
    position: relative;
    z-index: var(--p-z-index-1);
    margin-left: 0;
    padding-right: var(--p-space-400);
  }
}
