@import '../../../../styles/common';

.ActionContainer {
  // stylelint-disable -- Polaris component custom properties
  --pc-mapped-actions-image-size: 20px;
  --pc-mapped-actions-item-min-height: var(--p-space-1000);
  --pc-mapped-actions-item-vertical-padding: calc(
    (var(--pc-mapped-actions-item-min-height) - var(--p-font-line-height-500)) /
      2
  );
  // stylelint-enable
  margin-bottom: var(--p-space-300);
}

[data-focused] {
  .Action {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    svg {
      fill: var(--p-color-icon);
    }

    &.destructive {
      background-color: var(--p-color-bg-surface-critical-active);
    }

    &:hover {
      background-color: transparent;
    }
  }
}

.Action {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include focus-ring;
  display: block;
  flex: 1;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  min-height: var(--pc-mapped-actions-item-min-height);
  text-align: left;
  cursor: pointer;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  padding: var(--pc-mapped-actions-item-vertical-padding) var(--p-space-200);
  // stylelint-disable-next-line -- using pre-existing private pc token
  margin: calc(-1 * var(--pc-mapped-actions-item-vertical-padding))
    calc(-1 * var(--p-space-300));
  border-radius: var(--p-border-radius-200);

  &:hover {
    background-color: var(--p-color-bg-surface-hover);
    text-decoration: none;

    @media (-ms-high-contrast: active) {
      outline: var(--p-border-width-025) solid windowText;
    }
  }

  &.selected {
    background-color: var(--p-color-bg-surface-brand-selected);

    svg {
      fill: var(--p-color-icon-emphasis);
    }
  }

  &:active {
    background-color: var(--p-color-bg-surface-active);

    svg {
      fill: var(--p-color-icon-emphasis);
    }
  }

  &:focus-visible:not(:active) {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    @include focus-ring($style: 'focused');
  }

  &.destructive {
    color: var(--p-color-text-critical);

    svg {
      fill: var(--p-color-icon-critical);
    }

    &:hover {
      background-color: var(--p-color-bg-surface-critical-hover);
    }

    // stylelint-disable-next-line selector-max-class -- generated by polaris-migrator DO NOT COPY
    &:active,
    &.selected {
      background-color: var(--p-color-bg-surface-critical-active);
    }
  }

  &.disabled {
    background-image: none;
    color: var(--p-color-text-disabled);

    // stylelint-disable-next-line selector-max-class, selector-max-specificity, selector-max-combinators -- generated by polaris-migrator DO NOT COPY
    .Prefix svg,
    .Suffix svg {
      fill: var(--p-color-icon-disabled);
    }
  }
}

.Content {
  display: flex;
  align-items: center;
}

.Prefix {
  display: flex;
  flex: 0 0 auto;
  justify-content: center;
  align-items: center;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  height: var(--pc-mapped-actions-image-size);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  width: var(--pc-mapped-actions-image-size);
  border-radius: var(--p-border-radius-100);

  // We need the negative margin to ensure that the image does not set
  // the minimum height of the action item.
  // stylelint-disable -- generated by polaris-migrator DO NOT COPY
  margin: calc(-0.5 * var(--pc-mapped-actions-image-size)) var(--p-space-400)
    calc(-0.5 * var(--pc-mapped-actions-image-size)) 0;
  margin-right: var(--p-space-200);
  // stylelint-enable
  background-size: cover;
  background-position: center center;

  svg {
    fill: var(--p-color-icon);
  }
}

.Suffix {
  margin-left: var(--p-space-400);

  svg {
    fill: var(--p-color-icon);
  }
}

.Text {
  min-width: 0;
  max-width: 100%;
  flex: 1 1 auto;

  .ContentWrap {
    // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
    @include text-breakword;
  }
}
