@import '../../../../styles/common';
@import '../../../../styles/shared/typography';

// stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
$min-height: control-height();
$control-vertical-adjustment: 2px;

.Option {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include unstyled-button;
  width: 100%;
  min-height: $min-height;
  text-align: left;
  text-decoration: none;
  border-radius: var(--p-border-radius-100);
  margin-top: var(--p-space-100);
  color: inherit;

  &:visited {
    color: inherit;
  }

  &:first-child {
    margin-top: 0;
  }
}

.SingleSelectOption {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include unstyled-button;
  text-align: left;

  display: flex;
  flex-wrap: nowrap;
  justify-content: space-between;

  // stylelint-disable-next-line selector-max-specificity -- required for focus-visible support
  &.focused:focus-visible:not(:active) {
    outline: var(--p-border-width-050) solid var(--p-color-border-focus);
    outline-offset: var(--p-space-025);
    background-color: var(--p-color-bg-surface-secondary-hover);
  }

  &.active {
    background: var(--p-color-bg-surface-secondary-selected);
  }

  &:not(.disabled) {
    color: inherit;
  }

  // stylelint-disable-next-line selector-max-specificity -- specificity buster
  &.select,
  &.select:hover:not(.disabled),
  &.active {
    font-weight: var(--p-font-weight-semibold);
  }

  .Media {
    padding: 0 var(--p-space-200) 0 0;
  }
}

.Label,
.SingleSelectOption,
.MultiSelectOption {
  display: flex;
  align-items: flex-start;
  width: 100%;
  cursor: pointer;
  border-radius: var(--p-border-radius-200);
  padding: var(--p-space-150);
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include text-breakword;

  &:hover:not(.disabled) {
    background-color: var(--p-color-bg-surface-secondary-hover);
  }

  &:active:not(.disabled) {
    background: var(--p-color-bg-surface-secondary-active);
  }

  // stylelint-disable-next-line selector-max-specificity -- specificity buster
  &.select,
  &.select:hover:not(.disabled) {
    background-color: var(--p-color-bg-surface-secondary-selected);
    // stylelint-disable-next-line -- no way to select parent Checkbox class without :has()
    &.CheckboxLabel {
      background-color: transparent;
    }

    // stylelint-disable-next-line selector-max-specificity -- recolor icon on select
    svg {
      fill: var(--p-color-icon-active);
    }
  }

  // stylelint-disable-next-line selector-max-specificity -- style consolidation
  &:hover:not(.disabled),
  &:active:not(.disabled),
  &.select,
  &.select:hover:not(.disabled) {
    outline: var(--p-border-width-025) solid transparent;
  }

  .Media {
    padding: 0 var(--p-space-200) 0 0;
  }

  &.disabled {
    background: transparent;
    cursor: default;
    color: var(--p-color-text-disabled);
  }
}

.MultiSelectOption {
  // stylelint-disable-next-line selector-max-specificity -- specificity buster
  &:active:not(.disabled),
  &.select,
  &.select:hover:not(.disabled),
  &:hover:not(.disabled) {
    background-color: transparent;
  }
}

// stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
.disabled .Media svg {
  fill: var(--p-color-icon-disabled);
}

.Media svg {
  fill: var(--p-color-icon);
}

.verticalAlignTop {
  align-items: flex-start;
}

.verticalAlignCenter {
  align-items: center;
}

.verticalAlignBottom {
  align-items: flex-end;
}

.Icon {
  margin-left: var(--p-space-200);

  svg {
    fill: var(--p-color-icon-brand);
  }
}

.Checkbox {
  box-sizing: border-box;
  display: flex;
  flex-shrink: 0;
  width: 20px;
  height: 20px;
  margin-right: var(--p-space-200);
  align-items: center;
}
