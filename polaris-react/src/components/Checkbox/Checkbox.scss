@import '../../styles/common';

.Checkbox {
  position: relative;
  margin: var(--p-space-025);
}

.ChoiceLabel:hover .Backdrop {
  #{$se23} & {
    border-color: var(--p-color-border-input-hover);
    background-color: var(--p-color-bg-input-hover-experimental);
  }
}

// stylelint-disable selector-max-specificity, selector-max-class -- Much easier to read the rules when written like this
.Input {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include visually-hidden;

  &:focus-visible {
    + .Backdrop {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      @include focus-ring($style: 'focused');

      #{$se23} & {
        outline: var(--p-border-width-2) solid
          var(--p-color-border-interactive-focus);
        outline-offset: var(--p-space-025);
        background-color: var(--p-color-bg-input-hover-experimental);
        border-color: var(--p-color-border-input-hover);
        border-width: var(--p-border-width-2-experimental);
      }
    }
  }

  &:active:not(:disabled),
  &:checked,
  &.Input-indeterminate {
    + .Backdrop {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      @include control-backdrop(active);
      #{$se23} & {
        border-width: var(--p-border-width-2-experimental);
      }
    }

    ~ .Icon {
      transition: opacity var(--p-motion-duration-150) var(--p-motion-ease),
        transform var(--p-motion-duration-150) var(--p-motion-ease);
      transform: translate3d(-50%, -50%, 0) scale(1);
      opacity: 1;
    }
  }

  &:disabled {
    + .Backdrop {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      @include control-backdrop(disabled);
      #{$se23} & {
        // We set the border-color to transparent here
        // in order for the background color to bleed all the way to the edge of the element.
        border-color: transparent;
        background-color: var(--p-color-bg-disabled);
      }
    }
  }

  &:disabled:checked,
  &:disabled.Input-indeterminate {
    + .Backdrop {
      background: var(--p-color-border-disabled);

      &::before {
        background: var(--p-color-border-disabled);
      }
      #{$se23} & {
        background-color: var(--p-color-bg-disabled);
        // stylelint-disable-next-line max-nesting-depth, selector-max-combinators -- pse23 override
        &::before {
          background: var(--p-color-bg-disabled);
        }
      }
    }
  }
  // stylelint-enable selector-max-specificity, selector-max-class
}

.Backdrop {
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include control-backdrop;
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
  @include focus-ring($border-width: var(--p-border-width-2));

  #{$se23} & {
    /* stylelint-disable-next-line polaris/border/polaris/at-rule-disallowed-list -- se23 override */
    @include no-focus-ring;
    border: var(--p-border-width-1-experimental) solid
      var(--p-color-border-input);
  }
}

.Icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: 50% 50%;
  pointer-events: none;

  transform: translate3d(-50%, -50%, 0) scale(0.25);
  opacity: 0;
  transition: opacity var(--p-motion-duration-100) var(--p-motion-ease),
    transform var(--p-motion-duration-100) var(--p-motion-ease);

  svg {
    fill: var(--p-color-icon-on-color);
  }

  @media (-ms-high-contrast: active) {
    fill: windowText;
  }
}

// stylelint-disable selector-max-specificity, selector-max-class, selector-max-combinators, selector-max-compound-selectors -- generated by polaris-migrator DO NOT COPY
.error {
  .Icon svg {
    fill: var(--p-color-icon-on-color);
  }

  .Backdrop {
    &,
    .ChoiceLabel:hover & {
      // stylelint-disable-next-line -- generated by polaris-migrator DO NOT COPY
      @include control-backdrop(error);
      #{$se23} & {
        border-color: var(--p-color-border-critical-strong-experimental);
        background-color: var(--p-color-bg-critical-subdued);
      }
    }
  }

  .Input:checked,
  .Input:active,
  .Input.Input-indeterminate {
    + .Backdrop::before {
      background-color: var(--p-color-border-critical);
      #{$se23} & {
        background-color: var(--p-color-bg-critical-strong-active);
      }
    }
  }

  .Input:focus-visible + .Backdrop {
    &,
    .ChoiceLabel:hover & {
      #{$se23} & {
        border-color: var(--p-color-border-critical-strong-experimental);
        background-color: var(--p-color-bg-critical-subdued);
      }
    }
  }
}
// stylelint-enable selector-max-specificity, selector-max-class, selector-max-combinators, selector-max-compound-selectors
