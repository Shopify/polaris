@function control-height() {
  @return 36px;
}

@function control-vertical-padding() {
  @return calc((36px - var(--p-font-line-height-3) - var(--p-space-05)) / 2);
}

@mixin control-backdrop($style: base) {
  @if $style == base {
    position: relative;
    border: var(--p-border-width-2) solid var(--p-color-border-input);
    background-color: var(--p-color-bg);
    border-radius: var(--p-border-radius-1);

    &::before {
      content: '';
      position: absolute;
      top: calc(-1 * var(--p-border-width-2));
      right: calc(-1 * var(--p-border-width-2));
      bottom: calc(-1 * var(--p-border-width-2));
      left: calc(-1 * var(--p-border-width-2));
      border-radius: var(--p-border-radius-1);
      background-color: var(--p-color-bg-interactive);
      opacity: 0;
      transform: scale(0.25);
      transition: opacity var(--p-duration-100) var(--p-ease),
        transform var(--p-duration-100) var(--p-ease);
    }

    &.hover,
    &:hover {
      cursor: pointer;
      border-color: var(--p-color-border-hover);
    }
  } @else if $style == active {
    border-color: var(--p-color-border-interactive);

    &::before {
      opacity: 1;
      transform: scale(1);
      @media (-ms-high-contrast: active) {
        border: var(--p-border-width-2) solid windowText;
      }
    }
  } @else if $style == disabled {
    border-color: var(--p-color-border-disabled);

    &::before {
      background-color: var(--p-color-bg-disabled);
    }

    &:hover {
      cursor: default;
    }
  } @else if $style == error {
    border-color: var(--p-color-border-critical);
    background-color: var(--p-color-bg-critical);

    &.hover,
    &:hover {
      border-color: var(--p-color-border-critical);
    }

    &::before {
      background-color: var(--p-color-border-critical);
    }
  }
}
