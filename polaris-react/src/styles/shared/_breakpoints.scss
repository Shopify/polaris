/* stylelint-disable unit-disallowed-list */


@function breakpoint($value, $inclusive: true) {
  $value-unit: unit($value);
  // Down media condition breakpoints are being subtracted by 0.05px to prevent
  // them from overwriting up media queries. We experimented with multiple offsets
  // and felt that 0.05px would be the safest across different pixel densities.
  $offset: -0.003125em; // -0.05px

  @if $value-unit == 'em' {
    @return $value + if($inclusive, 0, $offset);
  } @else if $value-unit == 'px' {
    @return ($value / 16px * 1em) + if($inclusive, 0, $offset);
  } @else {
    @error 'The $value passed into breakpoint() must be a pixel or em value. Got "#{$value}"';
  }
}

@function breakpoints-up($value) {
  @return '(min-width: #{breakpoint($value)})';
}

@function breakpoints-down($value, $inclusive: false) {
  @return '(max-width: #{breakpoint($value, $inclusive)})';
}

$page-max-width: $layout-width-primary-max + $layout-width-secondary-max + $layout-width-inner-spacing-base;

$not-condensed-content: breakpoint($layout-width-page-content-not-condensed);

$breakpoints-page-content-when-layout-not-stacked-up: breakpoints-up(800px);
$breakpoints-page-content-when-layout-stacked-down: breakpoints-down(1040px, $inclusive: true);

$breakpoints-page-content-when-partially-condensed-down: breakpoints-down(984px, $inclusive: true);

$breakpoints-page-content-when-not-fully-condensed-up: breakpoints-up(490px);

$breakpoints-not-condensed-content-up: breakpoints-up($not-condensed-content);
