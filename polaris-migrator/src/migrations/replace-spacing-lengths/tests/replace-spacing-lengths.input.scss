.space {
  // LENGTHS
  // Migrate
  padding: 16px;
  padding: 1rem;
  padding: 16px 16px;
  padding: 1rem 1rem;
  padding: 16px 1rem;
  padding: 0 16px;
  padding: 1rem 0;
  padding: 16px 4in;
  padding: 16px 1em;
  padding: (16px + 16px) 16px;
  // Ignore
  padding: 0;
  padding: 1;
  padding: 2;
  padding: #{16px + 16px};
  padding: layout-width(nav);
  padding: 10em;
  padding: var(--var);
  padding: var(--p-space-4);
  padding: var(--p-space-4, 16px);
  // Comment
  padding: 10px;
  padding: 10rem;
  padding: 10px 10px;
  padding: 16px 10px;
  padding: 10rem 10rem;
  padding: 1rem 10rem;
  padding: 10px 10rem;
  padding: 16px 10rem;
  padding: 10px 1rem;
  padding: 16px -16px;
  padding: 16px + 16px;
  padding: 16px + 16px 16px;
  padding: $var + 16px;
  padding: calc(16px + 16px);
  padding: 16px + #{16px + 16px};
  // Skip negative lengths. Need to discuss replacement strategy e.g.
  // calc(-1 * var(--p-space-*)) vs var(--p-space--*)
  padding: -16px;
  padding: -10px;

  // REM FUNCTION
  // Migrate
  padding: rem(16px);
  padding: rem(16px) rem(16px);
  padding: rem(16px) 16px;
  padding: rem(16px) 4in;
  padding: rem(16px) 1em;
  // Ignore
  padding: calc(10rem + var(--p-choice-size, #{rem(16px)}));
  padding: calc(10rem + var(--p-choice-size, #{rem(10px)}));
  // Comment
  padding: rem(10px);
  padding: rem(10px) rem(10px);
  padding: rem(16px) rem(10px);
  padding: rem(16px) -16px;
  padding: rem(16px) + 16px;
  padding: rem($var * 16px);
}
