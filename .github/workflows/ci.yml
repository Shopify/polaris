name: CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - 'main'

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.0'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --frozen-lockfile
      - run: yarn run type-check && yarn run build
      - run: yarn run lint
      - run: yarn run check:custom-properties
      - run: yarn run test --coverage && yarn run codecov

  accessibility_test:
    name: 'Accessibility test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.0'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --frozen-lockfile
      - run: yarn run storybook:build --quiet
      - run: node ./scripts/accessibility-check.js
        env:
          STORYBOOK_DISABLE_DOCS: 1

  shrink_ray:
    name: 'Shrink ray'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.0'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --frozen-lockfile
      - run: node ./scripts/build-shrink-ray.js
        env:
          SHRINK_RAY_API_KEY: ${{ secrets.SHRINK_RAY_API_KEY }}
          GH_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GH_BASE_SHA: ${{ github.event.pull_request.base.sha }}

  visual_regression_test:
    name: 'Visual regression test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Chromatic git history to track changes

      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.0'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn --frozen-lockfile
      - run: yarn storybook:build

      - uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_TOKEN }}
          storybookBuildDir: 'build/storybook/static'
          autoAcceptChanges: 'main'
          exitZeroOnChanges: true
          exitOnceUploaded: true

      - uses: percy/storybook-action@v0.1.6
        with:
          custom-command: 'yarn run percy-storybook --build_dir=build/storybook/static'
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
